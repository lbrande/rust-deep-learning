/* automatically generated by rust-bindgen */

pub const MKL_DOMAIN_ALL: u32 = 0;
pub const MKL_DOMAIN_BLAS: u32 = 1;
pub const MKL_DOMAIN_FFT: u32 = 2;
pub const MKL_DOMAIN_VML: u32 = 3;
pub const MKL_DOMAIN_PARDISO: u32 = 4;
pub const MKL_CBWR_BRANCH: u32 = 1;
pub const MKL_CBWR_ALL: i32 = -1;
pub const MKL_CBWR_UNSET_ALL: u32 = 0;
pub const MKL_CBWR_OFF: u32 = 0;
pub const MKL_CBWR_BRANCH_OFF: u32 = 1;
pub const MKL_CBWR_AUTO: u32 = 2;
pub const MKL_CBWR_COMPATIBLE: u32 = 3;
pub const MKL_CBWR_SSE2: u32 = 4;
pub const MKL_CBWR_SSSE3: u32 = 6;
pub const MKL_CBWR_SSE4_1: u32 = 7;
pub const MKL_CBWR_SSE4_2: u32 = 8;
pub const MKL_CBWR_AVX: u32 = 9;
pub const MKL_CBWR_AVX2: u32 = 10;
pub const MKL_CBWR_AVX512_MIC: u32 = 11;
pub const MKL_CBWR_AVX512: u32 = 12;
pub const MKL_CBWR_AVX512_MIC_E1: u32 = 13;
pub const MKL_CBWR_SUCCESS: u32 = 0;
pub const MKL_CBWR_ERR_INVALID_SETTINGS: i32 = -1;
pub const MKL_CBWR_ERR_INVALID_INPUT: i32 = -2;
pub const MKL_CBWR_ERR_UNSUPPORTED_BRANCH: i32 = -3;
pub const MKL_CBWR_ERR_UNKNOWN_BRANCH: i32 = -4;
pub const MKL_CBWR_ERR_MODE_CHANGE_FAILURE: i32 = -8;
pub const MKL_CBWR_SSE3: u32 = 5;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _MKL_Complex8 {
    pub real: f32,
    pub imag: f32,
}
#[test]
fn bindgen_test_layout__MKL_Complex8() {
    assert_eq!(
        ::std::mem::size_of::<_MKL_Complex8>(),
        8usize,
        concat!("Size of: ", stringify!(_MKL_Complex8))
    );
    assert_eq!(
        ::std::mem::align_of::<_MKL_Complex8>(),
        4usize,
        concat!("Alignment of ", stringify!(_MKL_Complex8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_MKL_Complex8>())).real as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex8),
            "::",
            stringify!(real)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_MKL_Complex8>())).imag as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex8),
            "::",
            stringify!(imag)
        )
    );
}
pub type MKL_Complex8 = _MKL_Complex8;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _MKL_Complex16 {
    pub real: f64,
    pub imag: f64,
}
#[test]
fn bindgen_test_layout__MKL_Complex16() {
    assert_eq!(
        ::std::mem::size_of::<_MKL_Complex16>(),
        16usize,
        concat!("Size of: ", stringify!(_MKL_Complex16))
    );
    assert_eq!(
        ::std::mem::align_of::<_MKL_Complex16>(),
        8usize,
        concat!("Alignment of ", stringify!(_MKL_Complex16))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_MKL_Complex16>())).real as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex16),
            "::",
            stringify!(real)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_MKL_Complex16>())).imag as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex16),
            "::",
            stringify!(imag)
        )
    );
}
pub type MKL_Complex16 = _MKL_Complex16;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MKLVersion {
    pub MajorVersion: ::std::os::raw::c_int,
    pub MinorVersion: ::std::os::raw::c_int,
    pub UpdateVersion: ::std::os::raw::c_int,
    pub ProductStatus: *mut ::std::os::raw::c_char,
    pub Build: *mut ::std::os::raw::c_char,
    pub Processor: *mut ::std::os::raw::c_char,
    pub Platform: *mut ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_MKLVersion() {
    assert_eq!(
        ::std::mem::size_of::<MKLVersion>(),
        48usize,
        concat!("Size of: ", stringify!(MKLVersion))
    );
    assert_eq!(
        ::std::mem::align_of::<MKLVersion>(),
        8usize,
        concat!("Alignment of ", stringify!(MKLVersion))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).MajorVersion as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(MajorVersion)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).MinorVersion as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(MinorVersion)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).UpdateVersion as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(UpdateVersion)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).ProductStatus as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(ProductStatus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).Build as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(Build)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).Processor as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(Processor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MKLVersion>())).Platform as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(Platform)
        )
    );
}
pub const MKL_LAYOUT_MKL_ROW_MAJOR: MKL_LAYOUT = 101;
pub const MKL_LAYOUT_MKL_COL_MAJOR: MKL_LAYOUT = 102;
pub type MKL_LAYOUT = u32;
pub const MKL_TRANSPOSE_MKL_NOTRANS: MKL_TRANSPOSE = 111;
pub const MKL_TRANSPOSE_MKL_TRANS: MKL_TRANSPOSE = 112;
pub const MKL_TRANSPOSE_MKL_CONJTRANS: MKL_TRANSPOSE = 113;
pub type MKL_TRANSPOSE = u32;
pub const MKL_UPLO_MKL_UPPER: MKL_UPLO = 121;
pub const MKL_UPLO_MKL_LOWER: MKL_UPLO = 122;
pub type MKL_UPLO = u32;
pub const MKL_DIAG_MKL_NONUNIT: MKL_DIAG = 131;
pub const MKL_DIAG_MKL_UNIT: MKL_DIAG = 132;
pub type MKL_DIAG = u32;
pub const MKL_SIDE_MKL_LEFT: MKL_SIDE = 141;
pub const MKL_SIDE_MKL_RIGHT: MKL_SIDE = 142;
pub type MKL_SIDE = u32;
pub const MKL_COMPACT_PACK_MKL_COMPACT_SSE: MKL_COMPACT_PACK = 181;
pub const MKL_COMPACT_PACK_MKL_COMPACT_AVX: MKL_COMPACT_PACK = 182;
pub const MKL_COMPACT_PACK_MKL_COMPACT_AVX512: MKL_COMPACT_PACK = 183;
pub type MKL_COMPACT_PACK = u32;
extern "C" {
    pub fn XERBLA(
        srname: *const ::std::os::raw::c_char,
        info: *const ::std::os::raw::c_int,
        lsrname: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn LSAME(
        ca: *const ::std::os::raw::c_char,
        cb: *const ::std::os::raw::c_char,
        lca: ::std::os::raw::c_int,
        lcb: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn SCABS1(c: *const MKL_Complex8) -> f32;
}
extern "C" {
    pub fn SASUM(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn SAXPY(
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SAXPBY(
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SAXPYI(
        nz: *const ::std::os::raw::c_int,
        a: *const f32,
        x: *const f32,
        indx: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn SCASUM(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn SCNRM2(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn SCOPY(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SDOT(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn SDSDOT(
        n: *const ::std::os::raw::c_int,
        sb: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn SDOTI(
        nz: *const ::std::os::raw::c_int,
        x: *const f32,
        indx: *const ::std::os::raw::c_int,
        y: *const f32,
    ) -> f32;
}
extern "C" {
    pub fn SGTHR(
        nz: *const ::std::os::raw::c_int,
        y: *const f32,
        x: *mut f32,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGTHRZ(
        nz: *const ::std::os::raw::c_int,
        y: *mut f32,
        x: *mut f32,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SNRM2(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn SROT(
        n: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn SROTG(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32);
}
extern "C" {
    pub fn SROTI(
        nz: *const ::std::os::raw::c_int,
        x: *mut f32,
        indx: *const ::std::os::raw::c_int,
        y: *mut f32,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn SROTM(
        n: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
        param: *const f32,
    );
}
extern "C" {
    pub fn SROTMG(d1: *mut f32, d2: *mut f32, x1: *mut f32, y1: *const f32, param: *mut f32);
}
extern "C" {
    pub fn SSCAL(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSCTR(
        nz: *const ::std::os::raw::c_int,
        x: *const f32,
        indx: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn SSWAP(
        n: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ISAMAX(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ISAMIN(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CAXPY(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CAXPBY(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CAXPYI(
        nz: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn CCOPY(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CDOTC(
        pres: *mut MKL_Complex8,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CDOTCI(
        pres: *mut MKL_Complex8,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
    );
}
extern "C" {
    pub fn CDOTU(
        pres: *mut MKL_Complex8,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CDOTUI(
        pres: *mut MKL_Complex8,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
    );
}
extern "C" {
    pub fn CGTHR(
        nz: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGTHRZ(
        nz: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        x: *mut MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CROTG(a: *mut MKL_Complex8, b: *const MKL_Complex8, c: *mut f32, s: *mut MKL_Complex8);
}
extern "C" {
    pub fn CSCAL(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CSCTR(
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn CSROT(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn CSSCAL(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CSWAP(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ICAMAX(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ICAMIN(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn DCABS1(z: *const MKL_Complex16) -> f64;
}
extern "C" {
    pub fn DASUM(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn DAXPY(
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DAXPBY(
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DAXPYI(
        nz: *const ::std::os::raw::c_int,
        a: *const f64,
        x: *const f64,
        indx: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn DCOPY(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DDOT(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn DSDOT(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn DDOTI(
        nz: *const ::std::os::raw::c_int,
        x: *const f64,
        indx: *const ::std::os::raw::c_int,
        y: *const f64,
    ) -> f64;
}
extern "C" {
    pub fn DGTHR(
        nz: *const ::std::os::raw::c_int,
        y: *const f64,
        x: *mut f64,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGTHRZ(
        nz: *const ::std::os::raw::c_int,
        y: *mut f64,
        x: *mut f64,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DNRM2(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn DROT(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn DROTG(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64);
}
extern "C" {
    pub fn DROTI(
        nz: *const ::std::os::raw::c_int,
        x: *mut f64,
        indx: *const ::std::os::raw::c_int,
        y: *mut f64,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn DROTM(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        param: *const f64,
    );
}
extern "C" {
    pub fn DROTMG(d1: *mut f64, d2: *mut f64, x1: *mut f64, y1: *const f64, param: *mut f64);
}
extern "C" {
    pub fn DSCAL(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSCTR(
        nz: *const ::std::os::raw::c_int,
        x: *const f64,
        indx: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn DSWAP(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DZASUM(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn DZNRM2(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn IDAMAX(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn IDAMIN(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ZAXPY(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZAXPBY(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZAXPYI(
        nz: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn ZCOPY(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZDOTC(
        pres: *mut MKL_Complex16,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZDOTCI(
        pres: *mut MKL_Complex16,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
    );
}
extern "C" {
    pub fn ZDOTU(
        pres: *mut MKL_Complex16,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZDOTUI(
        pres: *mut MKL_Complex16,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
    );
}
extern "C" {
    pub fn ZDROT(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn ZDSCAL(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGTHR(
        nz: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGTHRZ(
        nz: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        x: *mut MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZROTG(
        a: *mut MKL_Complex16,
        b: *const MKL_Complex16,
        c: *mut f64,
        s: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn ZSCAL(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZSCTR(
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn ZSWAP(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn IZAMAX(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn IZAMIN(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn SGBMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGEMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGER(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
        a: *mut f32,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSBMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSPMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        ap: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSPR(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        ap: *mut f32,
    );
}
extern "C" {
    pub fn SSPR2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
        ap: *mut f32,
    );
}
extern "C" {
    pub fn SSYMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSYR(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        a: *mut f32,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSYR2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
        a: *mut f32,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STBMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STBSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STPMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f32,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STPSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f32,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STRMV(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STRSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGEM2VU(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x1: *const f32,
        incx1: *const ::std::os::raw::c_int,
        x2: *const f32,
        incx2: *const ::std::os::raw::c_int,
        beta: *const f32,
        y1: *mut f32,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut f32,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGBMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGERC(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGERU(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHBMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHEMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHER(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHER2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHPMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        ap: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHPR(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn CHPR2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn CTBMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTBSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTPMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTPSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTRMV(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTRSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEM2VC(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x1: *const MKL_Complex8,
        incx1: *const ::std::os::raw::c_int,
        x2: *const MKL_Complex8,
        incx2: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y1: *mut MKL_Complex8,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut MKL_Complex8,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SCGEMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGBMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGEMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGER(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSBMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSPMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        ap: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSPR(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        ap: *mut f64,
    );
}
extern "C" {
    pub fn DSPR2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        ap: *mut f64,
    );
}
extern "C" {
    pub fn DSYMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSYR(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSYR2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTBMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTBSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTPMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTPSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTRMV(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTRSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGEM2VU(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x1: *const f64,
        incx1: *const ::std::os::raw::c_int,
        x2: *const f64,
        incx2: *const ::std::os::raw::c_int,
        beta: *const f64,
        y1: *mut f64,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut f64,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGBMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGERC(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGERU(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHBMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHEMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHER(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHER2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHPMV(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        ap: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHPR(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn ZHPR2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn ZTBMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTBSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTPMV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTPSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex16,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTRMV(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTRSV(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEM2VC(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x1: *const MKL_Complex16,
        incx1: *const ::std::os::raw::c_int,
        x2: *const MKL_Complex16,
        incx2: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y1: *mut MKL_Complex16,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut MKL_Complex16,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DZGEMV(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGEMM(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGEMM_ALLOC(
        identifier: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    pub fn SGEMM_PACK(
        identifier: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        src: *const f32,
        ld: *const ::std::os::raw::c_int,
        dest: *mut f32,
    );
}
extern "C" {
    pub fn SGEMM_COMPUTE(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGEMM_FREE(mat: *mut f32);
}
extern "C" {
    pub fn SGEMM_BATCH(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const f32,
        a_array: *mut *const f32,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const f32,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const f32,
        c_array: *mut *mut f32,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SGEMMT(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSYMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSYR2K(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSYRK(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STRMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *mut f32,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STRSM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *mut f32,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn STRSM_BATCH(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const f32,
        a_array: *mut *const f32,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut f32,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEMM(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEMM_BATCH(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex8,
        a_array: *mut *const MKL_Complex8,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex8,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex8,
        c_array: *mut *mut MKL_Complex8,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SCGEMM(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEMM3M(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEMM3M_BATCH(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex8,
        a_array: *mut *const MKL_Complex8,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex8,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex8,
        c_array: *mut *mut MKL_Complex8,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CGEMMT(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTRSM_BATCH(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex8,
        a_array: *mut *const MKL_Complex8,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHEMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHER2K(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CHERK(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CSYMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CSYR2K(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CSYRK(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTRMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CTRSM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGEMM(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGEMM_ALLOC(
        identifier: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
    ) -> *mut f64;
}
extern "C" {
    pub fn DGEMM_PACK(
        identifier: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        src: *const f64,
        ld: *const ::std::os::raw::c_int,
        dest: *mut f64,
    );
}
extern "C" {
    pub fn DGEMM_COMPUTE(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGEMM_FREE(mat: *mut f64);
}
extern "C" {
    pub fn DGEMM_BATCH(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const f64,
        a_array: *mut *const f64,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const f64,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const f64,
        c_array: *mut *mut f64,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DGEMMT(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSYMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSYR2K(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *mut f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DSYRK(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTRMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTRSM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DTRSM_BATCH(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const f64,
        a_array: *mut *const f64,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut f64,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEMM(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEMM_BATCH(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex16,
        a_array: *mut *const MKL_Complex16,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex16,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex16,
        c_array: *mut *mut MKL_Complex16,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DZGEMM(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEMM3M(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEMM3M_BATCH(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex16,
        a_array: *mut *const MKL_Complex16,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex16,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex16,
        c_array: *mut *mut MKL_Complex16,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZGEMMT(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHEMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHER2K(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZHERK(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZSYMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZSYR2K(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZSYRK(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTRMM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTRSM(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ZTRSM_BATCH(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex16,
        a_array: *mut *const MKL_Complex16,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GEMM_S8U8S32(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        offsetc: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const ::std::os::raw::c_char,
        lda: *const ::std::os::raw::c_int,
        ao: *const ::std::os::raw::c_char,
        b: *const ::std::os::raw::c_uchar,
        ldb: *const ::std::os::raw::c_int,
        bo: *const ::std::os::raw::c_char,
        beta: *const f32,
        c: *mut ::std::os::raw::c_int,
        ldc: *const ::std::os::raw::c_int,
        co: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GEMM_S16S16S32(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        offsetc: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const ::std::os::raw::c_short,
        lda: *const ::std::os::raw::c_int,
        ao: *const ::std::os::raw::c_short,
        b: *const ::std::os::raw::c_short,
        ldb: *const ::std::os::raw::c_int,
        bo: *const ::std::os::raw::c_short,
        beta: *const f32,
        c: *mut ::std::os::raw::c_int,
        ldc: *const ::std::os::raw::c_int,
        co: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn xerbla(
        srname: *const ::std::os::raw::c_char,
        info: *const ::std::os::raw::c_int,
        lsrname: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn lsame(
        ca: *const ::std::os::raw::c_char,
        cb: *const ::std::os::raw::c_char,
        lca: ::std::os::raw::c_int,
        lcb: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn scabs1(c: *const MKL_Complex8) -> f32;
}
extern "C" {
    pub fn sasum(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn saxpy(
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn saxpby(
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn saxpyi(
        nz: *const ::std::os::raw::c_int,
        a: *const f32,
        x: *const f32,
        indx: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn scasum(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn scnrm2(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn scopy(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sdot(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn sdoti(
        nz: *const ::std::os::raw::c_int,
        x: *const f32,
        indx: *const ::std::os::raw::c_int,
        y: *const f32,
    ) -> f32;
}
extern "C" {
    pub fn sdsdot(
        n: *const ::std::os::raw::c_int,
        sb: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn sgthr(
        nz: *const ::std::os::raw::c_int,
        y: *const f32,
        x: *mut f32,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgthrz(
        nz: *const ::std::os::raw::c_int,
        y: *mut f32,
        x: *mut f32,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn snrm2(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    pub fn srot(
        n: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn srotg(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32);
}
extern "C" {
    pub fn sroti(
        nz: *const ::std::os::raw::c_int,
        x: *mut f32,
        indx: *const ::std::os::raw::c_int,
        y: *mut f32,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn srotm(
        n: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
        param: *const f32,
    );
}
extern "C" {
    pub fn srotmg(d1: *mut f32, d2: *mut f32, x1: *mut f32, y1: *const f32, param: *mut f32);
}
extern "C" {
    pub fn sscal(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssctr(
        nz: *const ::std::os::raw::c_int,
        x: *const f32,
        indx: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn sswap(
        n: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn isamax(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn isamin(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn caxpy(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn caxpby(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn caxpyi(
        nz: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn ccopy(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cdotc(
        pres: *mut MKL_Complex8,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cdotci(
        pres: *mut MKL_Complex8,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
    );
}
extern "C" {
    pub fn cdotu(
        pres: *mut MKL_Complex8,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cdotui(
        pres: *mut MKL_Complex8,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
    );
}
extern "C" {
    pub fn cgthr(
        nz: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgthrz(
        nz: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        x: *mut MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn crotg(a: *mut MKL_Complex8, b: *const MKL_Complex8, c: *mut f32, s: *mut MKL_Complex8);
}
extern "C" {
    pub fn cscal(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn csctr(
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn csrot(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn csscal(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cswap(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn icamax(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn icamin(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dcabs1(z: *const MKL_Complex16) -> f64;
}
extern "C" {
    pub fn dasum(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn daxpy(
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn daxpby(
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn daxpyi(
        nz: *const ::std::os::raw::c_int,
        a: *const f64,
        x: *const f64,
        indx: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn dcopy(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ddot(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn dsdot(
        n: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn ddoti(
        nz: *const ::std::os::raw::c_int,
        x: *const f64,
        indx: *const ::std::os::raw::c_int,
        y: *const f64,
    ) -> f64;
}
extern "C" {
    pub fn dgthr(
        nz: *const ::std::os::raw::c_int,
        y: *const f64,
        x: *mut f64,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgthrz(
        nz: *const ::std::os::raw::c_int,
        y: *mut f64,
        x: *mut f64,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dnrm2(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn drot(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn drotg(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64);
}
extern "C" {
    pub fn droti(
        nz: *const ::std::os::raw::c_int,
        x: *mut f64,
        indx: *const ::std::os::raw::c_int,
        y: *mut f64,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn drotm(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        param: *const f64,
    );
}
extern "C" {
    pub fn drotmg(d1: *mut f64, d2: *mut f64, x1: *mut f64, y1: *const f64, param: *mut f64);
}
extern "C" {
    pub fn dscal(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsctr(
        nz: *const ::std::os::raw::c_int,
        x: *const f64,
        indx: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn dswap(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dzasum(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn dznrm2(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn idamax(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn idamin(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn zaxpy(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zaxpby(
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zaxpyi(
        nz: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn zcopy(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zdotc(
        pres: *mut MKL_Complex16,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zdotci(
        pres: *mut MKL_Complex16,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
    );
}
extern "C" {
    pub fn zdotu(
        pres: *mut MKL_Complex16,
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zdotui(
        pres: *mut MKL_Complex16,
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
    );
}
extern "C" {
    pub fn zdrot(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn zdscal(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgthr(
        nz: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgthrz(
        nz: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        x: *mut MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zrotg(
        a: *mut MKL_Complex16,
        b: *const MKL_Complex16,
        c: *mut f64,
        s: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn zscal(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zsctr(
        nz: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        indx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn zswap(
        n: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn izamax(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn izamin(
        n: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sgbmv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgemv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sger(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
        a: *mut f32,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssbmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sspmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        ap: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sspr(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        ap: *mut f32,
    );
}
extern "C" {
    pub fn sspr2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
        ap: *mut f32,
    );
}
extern "C" {
    pub fn ssymv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssyr(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        a: *mut f32,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssyr2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const ::std::os::raw::c_int,
        y: *const f32,
        incy: *const ::std::os::raw::c_int,
        a: *mut f32,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn stbmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn stbsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn stpmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f32,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn stpsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f32,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn strmv(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn strsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *mut f32,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgem2vu(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x1: *const f32,
        incx1: *const ::std::os::raw::c_int,
        x2: *const f32,
        incx2: *const ::std::os::raw::c_int,
        beta: *const f32,
        y1: *mut f32,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut f32,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgbmv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgemv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgerc(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgeru(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn chbmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn chemv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cher(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cher2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn chpmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        ap: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn chpr(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn chpr2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn ctbmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctbsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctpmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctpsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex8,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctrmv(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctrsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgem2vc(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        x1: *const MKL_Complex8,
        incx1: *const ::std::os::raw::c_int,
        x2: *const MKL_Complex8,
        incx2: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y1: *mut MKL_Complex8,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut MKL_Complex8,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn scgemv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex8,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgbmv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgemv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dger(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsbmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dspmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        ap: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dspr(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        ap: *mut f64,
    );
}
extern "C" {
    pub fn dspr2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        ap: *mut f64,
    );
}
extern "C" {
    pub fn dsymv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsyr(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsyr2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtbmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtbsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtpmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtpsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtrmv(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtrsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgem2vu(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x1: *const f64,
        incx1: *const ::std::os::raw::c_int,
        x2: *const f64,
        incx2: *const ::std::os::raw::c_int,
        beta: *const f64,
        y1: *mut f64,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut f64,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgbmv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgemv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgerc(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgeru(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zhbmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zhemv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zher(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zher2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        a: *mut MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zhpmv(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        ap: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zhpr(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn zhpr2(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        y: *const MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
        ap: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn ztbmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztbsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztpmv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztpsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const MKL_Complex16,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztrmv(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztrsv(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x: *mut MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgem2vc(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        x1: *const MKL_Complex16,
        incx1: *const ::std::os::raw::c_int,
        x2: *const MKL_Complex16,
        incx2: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y1: *mut MKL_Complex16,
        incy1: *const ::std::os::raw::c_int,
        y2: *mut MKL_Complex16,
        incy2: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dzgemv(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const MKL_Complex16,
        incx: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgemm(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgemm_alloc(
        identifier: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    pub fn sgemm_pack(
        identifier: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        src: *const f32,
        ld: *const ::std::os::raw::c_int,
        dest: *mut f32,
    );
}
extern "C" {
    pub fn sgemm_compute(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgemm_free(mat: *mut f32);
}
extern "C" {
    pub fn sgemm_batch(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const f32,
        a_array: *mut *const f32,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const f32,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const f32,
        c_array: *mut *mut f32,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn sgemmt(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssymm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssyr2k(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const f32,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ssyrk(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn strmm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *mut f32,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn strsm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *mut f32,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn strsm_batch(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const f32,
        a_array: *mut *const f32,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut f32,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgemm(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgemm_batch(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex8,
        a_array: *mut *const MKL_Complex8,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex8,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex8,
        c_array: *mut *mut MKL_Complex8,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn scgemm(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const f32,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgemm3m(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgemm3m_batch(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex8,
        a_array: *mut *const MKL_Complex8,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex8,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex8,
        c_array: *mut *mut MKL_Complex8,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgemmt(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn chemm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cher2k(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cherk(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        beta: *const f32,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn csymm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn csyr2k(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn csyrk(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex8,
        c: *mut MKL_Complex8,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctrmm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctrsm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex8,
        a: *const MKL_Complex8,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ctrsm_batch(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex8,
        a_array: *mut *const MKL_Complex8,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut MKL_Complex8,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgemm(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgemm_alloc(
        identifier: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
    ) -> *mut f64;
}
extern "C" {
    pub fn dgemm_pack(
        identifier: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        src: *const f64,
        ld: *const ::std::os::raw::c_int,
        dest: *mut f64,
    );
}
extern "C" {
    pub fn dgemm_compute(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgemm_free(mat: *mut f64);
}
extern "C" {
    pub fn dgemm_batch(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const f64,
        a_array: *mut *const f64,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const f64,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const f64,
        c_array: *mut *mut f64,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dgemmt(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsymm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsyr2k(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dsyrk(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtrmm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtrsm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dtrsm_batch(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const f64,
        a_array: *mut *const f64,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut f64,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgemm(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgemm_batch(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex16,
        a_array: *mut *const MKL_Complex16,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex16,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex16,
        c_array: *mut *mut MKL_Complex16,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn dzgemm(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgemm3m(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgemm3m_batch(
        transa_array: *const ::std::os::raw::c_char,
        transb_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        k_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex16,
        a_array: *mut *const MKL_Complex16,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *const MKL_Complex16,
        ldb_array: *const ::std::os::raw::c_int,
        beta_array: *const MKL_Complex16,
        c_array: *mut *mut MKL_Complex16,
        ldc_array: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zgemmt(
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zhemm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zher2k(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zherk(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zsymm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zsyr2k(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *const MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn zsyrk(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        beta: *const MKL_Complex16,
        c: *mut MKL_Complex16,
        ldc: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztrmm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztrsm(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const MKL_Complex16,
        a: *const MKL_Complex16,
        lda: *const ::std::os::raw::c_int,
        b: *mut MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ztrsm_batch(
        side_array: *const ::std::os::raw::c_char,
        uplo_array: *const ::std::os::raw::c_char,
        transa_array: *const ::std::os::raw::c_char,
        diag_array: *const ::std::os::raw::c_char,
        m_array: *const ::std::os::raw::c_int,
        n_array: *const ::std::os::raw::c_int,
        alpha_array: *const MKL_Complex16,
        a_array: *mut *const MKL_Complex16,
        lda_array: *const ::std::os::raw::c_int,
        b_array: *mut *mut MKL_Complex16,
        ldb: *const ::std::os::raw::c_int,
        group_count: *const ::std::os::raw::c_int,
        group_size: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn gemm_s16s16s32(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        offsetc: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const ::std::os::raw::c_short,
        lda: *const ::std::os::raw::c_int,
        ao: *const ::std::os::raw::c_short,
        b: *const ::std::os::raw::c_short,
        ldb: *const ::std::os::raw::c_int,
        bo: *const ::std::os::raw::c_short,
        beta: *const f32,
        c: *mut ::std::os::raw::c_int,
        ldc: *const ::std::os::raw::c_int,
        co: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn gemm_s8u8s32(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        offsetc: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f32,
        a: *const ::std::os::raw::c_char,
        lda: *const ::std::os::raw::c_int,
        ao: *const ::std::os::raw::c_char,
        b: *const ::std::os::raw::c_uchar,
        ldb: *const ::std::os::raw::c_int,
        bo: *const ::std::os::raw::c_char,
        beta: *const f32,
        c: *mut ::std::os::raw::c_int,
        ldc: *const ::std::os::raw::c_int,
        co: *const ::std::os::raw::c_int,
    );
}
