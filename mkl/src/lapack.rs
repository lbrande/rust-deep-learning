/* automatically generated by rust-bindgen */

pub const MKL_DOMAIN_ALL : u32 = 0 ; pub const MKL_DOMAIN_BLAS : u32 = 1 ; pub const MKL_DOMAIN_FFT : u32 = 2 ; pub const MKL_DOMAIN_VML : u32 = 3 ; pub const MKL_DOMAIN_PARDISO : u32 = 4 ; pub const MKL_CBWR_BRANCH : u32 = 1 ; pub const MKL_CBWR_ALL : i32 = -1 ; pub const MKL_CBWR_UNSET_ALL : u32 = 0 ; pub const MKL_CBWR_OFF : u32 = 0 ; pub const MKL_CBWR_BRANCH_OFF : u32 = 1 ; pub const MKL_CBWR_AUTO : u32 = 2 ; pub const MKL_CBWR_COMPATIBLE : u32 = 3 ; pub const MKL_CBWR_SSE2 : u32 = 4 ; pub const MKL_CBWR_SSSE3 : u32 = 6 ; pub const MKL_CBWR_SSE4_1 : u32 = 7 ; pub const MKL_CBWR_SSE4_2 : u32 = 8 ; pub const MKL_CBWR_AVX : u32 = 9 ; pub const MKL_CBWR_AVX2 : u32 = 10 ; pub const MKL_CBWR_AVX512_MIC : u32 = 11 ; pub const MKL_CBWR_AVX512 : u32 = 12 ; pub const MKL_CBWR_AVX512_MIC_E1 : u32 = 13 ; pub const MKL_CBWR_SUCCESS : u32 = 0 ; pub const MKL_CBWR_ERR_INVALID_SETTINGS : i32 = -1 ; pub const MKL_CBWR_ERR_INVALID_INPUT : i32 = -2 ; pub const MKL_CBWR_ERR_UNSUPPORTED_BRANCH : i32 = -3 ; pub const MKL_CBWR_ERR_UNKNOWN_BRANCH : i32 = -4 ; pub const MKL_CBWR_ERR_MODE_CHANGE_FAILURE : i32 = -8 ; pub const MKL_CBWR_SSE3 : u32 = 5 ; # [ repr ( C ) ] # [ derive ( Debug , Copy , Clone ) ] pub struct _MKL_Complex8 { pub real : f32 , pub imag : f32 , } # [ test ] fn bindgen_test_layout__MKL_Complex8 ( ) { assert_eq ! ( :: std :: mem :: size_of :: < _MKL_Complex8 > ( ) , 8usize , concat ! ( "Size of: " , stringify ! ( _MKL_Complex8 ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < _MKL_Complex8 > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( _MKL_Complex8 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < _MKL_Complex8 > ( ) ) ) . real as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( _MKL_Complex8 ) , "::" , stringify ! ( real ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < _MKL_Complex8 > ( ) ) ) . imag as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( _MKL_Complex8 ) , "::" , stringify ! ( imag ) ) ) ; } pub type MKL_Complex8 = _MKL_Complex8 ; # [ repr ( C ) ] # [ derive ( Debug , Copy , Clone ) ] pub struct _MKL_Complex16 { pub real : f64 , pub imag : f64 , } # [ test ] fn bindgen_test_layout__MKL_Complex16 ( ) { assert_eq ! ( :: std :: mem :: size_of :: < _MKL_Complex16 > ( ) , 16usize , concat ! ( "Size of: " , stringify ! ( _MKL_Complex16 ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < _MKL_Complex16 > ( ) , 8usize , concat ! ( "Alignment of " , stringify ! ( _MKL_Complex16 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < _MKL_Complex16 > ( ) ) ) . real as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( _MKL_Complex16 ) , "::" , stringify ! ( real ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < _MKL_Complex16 > ( ) ) ) . imag as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( _MKL_Complex16 ) , "::" , stringify ! ( imag ) ) ) ; } pub type MKL_Complex16 = _MKL_Complex16 ; # [ repr ( C ) ] # [ derive ( Debug , Copy , Clone ) ] pub struct MKLVersion { pub MajorVersion : :: std :: os :: raw :: c_int , pub MinorVersion : :: std :: os :: raw :: c_int , pub UpdateVersion : :: std :: os :: raw :: c_int , pub ProductStatus : * mut :: std :: os :: raw :: c_char , pub Build : * mut :: std :: os :: raw :: c_char , pub Processor : * mut :: std :: os :: raw :: c_char , pub Platform : * mut :: std :: os :: raw :: c_char , } # [ test ] fn bindgen_test_layout_MKLVersion ( ) { assert_eq ! ( :: std :: mem :: size_of :: < MKLVersion > ( ) , 48usize , concat ! ( "Size of: " , stringify ! ( MKLVersion ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < MKLVersion > ( ) , 8usize , concat ! ( "Alignment of " , stringify ! ( MKLVersion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . MajorVersion as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( MajorVersion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . MinorVersion as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( MinorVersion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . UpdateVersion as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( UpdateVersion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . ProductStatus as * const _ as usize } , 16usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( ProductStatus ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . Build as * const _ as usize } , 24usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( Build ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . Processor as * const _ as usize } , 32usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( Processor ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < MKLVersion > ( ) ) ) . Platform as * const _ as usize } , 40usize , concat ! ( "Offset of field: " , stringify ! ( MKLVersion ) , "::" , stringify ! ( Platform ) ) ) ; } pub const MKL_LAYOUT_MKL_ROW_MAJOR : MKL_LAYOUT = 101 ; pub const MKL_LAYOUT_MKL_COL_MAJOR : MKL_LAYOUT = 102 ; pub type MKL_LAYOUT = u32 ; pub const MKL_TRANSPOSE_MKL_NOTRANS : MKL_TRANSPOSE = 111 ; pub const MKL_TRANSPOSE_MKL_TRANS : MKL_TRANSPOSE = 112 ; pub const MKL_TRANSPOSE_MKL_CONJTRANS : MKL_TRANSPOSE = 113 ; pub type MKL_TRANSPOSE = u32 ; pub const MKL_UPLO_MKL_UPPER : MKL_UPLO = 121 ; pub const MKL_UPLO_MKL_LOWER : MKL_UPLO = 122 ; pub type MKL_UPLO = u32 ; pub const MKL_DIAG_MKL_NONUNIT : MKL_DIAG = 131 ; pub const MKL_DIAG_MKL_UNIT : MKL_DIAG = 132 ; pub type MKL_DIAG = u32 ; pub const MKL_SIDE_MKL_LEFT : MKL_SIDE = 141 ; pub const MKL_SIDE_MKL_RIGHT : MKL_SIDE = 142 ; pub type MKL_SIDE = u32 ; pub const MKL_COMPACT_PACK_MKL_COMPACT_SSE : MKL_COMPACT_PACK = 181 ; pub const MKL_COMPACT_PACK_MKL_COMPACT_AVX : MKL_COMPACT_PACK = 182 ; pub const MKL_COMPACT_PACK_MKL_COMPACT_AVX512 : MKL_COMPACT_PACK = 183 ; pub type MKL_COMPACT_PACK = u32 ; pub type MKL_C_SELECT_FUNCTION_1 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const MKL_Complex8 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_C_SELECT_FUNCTION_2 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const MKL_Complex8 , arg2 : * const MKL_Complex8 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_D_SELECT_FUNCTION_2 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const f64 , arg2 : * const f64 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_D_SELECT_FUNCTION_3 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const f64 , arg2 : * const f64 , arg3 : * const f64 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_S_SELECT_FUNCTION_2 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const f32 , arg2 : * const f32 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_S_SELECT_FUNCTION_3 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const f32 , arg2 : * const f32 , arg3 : * const f32 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_Z_SELECT_FUNCTION_1 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const MKL_Complex16 ) -> :: std :: os :: raw :: c_int > ; pub type MKL_Z_SELECT_FUNCTION_2 = :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * const MKL_Complex16 , arg2 : * const MKL_Complex16 ) -> :: std :: os :: raw :: c_int > ; extern "C" { pub fn CGELQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelqt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelqt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETSLS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETSLS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetsls ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetsls_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAMSWLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAMSWLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clamswlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clamswlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAMTSQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAMTSQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clamtsqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clamtsqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASWLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASWLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claswlq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claswlq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATSQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATSQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatsqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatsqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPLQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPLQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctplqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctplqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPLQT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPLQT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctplqt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctplqt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpmlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpmlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelqt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelqt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMSWLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMSWLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamswlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamswlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMTSQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMTSQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamtsqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamtsqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASWLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASWLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaswlq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaswlq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATSQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATSQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatsqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatsqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPLQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPLQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtplqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtplqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPLQT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPLQT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtplqt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtplqt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpmlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpmlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETSLS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETSLS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetsls ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetsls_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelqt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelqt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , tsize : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETSLS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETSLS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetsls ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetsls_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMTSQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMTSQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamtsqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamtsqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASWLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASWLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaswlq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaswlq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPLQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPLQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stplqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stplqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpmlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpmlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMSWLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMSWLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamswlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamswlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATSQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATSQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatsqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatsqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPLQT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPLQT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stplqt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stplqt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelqt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelqt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETSLS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETSLS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetsls ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetsls_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAMSWLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAMSWLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlamswlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlamswlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAMTSQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAMTSQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlamtsqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlamtsqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASWLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASWLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaswlq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaswlq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATSQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATSQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatsqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatsqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPLQT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPLQT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztplqt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztplqt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPLQT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPLQT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztplqt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztplqt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPMLQT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPMLQT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpmlqt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpmlqt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , mb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_AA ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_aa ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_aa_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF_AA ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_aa ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * const f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * const f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * const f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * const f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF_AA ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_aa ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * const f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * const f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * const f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * const f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_AA ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_aa ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_aa_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , t : * const f64 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , t : * const f32 , tsize : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , tsize : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHECON_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHECON_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn checon_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn checon_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETF2_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETF2_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetf2_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetf2_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_3X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_3X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_3x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_3x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARFY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLASYF_AA ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_aa ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCON_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCON_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csycon_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csycon_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCONVF ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCONVF_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyconvf ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyconvf_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCONVF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCONVF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyconvf_rook ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyconvf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTF2_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTF2_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytf2_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytf2_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_3X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_3X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_3x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_3x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARFY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARFY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarfy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarfy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLASYF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCON_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCON_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsycon_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsycon_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCONVF ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCONVF_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyconvf ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyconvf_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCONVF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCONVF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyconvf_rook ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyconvf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTF2_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTF2_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytf2_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytf2_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_3X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_3X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_3x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_3x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , e : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARFY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARFY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarfy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarfy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLASYF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCON_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCON_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssycon_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssycon_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCONVF ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCONVF_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyconvf ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyconvf_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCONVF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCONVF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyconvf_rook ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyconvf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTF2_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTF2_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytf2_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytf2_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_3X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_3X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_3x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_3x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , e : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHECON_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHECON_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhecon_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhecon_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETF2_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETF2_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetf2_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetf2_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_3X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_3X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_3x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_3x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARFY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLASYF_AA ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_aa ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , j1 : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCON_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCON_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsycon_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsycon_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCONVF ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCONVF_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyconvf ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyconvf_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCONVF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCONVF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyconvf_rook ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyconvf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTF2_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTF2_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytf2_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytf2_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_RK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_RK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_rk ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_rk_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_3X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_3X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_3x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_3x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_3 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_3_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_AA ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_AA_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_aa ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_aa_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHB2ST_KERNELS ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , tau : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 ) ; } extern "C" { pub fn CHB2ST_KERNELS_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , tau : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 ) ; } extern "C" { pub fn chb2st_kernels ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , tau : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 ) ; } extern "C" { pub fn chb2st_kernels_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , tau : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex8 ) ; } extern "C" { pub fn CHBEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVR_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVR_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevr_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevr_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGV_2STAGE ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGV_2STAGE_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegv_2stage ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegv_2stage_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_2STAGE ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , hous2 : * mut MKL_Complex8 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_2STAGE_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , hous2 : * mut MKL_Complex8 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_2stage ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , hous2 : * mut MKL_Complex8 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_2stage_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , hous2 : * mut MKL_Complex8 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_HB2ST ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut MKL_Complex8 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_HB2ST_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut MKL_Complex8 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_hb2st ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut MKL_Complex8 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_hb2st_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut MKL_Complex8 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_HE2HB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_HE2HB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_he2hb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_he2hb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSB2ST_KERNELS ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , v : * mut f64 , tau : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f64 ) ; } extern "C" { pub fn DSB2ST_KERNELS_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , v : * mut f64 , tau : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f64 ) ; } extern "C" { pub fn dsb2st_kernels ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , v : * mut f64 , tau : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f64 ) ; } extern "C" { pub fn dsb2st_kernels_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , v : * mut f64 , tau : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f64 ) ; } extern "C" { pub fn DSBEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVR_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVR_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevr_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevr_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGV_2STAGE ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGV_2STAGE_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygv_2stage ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygv_2stage_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_2STAGE ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , hous2 : * mut f64 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_2STAGE_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , hous2 : * mut f64 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_2stage ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , hous2 : * mut f64 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_2stage_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , hous2 : * mut f64 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_SB2ST ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut f64 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_SB2ST_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut f64 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_sb2st ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut f64 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_sb2st_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut f64 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_SY2SB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_SY2SB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_sy2sb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_sy2sb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn IPARAM2STAGE ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , ni : * const :: std :: os :: raw :: c_int , nbi : * const :: std :: os :: raw :: c_int , ibi : * const :: std :: os :: raw :: c_int , nxi : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IPARAM2STAGE_ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , ni : * const :: std :: os :: raw :: c_int , nbi : * const :: std :: os :: raw :: c_int , ibi : * const :: std :: os :: raw :: c_int , nxi : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iparam2stage ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , ni : * const :: std :: os :: raw :: c_int , nbi : * const :: std :: os :: raw :: c_int , ibi : * const :: std :: os :: raw :: c_int , nxi : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iparam2stage_ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , ni : * const :: std :: os :: raw :: c_int , nbi : * const :: std :: os :: raw :: c_int , ibi : * const :: std :: os :: raw :: c_int , nxi : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SSB2ST_KERNELS ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , v : * mut f32 , tau : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f32 ) ; } extern "C" { pub fn SSB2ST_KERNELS_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , v : * mut f32 , tau : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f32 ) ; } extern "C" { pub fn ssb2st_kernels ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , v : * mut f32 , tau : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f32 ) ; } extern "C" { pub fn ssb2st_kernels_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , v : * mut f32 , tau : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * const f32 ) ; } extern "C" { pub fn SSBEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVR_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVR_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevr_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevr_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGV_2STAGE ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGV_2STAGE_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygv_2stage ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygv_2stage_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_2STAGE ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , hous2 : * mut f32 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_2STAGE_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , hous2 : * mut f32 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_2stage ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , hous2 : * mut f32 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_2stage_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , hous2 : * mut f32 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_SB2ST ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut f32 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_SB2ST_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut f32 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_sb2st ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut f32 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_sb2st_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , hous : * mut f32 , lhous : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_SY2SB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_SY2SB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_sy2sb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_sy2sb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHB2ST_KERNELS ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , tau : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 ) ; } extern "C" { pub fn ZHB2ST_KERNELS_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , tau : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 ) ; } extern "C" { pub fn zhb2st_kernels ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , tau : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 ) ; } extern "C" { pub fn zhb2st_kernels_ ( uplo : * const :: std :: os :: raw :: c_char , wantz : * const :: std :: os :: raw :: c_int , ttype : * const :: std :: os :: raw :: c_int , st : * const :: std :: os :: raw :: c_int , ed : * const :: std :: os :: raw :: c_int , sweep : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , ib : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , tau : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * const MKL_Complex16 ) ; } extern "C" { pub fn ZHBEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEV_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEV_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheev_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheev_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVD_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVD_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevd_2stage ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevd_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVR_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVR_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevr_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevr_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVX_2STAGE ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVX_2STAGE_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevx_2stage ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevx_2stage_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGV_2STAGE ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGV_2STAGE_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegv_2stage ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegv_2stage_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_2STAGE ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , hous2 : * mut MKL_Complex16 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_2STAGE_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , hous2 : * mut MKL_Complex16 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_2stage ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , hous2 : * mut MKL_Complex16 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_2stage_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , hous2 : * mut MKL_Complex16 , lhous2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_HB2ST ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut MKL_Complex16 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_HB2ST_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut MKL_Complex16 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_hb2st ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut MKL_Complex16 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_hb2st_ ( stage1 : * const :: std :: os :: raw :: c_char , vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , hous : * mut MKL_Complex16 , lhous : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_HE2HB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_HE2HB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_he2hb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_he2hb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CGETRFNP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CGETRFNP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_cgetrfnp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_cgetrfnp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DGETRFNP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DGETRFNP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dgetrfnp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dgetrfnp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_SGETRFNP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_SGETRFNP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_sgetrfnp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_sgetrfnp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZGETRFNP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZGETRFNP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_zgetrfnp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_zgetrfnp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CGETRINP ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CGETRINP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_cgetrinp ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_cgetrinp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DGETRINP ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DGETRINP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dgetrinp ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dgetrinp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_SGETRINP ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_SGETRINP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_sgetrinp ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_sgetrinp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZGETRINP ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZGETRINP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_zgetrinp ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_zgetrinp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEJSV ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEJSV_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgejsv ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgejsv_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEJSV ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEJSV_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgejsv ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgejsv_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVDX ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVDX_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvdx ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvdx_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVDX ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVDX_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvdx ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvdx_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVDX ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVDX_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvdx ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvdx_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVDX ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVDX_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvdx ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvdx_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVJ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVJ_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvj ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvj_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVJ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVJ_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvj ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvj_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , cwork : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVD3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVD3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvd3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvd3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVD3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVD3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvd3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvd3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVD3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVD3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvd3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvd3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVD3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVD3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvd3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvd3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVP3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVP3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvp3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvp3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVP3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVP3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvp3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvp3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVP3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVP3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvp3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvp3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVP3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVP3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvp3 ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvp3_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGSVJ0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGSVJ0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgsvj0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgsvj0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGSVJ0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGSVJ0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgsvj0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgsvj0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGSVJ1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGSVJ1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgsvj1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgsvj1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGSVJ1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGSVJ1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgsvj1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgsvj1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotrf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotrf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotrf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotrf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotrf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotrf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotrf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotrf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBDSVDX ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBDSVDX_ ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbdsvdx ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbdsvdx_ ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBDSVDX ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBDSVDX_ ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbdsvdx ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbdsvdx_ ( uplo : * const :: std :: os :: raw :: c_char , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , s : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetrf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetrf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetrf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetrf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetrf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetrf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetrf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetrf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGEV3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGEV3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggev3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggev3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGEV3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGEV3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggev3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggev3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGEV3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGEV3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggev3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggev3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGEV3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGEV3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggev3 ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggev3_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNM22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNM22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunm22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunm22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNM22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNM22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunm22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunm22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGHD3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGHD3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgghd3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgghd3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGHD3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGHD3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgghd3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgghd3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGHD3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGHD3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgghd3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgghd3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGHD3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGHD3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgghd3 ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgghd3_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGES3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGES3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgges3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgges3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGES3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGES3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgges3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgges3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGES3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGES3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgges3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgges3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGES3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGES3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgges3 ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgges3_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORM22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f64 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORM22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f64 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorm22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f64 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorm22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f64 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORM22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f32 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORM22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f32 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorm22 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f32 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorm22_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , q : * const f32 , ldq : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHECON_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHECON_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn checon_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn checon_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETF2_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETF2_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetf2_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetf2_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCON_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCON_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csycon_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csycon_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTF2_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTF2_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytf2_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytf2_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCON_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCON_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsycon_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsycon_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTF2_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTF2_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytf2_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytf2_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCON_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCON_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssycon_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssycon_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTF2_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTF2_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytf2_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytf2_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHECON_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHECON_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhecon_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhecon_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETF2_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETF2_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetf2_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetf2_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCON_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCON_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsycon_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsycon_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTF2_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTF2_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytf2_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytf2_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_ROOK ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_ROOK_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_rook ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_rook_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , phantom : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , phantom : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , phantom : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , phantom : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex8 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex8 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex8 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNCSD2BY1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNCSD2BY1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cuncsd2by1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cuncsd2by1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , phantom : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , phantom : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , phantom : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , phantom : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f64 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f64 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f64 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORCSD2BY1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORCSD2BY1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorcsd2by1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorcsd2by1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , phantom : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , phantom : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , phantom : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , phantom : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut f32 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut f32 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut f32 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORCSD2BY1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORCSD2BY1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorcsd2by1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorcsd2by1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb1 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb1_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb2 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb2_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb3 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb3_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , phantom : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , phantom : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb4 ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , phantom : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb4_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , phantom : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb5 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb5_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb6 ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb6_ ( m1 : * const :: std :: os :: raw :: c_int , m2 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x1 : * mut MKL_Complex16 , incx1 : * const :: std :: os :: raw :: c_int , x2 : * mut MKL_Complex16 , incx2 : * const :: std :: os :: raw :: c_int , q1 : * mut MKL_Complex16 , ldq1 : * const :: std :: os :: raw :: c_int , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNCSD2BY1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNCSD2BY1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zuncsd2by1 ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zuncsd2by1_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgemqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgemqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgemqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgemqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRT3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRT3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrt3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrt3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpmqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpmqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpmqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpmqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpmqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpmqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPMQRT ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPMQRT_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpmqrt ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpmqrt_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPQRT ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPQRT_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpqrt ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpqrt_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CBBCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CBBCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cbbcsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cbbcsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZBBCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZBBCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zbbcsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zbbcsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBBCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBBCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbbcsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbbcsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f32 , b11e : * mut f32 , b12d : * mut f32 , b12e : * mut f32 , b21d : * mut f32 , b21e : * mut f32 , b22d : * mut f32 , b22e : * mut f32 , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBBCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBBCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbbcsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbbcsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , b11d : * mut f64 , b11e : * mut f64 , b12d : * mut f64 , b12e : * mut f64 , b21d : * mut f64 , b21e : * mut f64 , b22d : * mut f64 , b22e : * mut f64 , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , tauq2 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNBDB_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , tauq2 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , tauq2 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunbdb_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut MKL_Complex8 , taup2 : * mut MKL_Complex8 , tauq1 : * mut MKL_Complex8 , tauq2 : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , tauq2 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNBDB_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , tauq2 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , tauq2 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunbdb_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut MKL_Complex16 , taup2 : * mut MKL_Complex16 , tauq1 : * mut MKL_Complex16 , tauq2 : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , tauq2 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORBDB_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , tauq2 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , tauq2 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorbdb_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , phi : * mut f32 , taup1 : * mut f32 , taup2 : * mut f32 , tauq1 : * mut f32 , tauq2 : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , tauq2 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORBDB_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , tauq2 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , tauq2 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorbdb_ ( trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , phi : * mut f64 , taup1 : * mut f64 , taup2 : * mut f64 , tauq1 : * mut f64 , tauq2 : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cuncsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cuncsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex8 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex8 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex8 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex8 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut MKL_Complex8 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex8 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex8 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex8 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zuncsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zuncsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut MKL_Complex16 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut MKL_Complex16 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut MKL_Complex16 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut MKL_Complex16 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut MKL_Complex16 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut MKL_Complex16 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut MKL_Complex16 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut MKL_Complex16 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorcsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorcsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f32 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f32 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f32 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f32 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f32 , u1 : * mut f32 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f32 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f32 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORCSD ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORCSD_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorcsd ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorcsd_ ( jobu1 : * const :: std :: os :: raw :: c_char , jobu2 : * const :: std :: os :: raw :: c_char , jobv1t : * const :: std :: os :: raw :: c_char , jobv2t : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , signs : * const :: std :: os :: raw :: c_char , M : * const :: std :: os :: raw :: c_int , P : * const :: std :: os :: raw :: c_int , Q : * const :: std :: os :: raw :: c_int , x11 : * mut f64 , ldx11 : * const :: std :: os :: raw :: c_int , x12 : * mut f64 , ldx12 : * const :: std :: os :: raw :: c_int , x21 : * mut f64 , ldx21 : * const :: std :: os :: raw :: c_int , x22 : * mut f64 , ldx22 : * const :: std :: os :: raw :: c_int , theta : * mut f64 , u1 : * mut f64 , ldu1 : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , v1t : * mut f64 , ldv1t : * const :: std :: os :: raw :: c_int , v2t : * mut f64 , ldv2t : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAPMR ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAPMR_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clapmr ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clapmr_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAPMR ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAPMR_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlapmr ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlapmr_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAPMR ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAPMR_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlapmr ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlapmr_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAPMR ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAPMR_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slapmr ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slapmr_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCONV ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCONV_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyconv ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyconv_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCONV ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCONV_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyconv ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyconv_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCONV ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCONV_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyconv ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyconv_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCONV ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCONV_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyconv ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyconv_ ( uplo : * const :: std :: os :: raw :: c_char , way : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSWAPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSWAPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyswapr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyswapr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSWAPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSWAPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyswapr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyswapr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSWAPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSWAPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyswapr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyswapr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSWAPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSWAPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyswapr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyswapr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI2X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI2X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri2x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri2x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI2X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI2X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri2x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri2x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI2X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI2X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri2x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri2x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI2X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI2X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri2x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri2x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , nb : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARTGP ( f : * mut f32 , g : * mut f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn SLARTGP_ ( f : * mut f32 , g : * mut f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn slartgp ( f : * mut f32 , g : * mut f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn slartgp_ ( f : * mut f32 , g : * mut f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn DLARTGP ( f : * mut f64 , g : * mut f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn DLARTGP_ ( f : * mut f64 , g : * mut f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn dlartgp ( f : * mut f64 , g : * mut f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn dlartgp_ ( f : * mut f64 , g : * mut f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn SLARTGS ( x : * const f32 , y : * const f32 , sigma : * const f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn SLARTGS_ ( x : * const f32 , y : * const f32 , sigma : * const f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn slartgs ( x : * const f32 , y : * const f32 , sigma : * const f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn slartgs_ ( x : * const f32 , y : * const f32 , sigma : * const f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn DLARTGS ( x : * const f64 , y : * const f64 , sigma : * const f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn DLARTGS_ ( x : * const f64 , y : * const f64 , sigma : * const f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn dlartgs ( x : * const f64 , y : * const f64 , sigma : * const f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn dlartgs_ ( x : * const f64 , y : * const f64 , sigma : * const f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn CSYTRS2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CBDSQR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CBDSQR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cbdsqr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cbdsqr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBBRD ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex8 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBBRD_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex8 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbbrd ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex8 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbbrd_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex8 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBRFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBRFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbrfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbrfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBSV ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBSV_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbsv ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbsv_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBSVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBSVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbsvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbsvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBTF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBTF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbtf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbtf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBTRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBTRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbtrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbtrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGBTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbtrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgbtrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBD2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBD2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebd2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebd2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEBRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgebrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGECON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGECON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgecon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgecon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEES ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEES_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgees ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgees_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEESX ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEESX_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeesx ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeesx_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_C_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vs : * mut MKL_Complex8 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEGS ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEGS_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgegs ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgegs_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEGV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEGV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgegv ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgegv_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEHD2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEHD2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgehd2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgehd2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEHRD ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEHRD_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgehrd ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgehrd_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelsd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelsd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgels ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgels_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelss ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelss_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSX ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSX_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelsx ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelsx_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSY ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGELSY_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelsy ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgelsy_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeql2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeql2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQLF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQLF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqlf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqlf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQP3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQP3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqp3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqp3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQPF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQPF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqpf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqpf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQR2P ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQR2P_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqr2p ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqr2p_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRFP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRFP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrfp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrfp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGERQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgerqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESC2 ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn CGESC2_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn cgesc2 ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn cgesc2_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn CGESDD ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESDD_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesdd ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesdd_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVD ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvd ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex8 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGESVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgesvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETC2 ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETC2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetc2 ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetc2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CGETRFNPI ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CGETRFNPI_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_cgetrfnpi ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_cgetrfnpi_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRI ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRI_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetri ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetri_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGETRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgetrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggbak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggbak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggbal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggbal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGES ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGES_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgges ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgges_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGESX ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGESX_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggesx ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggesx_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_C_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vsl : * mut MKL_Complex8 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex8 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGGLM ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGGLM_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggglm ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggglm_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGHRD ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGHRD_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgghrd ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgghrd_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGLSE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGLSE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgglse ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgglse_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , d : * mut MKL_Complex8 , x : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGQRF ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGQRF_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggqrf ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggqrf_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGRQF ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGRQF_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggrqf ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggrqf_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVD ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvd ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVP ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGGSVP_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvp ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cggsvp_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * const MKL_Complex8 , df : * const MKL_Complex8 , duf : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * const MKL_Complex8 , df : * const MKL_Complex8 , duf : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * const MKL_Complex8 , df : * const MKL_Complex8 , duf : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * const MKL_Complex8 , df : * const MKL_Complex8 , duf : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * mut MKL_Complex8 , df : * mut MKL_Complex8 , duf : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * mut MKL_Complex8 , df : * mut MKL_Complex8 , duf : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * mut MKL_Complex8 , df : * mut MKL_Complex8 , duf : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , dlf : * mut MKL_Complex8 , df : * mut MKL_Complex8 , duf : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTTRF ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTTRF_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgttrf ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgttrf_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * mut MKL_Complex8 , du2 : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgttrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgttrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTTS2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGTTS2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtts2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgtts2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , du2 : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGST ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGST_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgst ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgst_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgvd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgvd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgv ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgv_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBGVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgvx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbgvx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex8 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBTRD ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHBTRD_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbtrd ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chbtrd_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHECON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHECON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn checon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn checon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEQUB ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEQUB_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheequb ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheequb_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGS2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGS2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegs2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegs2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHEGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chegvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHERFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHERFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cherfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cherfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHERFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHERFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cherfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cherfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chesvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETD2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETD2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetd2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetd2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHFRK ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn CHFRK_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn chfrk ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn chfrk_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn CHGEQZ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHGEQZ_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chgeqz ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chgeqz_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHLA_TRANSTYPE ( ret_val : * mut :: std :: os :: raw :: c_char , ret_val_len : :: std :: os :: raw :: c_int , trans : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHLA_TRANSTYPE_ ( ret_val : * mut :: std :: os :: raw :: c_char , ret_val_len : :: std :: os :: raw :: c_int , trans : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chla_transtype ( ret_val : * mut :: std :: os :: raw :: c_char , ret_val_len : :: std :: os :: raw :: c_int , trans : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chla_transtype_ ( ret_val : * mut :: std :: os :: raw :: c_char , ret_val_len : :: std :: os :: raw :: c_int , trans : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpgvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , bp : * mut MKL_Complex8 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chpsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHSEIN ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHSEIN_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chsein ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chsein_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHSEQR ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHSEQR_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chseqr ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chseqr_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLABRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLABRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clabrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clabrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut MKL_Complex8 , taup : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACGV ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACGV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacgv ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacgv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACN2 ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACN2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacn2 ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacn2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACON ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACON_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacon ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacon_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , x : * mut MKL_Complex8 , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACP2 ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACP2_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacp2 ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacp2_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACPY ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACPY_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacpy ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clacpy_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLACRM ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn CLACRM_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn clacrm ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn clacrm_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn CLACRT ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn CLACRT_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn clacrt ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn clacrt_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn CLADIV ( ret_value : * mut MKL_Complex8 , x : * const MKL_Complex8 , y : * const MKL_Complex8 ) ; } extern "C" { pub fn CLADIV_ ( ret_value : * mut MKL_Complex8 , x : * const MKL_Complex8 , y : * const MKL_Complex8 ) ; } extern "C" { pub fn cladiv ( ret_value : * mut MKL_Complex8 , x : * const MKL_Complex8 , y : * const MKL_Complex8 ) ; } extern "C" { pub fn cladiv_ ( ret_value : * mut MKL_Complex8 , x : * const MKL_Complex8 , y : * const MKL_Complex8 ) ; } extern "C" { pub fn CLAED0 ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex8 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAED0_ ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex8 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claed0 ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex8 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claed0_ ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex8 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAED7 ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAED7_ ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claed7 ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claed7_ ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAED8 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f32 , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAED8_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f32 , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claed8 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f32 , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claed8_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f32 , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut MKL_Complex8 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAEIN ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex8 , v : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAEIN_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex8 , v : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claein ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex8 , v : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claein_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex8 , v : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAESY ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut MKL_Complex8 , rt2 : * mut MKL_Complex8 , evscal : * mut MKL_Complex8 , cs1 : * mut MKL_Complex8 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAESY_ ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut MKL_Complex8 , rt2 : * mut MKL_Complex8 , evscal : * mut MKL_Complex8 , cs1 : * mut MKL_Complex8 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn claesy ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut MKL_Complex8 , rt2 : * mut MKL_Complex8 , evscal : * mut MKL_Complex8 , cs1 : * mut MKL_Complex8 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn claesy_ ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut MKL_Complex8 , rt2 : * mut MKL_Complex8 , evscal : * mut MKL_Complex8 , cs1 : * mut MKL_Complex8 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAEV2 ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAEV2_ ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn claev2 ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn claev2_ ( a : * const MKL_Complex8 , b : * const MKL_Complex8 , c : * const MKL_Complex8 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAG2Z ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAG2Z_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clag2z ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clag2z_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGS2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const MKL_Complex8 , a3 : * const f32 , b1 : * const f32 , b2 : * const MKL_Complex8 , b3 : * const f32 , csu : * mut f32 , snu : * mut MKL_Complex8 , csv : * mut f32 , snv : * mut MKL_Complex8 , csq : * mut f32 , snq : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAGS2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const MKL_Complex8 , a3 : * const f32 , b1 : * const f32 , b2 : * const MKL_Complex8 , b3 : * const f32 , csu : * mut f32 , snu : * mut MKL_Complex8 , csv : * mut f32 , snv : * mut MKL_Complex8 , csq : * mut f32 , snq : * mut MKL_Complex8 ) ; } extern "C" { pub fn clags2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const MKL_Complex8 , a3 : * const f32 , b1 : * const f32 , b2 : * const MKL_Complex8 , b3 : * const f32 , csu : * mut f32 , snu : * mut MKL_Complex8 , csv : * mut f32 , snv : * mut MKL_Complex8 , csq : * mut f32 , snq : * mut MKL_Complex8 ) ; } extern "C" { pub fn clags2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const MKL_Complex8 , a3 : * const f32 , b1 : * const f32 , b2 : * const MKL_Complex8 , b3 : * const f32 , csu : * mut f32 , snu : * mut MKL_Complex8 , csv : * mut f32 , snv : * mut MKL_Complex8 , csq : * mut f32 , snq : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAGTM ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGTM_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clagtm ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clagtm_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHEF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahef_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHQR ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHQR_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahqr ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahqr_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHR2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHR2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahr2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahr2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHRD ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAHRD_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahrd ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clahrd_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAIC1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , sest : * const f32 , w : * const MKL_Complex8 , gamma : * const MKL_Complex8 , sestpr : * mut f32 , s : * mut MKL_Complex8 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAIC1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , sest : * const f32 , w : * const MKL_Complex8 , gamma : * const MKL_Complex8 , sestpr : * mut f32 , s : * mut MKL_Complex8 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn claic1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , sest : * const f32 , w : * const MKL_Complex8 , gamma : * const MKL_Complex8 , sestpr : * mut f32 , s : * mut MKL_Complex8 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn claic1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , sest : * const f32 , w : * const MKL_Complex8 , gamma : * const MKL_Complex8 , sestpr : * mut f32 , s : * mut MKL_Complex8 , c : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLALS0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLALS0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clals0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clals0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLALSA ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLALSA_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clalsa ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clalsa_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex8 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLALSD ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLALSD_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clalsd ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clalsd_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLANGB ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANGB_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clangb ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clangb_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANGE ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANGE_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clange ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clange_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANGT ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn CLANGT_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn clangt ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn clangt_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn CLANHB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHE ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHE_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhe ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhe_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHF ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHF_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhf ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhf_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHS ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHS_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhs ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clanhs_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANHT ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn CLANHT_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn clanht ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn clanht_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 ) -> f32 ; } extern "C" { pub fn CLANSB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANSB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clansb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clansb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANSP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANSP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clansp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clansp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANSY ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANSY_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clansy ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clansy_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANTB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANTB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clantb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clantb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANTP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANTP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clantp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clantp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANTR ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLANTR_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clantr ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn clantr_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLAPLL ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn CLAPLL_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn clapll ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn clapll_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn CLAPMT ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAPMT_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clapmt ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clapmt_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQGB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQGB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqgb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqgb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQHB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQHB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqhb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqhb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQHE ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQHE_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqhe ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqhe_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQHP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQHP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqhp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqhp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQP2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAQP2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn claqp2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn claqp2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAQPS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut MKL_Complex8 , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQPS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut MKL_Complex8 , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqps ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut MKL_Complex8 , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqps_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut MKL_Complex8 , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR1 ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex8 , s2 : * mut MKL_Complex8 , v : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAQR1_ ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex8 , s2 : * mut MKL_Complex8 , v : * mut MKL_Complex8 ) ; } extern "C" { pub fn claqr1 ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex8 , s2 : * mut MKL_Complex8 , v : * mut MKL_Complex8 ) ; } extern "C" { pub fn claqr1_ ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex8 , s2 : * mut MKL_Complex8 , v : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAQR2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex8 , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex8 , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex8 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQR5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex8 , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex8 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex8 , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex8 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claqr5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex8 , h : * mut MKL_Complex8 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex8 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex8 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAQSB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQSB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqsb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqsb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQSP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQSP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqsp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqsp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQSY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAQSY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqsy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn claqsy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn CLAR1V ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut MKL_Complex8 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn CLAR1V_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut MKL_Complex8 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn clar1v ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut MKL_Complex8 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn clar1v_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut MKL_Complex8 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn CLAR2V ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , z : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAR2V_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , z : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clar2v ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , z : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clar2v_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , z : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARCM ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn CLARCM_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn clarcm ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn clarcm_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f32 ) ; } extern "C" { pub fn CLARFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARF ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARF_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarf ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarf_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFG ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFG_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfg ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfg_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFGP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFGP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfgp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfgp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARFT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarft ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarft_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARFX ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARFX_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfx ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarfx_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARGV ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARGV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clargv ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clargv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARNV ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARNV_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarnv ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarnv_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARRV ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARRV_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarrv ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarrv_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARSCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARSCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarscl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarscl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARTG ( f : * const MKL_Complex8 , g : * const MKL_Complex8 , cs : * mut f32 , sn : * mut MKL_Complex8 , r : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARTG_ ( f : * const MKL_Complex8 , g : * const MKL_Complex8 , cs : * mut f32 , sn : * mut MKL_Complex8 , r : * mut MKL_Complex8 ) ; } extern "C" { pub fn clartg ( f : * const MKL_Complex8 , g : * const MKL_Complex8 , cs : * mut f32 , sn : * mut MKL_Complex8 , r : * mut MKL_Complex8 ) ; } extern "C" { pub fn clartg_ ( f : * const MKL_Complex8 , g : * const MKL_Complex8 , cs : * mut f32 , sn : * mut MKL_Complex8 , r : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARTV ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARTV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clartv ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clartv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARZB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARZB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarzb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarzb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARZ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARZ_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarz ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarz_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLARZT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARZT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarzt ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarzt_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASCL ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASCL_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clascl ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clascl_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clascl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clascl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASET ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASET_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claset ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claset_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASR ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASR_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasr ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasr_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASSQ ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn CLASSQ_ ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn classq ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn classq_ ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn CLASWP ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASWP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claswp ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claswp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLASYF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clasyf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATBS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATBS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatbs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatbs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATDF ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATDF_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatdf ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatdf_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex8 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATPS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATPS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatps ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatps_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut MKL_Complex8 , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut MKL_Complex8 , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut MKL_Complex8 , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut MKL_Complex8 , w : * mut MKL_Complex8 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATRZ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLATRZ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clatrz ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clatrz_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLATZM ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c1 : * mut MKL_Complex8 , c2 : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLATZM_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c1 : * mut MKL_Complex8 , c2 : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clatzm ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c1 : * mut MKL_Complex8 , c2 : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn clatzm_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c1 : * mut MKL_Complex8 , c2 : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAUU2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAUU2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clauu2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clauu2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAUUM ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAUUM_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clauum ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clauum_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBSTF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBSTF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbstf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbstf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbtf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbtf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbtrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbtrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbtrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPFTRF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPFTRF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpftrf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpftrf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPFTRS ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPFTRS_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpftrs ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpftrs_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpocon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpocon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOEQUB ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOEQUB_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpoequb ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpoequb_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOEQU ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOEQU_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpoequ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpoequ_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPORFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPORFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cporfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cporfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPORFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPORFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cporfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cporfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cposv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cposv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cposvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cposvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cposvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cposvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPOTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpotrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , afp : * mut MKL_Complex8 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , afp : * mut MKL_Complex8 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , afp : * mut MKL_Complex8 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cppsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , afp : * mut MKL_Complex8 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPSTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPSTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpstf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpstf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPSTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPSTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpstrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpstrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTCON ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTCON_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptcon ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptcon_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , anorm : * const f32 , rcond : * mut f32 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * const f32 , ef : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * const f32 , ef : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * const f32 , ef : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * const f32 , ef : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTSVX ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * mut f32 , ef : * mut MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTSVX_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * mut f32 , ef : * mut MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptsvx ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * mut f32 , ef : * mut MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptsvx_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , df : * mut f32 , ef : * mut MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTTRF ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTTRF_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpttrf ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpttrf_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpttrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cpttrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTTS2 ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CPTTS2_ ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptts2 ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cptts2_ ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CROT ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn CROT_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn crot ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn crot_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const MKL_Complex8 ) ; } extern "C" { pub fn CSPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPMV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , ap : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPMV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , ap : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspmv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , ap : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspmv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , ap : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 ) ; } extern "C" { pub fn CSPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 ) ; } extern "C" { pub fn cspr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 ) ; } extern "C" { pub fn cspr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 ) ; } extern "C" { pub fn CSPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cspsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , afp : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSRSCL ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSRSCL_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csrscl ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csrscl_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEDC ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEDC_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstedc ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstedc_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEGR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEGR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstegr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstegr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEIN ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEIN_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstein ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstein_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEMR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEMR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstemr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cstemr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csycon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csycon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYEQUB ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYEQUB_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyequb ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyequb_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYMV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYMV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csymv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csymv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex8 , y : * mut MKL_Complex8 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYRFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYRFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyrfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csyrfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csysvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CSYTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn csytrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTBCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTBCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctbcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctbcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTBRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctbrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTBTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctbtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFSM ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFSM_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctfsm ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctfsm_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , a : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFTTP ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFTTP_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctfttp ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctfttp_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFTTR ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTFTTR_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctfttr ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctfttr_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGEVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex8 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex8 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGEVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex8 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex8 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex8 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex8 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex8 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex8 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGEX2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGEX2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgex2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgex2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGEXC ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGEXC_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgexc ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgexc_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSEN ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSEN_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsen ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsen_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex8 , beta : * mut MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSJA ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSJA_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsja ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsja_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut MKL_Complex8 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSY2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSY2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsy2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsy2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSYL ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTGSYL_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsyl ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctgsyl_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctprfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctprfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctptri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctptri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctptrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctptrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPTTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpttr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctpttr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTREVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTREVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTREXC ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTREXC_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrexc ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrexc_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut MKL_Complex8 , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRSEN ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRSEN_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrsen ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrsen_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex8 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex8 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex8 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRSYL ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRSYL_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrsyl ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrsyl_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTI2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTI2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrti2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrti2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrtri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrtri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTTP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTRTTP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrttp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctrttp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTZRQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTZRQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctzrqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctzrqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTZRZF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTZRZF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctzrzf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctzrzf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNG2L ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNG2L_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cung2l ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cung2l_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNG2R ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNG2R_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cung2r ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cung2r_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGBR ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGBR_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungbr ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungbr_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGHR ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGHR_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunghr ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunghr_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunglq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunglq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGQL ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGQL_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungql ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungql_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGRQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGRQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungrq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungrq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cungtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNM2L ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNM2L_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunm2l ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunm2l_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNM2R ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNM2R_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunm2r ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunm2r_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMBR ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMBR_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmbr ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmbr_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMHR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMHR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmhr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmhr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNML2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNML2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunml2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunml2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMQL ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMQL_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmql ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmql_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMR2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMR2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmr2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmr2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMR3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMR3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmr3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmr3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMRQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMRQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmrq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmrq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMRZ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMRZ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmrz ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmrz_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUNMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cunmtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUPGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUPGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cupgtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cupgtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , q : * mut MKL_Complex8 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUPMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CUPMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cupmtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cupmtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , tau : * const MKL_Complex8 , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBDSDC ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f64 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBDSDC_ ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f64 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbdsdc ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f64 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbdsdc_ ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f64 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBDSQR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DBDSQR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbdsqr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dbdsqr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDISNA ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , sep : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDISNA_ ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , sep : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddisna ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , sep : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddisna_ ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , sep : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBBRD ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f64 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBBRD_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f64 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbbrd ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f64 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbbrd_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f64 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBRFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBRFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbrfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbrfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBSV ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBSV_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbsv ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbsv_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBSVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBSVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbsvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbsvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBTF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBTF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbtf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbtf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBTRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBTRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbtrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbtrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGBTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbtrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgbtrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBD2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBD2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebd2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebd2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEBRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgebrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGECON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGECON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgecon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgecon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEES ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEES_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgees ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgees_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEESX ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEESX_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeesx ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeesx_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_D_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vs : * mut f64 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEGS ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEGS_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgegs ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgegs_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEGV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEGV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgegv ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgegv_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEHD2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEHD2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgehd2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgehd2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEHRD ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEHRD_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgehrd ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgehrd_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEJSV ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEJSV_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgejsv ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgejsv_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelsd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelsd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgels ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgels_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelss ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelss_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSX ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSX_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelsx ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelsx_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSY ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGELSY_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelsy ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgelsy_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeql2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeql2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQLF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQLF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqlf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqlf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQP3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQP3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqp3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqp3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQPF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQPF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqpf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqpf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQR2P ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQR2P_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqr2p ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqr2p_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRFP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRFP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrfp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrfp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGERQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgerqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESC2 ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn DGESC2_ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn dgesc2 ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn dgesc2_ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn DGESDD ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESDD_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesdd ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesdd_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVD ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvd ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVJ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVJ_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvj ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvj_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGESVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgesvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETC2 ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETC2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetc2 ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetc2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DGETRFNPI ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DGETRFNPI_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dgetrfnpi ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dgetrfnpi_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRI ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRI_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetri ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetri_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGETRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgetrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggbak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggbak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggbal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggbal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGES ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGES_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgges ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgges_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGESX ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGESX_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggesx ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggesx_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_D_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vsl : * mut f64 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f64 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGGLM ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f64 , x : * mut f64 , y : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGGLM_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f64 , x : * mut f64 , y : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggglm ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f64 , x : * mut f64 , y : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggglm_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f64 , x : * mut f64 , y : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGHRD ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGHRD_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgghrd ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgghrd_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGLSE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , d : * mut f64 , x : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGLSE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , d : * mut f64 , x : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgglse ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , d : * mut f64 , x : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgglse_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , d : * mut f64 , x : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGQRF ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGQRF_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggqrf ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggqrf_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGRQF ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGRQF_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggrqf ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggrqf_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVD ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvd ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVP ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGGSVP_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvp ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dggsvp_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGSVJ0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGSVJ0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgsvj0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgsvj0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGSVJ1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGSVJ1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgsvj1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgsvj1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , sva : * mut f64 , mv : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f64 , sfmin : * const f64 , tol : * const f64 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * const f64 , df : * const f64 , duf : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * const f64 , df : * const f64 , duf : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * const f64 , df : * const f64 , duf : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * const f64 , df : * const f64 , duf : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * mut f64 , df : * mut f64 , duf : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * mut f64 , df : * mut f64 , duf : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * mut f64 , df : * mut f64 , duf : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , dlf : * mut f64 , df : * mut f64 , duf : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTTRF ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTTRF_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgttrf ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgttrf_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * mut f64 , du2 : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgttrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgttrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTTS2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGTTS2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtts2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgtts2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , du2 : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DHGEQZ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DHGEQZ_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dhgeqz ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dhgeqz_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DHSEIN ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * const f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DHSEIN_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * const f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dhsein ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * const f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dhsein_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * const f64 , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DHSEQR ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DHSEQR_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dhseqr ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dhseqr_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DISNAN ( din : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn DISNAN_ ( din : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn disnan ( din : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn disnan_ ( din : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn DLABAD ( smallx : * mut f64 , large : * mut f64 ) ; } extern "C" { pub fn DLABAD_ ( smallx : * mut f64 , large : * mut f64 ) ; } extern "C" { pub fn dlabad ( smallx : * mut f64 , large : * mut f64 ) ; } extern "C" { pub fn dlabad_ ( smallx : * mut f64 , large : * mut f64 ) ; } extern "C" { pub fn DLABRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLABRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlabrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlabrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut f64 , taup : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLACN2 ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLACN2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlacn2 ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlacn2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLACON ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLACON_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlacon ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlacon_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f64 , x : * mut f64 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLACPY ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLACPY_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlacpy ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlacpy_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLADIV ( a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , p : * mut f64 , q : * mut f64 ) ; } extern "C" { pub fn DLADIV_ ( a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , p : * mut f64 , q : * mut f64 ) ; } extern "C" { pub fn dladiv ( a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , p : * mut f64 , q : * mut f64 ) ; } extern "C" { pub fn dladiv_ ( a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , p : * mut f64 , q : * mut f64 ) ; } extern "C" { pub fn DLAE2 ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 ) ; } extern "C" { pub fn DLAE2_ ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 ) ; } extern "C" { pub fn dlae2 ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 ) ; } extern "C" { pub fn dlae2_ ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 ) ; } extern "C" { pub fn DLAEBZ ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f64 , reltol : * const f64 , pivmin : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f64 , c : * mut f64 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEBZ_ ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f64 , reltol : * const f64 , pivmin : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f64 , c : * mut f64 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaebz ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f64 , reltol : * const f64 , pivmin : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f64 , c : * mut f64 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaebz_ ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f64 , reltol : * const f64 , pivmin : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f64 , c : * mut f64 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED0 ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED0_ ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed0 ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed0_ ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED2 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f64 , z : * const f64 , dlamda : * mut f64 , w : * mut f64 , q2 : * mut f64 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED2_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f64 , z : * const f64 , dlamda : * mut f64 , w : * mut f64 , q2 : * mut f64 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed2 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f64 , z : * const f64 , dlamda : * mut f64 , w : * mut f64 , q2 : * mut f64 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed2_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f64 , z : * const f64 , dlamda : * mut f64 , w : * mut f64 , q2 : * mut f64 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED3 ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * mut f64 , q2 : * const f64 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED3_ ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * mut f64 , q2 : * const f64 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed3 ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * mut f64 , q2 : * const f64 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed3_ ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * mut f64 , q2 : * const f64 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED5 ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 ) ; } extern "C" { pub fn DLAED5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 ) ; } extern "C" { pub fn dlaed5 ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 ) ; } extern "C" { pub fn dlaed5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dlam : * mut f64 ) ; } extern "C" { pub fn DLAED6 ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f64 , d : * const f64 , z : * const f64 , finit : * const f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED6_ ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f64 , d : * const f64 , z : * const f64 , finit : * const f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed6 ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f64 , d : * const f64 , z : * const f64 , finit : * const f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed6_ ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f64 , d : * const f64 , z : * const f64 , finit : * const f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED7 ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED7_ ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed7 ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed7_ ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f64 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED8 ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed8 ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut f64 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED9 ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * const f64 , w : * const f64 , s : * mut f64 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAED9_ ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * const f64 , w : * const f64 , s : * mut f64 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed9 ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * const f64 , w : * const f64 , s : * mut f64 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaed9_ ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , dlamda : * const f64 , w : * const f64 , s : * mut f64 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEDA ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , q : * const f64 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f64 , ztemp : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEDA_ ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , q : * const f64 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f64 , ztemp : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaeda ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , q : * const f64 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f64 , ztemp : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaeda_ ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , q : * const f64 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f64 , ztemp : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEIN ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , vr : * mut f64 , vi : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , bignum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEIN_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , vr : * mut f64 , vi : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , bignum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaein ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , vr : * mut f64 , vi : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , bignum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaein_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , vr : * mut f64 , vi : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , bignum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEV2 ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut f64 ) ; } extern "C" { pub fn DLAEV2_ ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut f64 ) ; } extern "C" { pub fn dlaev2 ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut f64 ) ; } extern "C" { pub fn dlaev2_ ( a : * const f64 , b : * const f64 , c : * const f64 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut f64 ) ; } extern "C" { pub fn DLAEXC ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAEXC_ ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaexc ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaexc_ ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAG2 ( a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f64 , scale1 : * mut f64 , scale2 : * mut f64 , wr1 : * mut f64 , wr2 : * mut f64 , wi : * mut f64 ) ; } extern "C" { pub fn DLAG2_ ( a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f64 , scale1 : * mut f64 , scale2 : * mut f64 , wr1 : * mut f64 , wr2 : * mut f64 , wi : * mut f64 ) ; } extern "C" { pub fn dlag2 ( a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f64 , scale1 : * mut f64 , scale2 : * mut f64 , wr1 : * mut f64 , wr2 : * mut f64 , wi : * mut f64 ) ; } extern "C" { pub fn dlag2_ ( a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f64 , scale1 : * mut f64 , scale2 : * mut f64 , wr1 : * mut f64 , wr2 : * mut f64 , wi : * mut f64 ) ; } extern "C" { pub fn DLAG2S ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAG2S_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlag2s ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlag2s_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGS2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const f64 , a3 : * const f64 , b1 : * const f64 , b2 : * const f64 , b3 : * const f64 , csu : * mut f64 , snu : * mut f64 , csv : * mut f64 , snv : * mut f64 , csq : * mut f64 , snq : * mut f64 ) ; } extern "C" { pub fn DLAGS2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const f64 , a3 : * const f64 , b1 : * const f64 , b2 : * const f64 , b3 : * const f64 , csu : * mut f64 , snu : * mut f64 , csv : * mut f64 , snv : * mut f64 , csq : * mut f64 , snq : * mut f64 ) ; } extern "C" { pub fn dlags2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const f64 , a3 : * const f64 , b1 : * const f64 , b2 : * const f64 , b3 : * const f64 , csu : * mut f64 , snu : * mut f64 , csv : * mut f64 , snv : * mut f64 , csq : * mut f64 , snq : * mut f64 ) ; } extern "C" { pub fn dlags2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const f64 , a3 : * const f64 , b1 : * const f64 , b2 : * const f64 , b3 : * const f64 , csu : * mut f64 , snu : * mut f64 , csv : * mut f64 , snv : * mut f64 , csq : * mut f64 , snq : * mut f64 ) ; } extern "C" { pub fn DLAGTF ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lambda : * const f64 , b : * mut f64 , c : * mut f64 , tol : * const f64 , d : * mut f64 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGTF_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lambda : * const f64 , b : * mut f64 , c : * mut f64 , tol : * const f64 , d : * mut f64 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagtf ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lambda : * const f64 , b : * mut f64 , c : * mut f64 , tol : * const f64 , d : * mut f64 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagtf_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lambda : * const f64 , b : * mut f64 , c : * mut f64 , tol : * const f64 , d : * mut f64 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGTM ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const f64 , d : * const f64 , du : * const f64 , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGTM_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const f64 , d : * const f64 , du : * const f64 , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagtm ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const f64 , d : * const f64 , du : * const f64 , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagtm_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const f64 , d : * const f64 , du : * const f64 , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGTS ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f64 , tol : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGTS_ ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f64 , tol : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagts ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f64 , tol : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagts_ ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * const f64 , c : * const f64 , d : * const f64 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f64 , tol : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGV2 ( a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , csl : * mut f64 , snl : * mut f64 , csr : * mut f64 , snr : * mut f64 ) ; } extern "C" { pub fn DLAGV2_ ( a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , csl : * mut f64 , snl : * mut f64 , csr : * mut f64 , snr : * mut f64 ) ; } extern "C" { pub fn dlagv2 ( a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , csl : * mut f64 , snl : * mut f64 , csr : * mut f64 , snr : * mut f64 ) ; } extern "C" { pub fn dlagv2_ ( a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , csl : * mut f64 , snl : * mut f64 , csr : * mut f64 , snr : * mut f64 ) ; } extern "C" { pub fn DLAHQR ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAHQR_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlahqr ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlahqr_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAHR2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAHR2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlahr2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlahr2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAHRD ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAHRD_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlahrd ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlahrd_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAIC1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f64 , sest : * const f64 , w : * const f64 , gamma : * const f64 , sestpr : * mut f64 , s : * mut f64 , c : * mut f64 ) ; } extern "C" { pub fn DLAIC1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f64 , sest : * const f64 , w : * const f64 , gamma : * const f64 , sestpr : * mut f64 , s : * mut f64 , c : * mut f64 ) ; } extern "C" { pub fn dlaic1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f64 , sest : * const f64 , w : * const f64 , gamma : * const f64 , sestpr : * mut f64 , s : * mut f64 , c : * mut f64 ) ; } extern "C" { pub fn dlaic1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f64 , sest : * const f64 , w : * const f64 , gamma : * const f64 , sestpr : * mut f64 , s : * mut f64 , c : * mut f64 ) ; } extern "C" { pub fn DLAISNAN ( din1 : * const f64 , din2 : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn DLAISNAN_ ( din1 : * const f64 , din2 : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn dlaisnan ( din1 : * const f64 , din2 : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn dlaisnan_ ( din1 : * const f64 , din2 : * const f64 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn DLALN2 ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f64 , ca : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f64 , d2 : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALN2_ ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f64 , ca : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f64 , d2 : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaln2 ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f64 , ca : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f64 , d2 : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaln2_ ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f64 , ca : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f64 , d2 : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f64 , wi : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALS0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALS0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlals0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlals0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALSA ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALSA_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlalsa ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlalsa_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f64 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALSD ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLALSD_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlalsd ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlalsd_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMCH ( cmach : * const :: std :: os :: raw :: c_char ) -> f64 ; } extern "C" { pub fn DLAMCH_ ( cmach : * const :: std :: os :: raw :: c_char ) -> f64 ; } extern "C" { pub fn dlamch ( cmach : * const :: std :: os :: raw :: c_char ) -> f64 ; } extern "C" { pub fn dlamch_ ( cmach : * const :: std :: os :: raw :: c_char ) -> f64 ; } extern "C" { pub fn DLAMC1 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMC1_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamc1 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamc1_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMC2 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f64 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f64 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn DLAMC2_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f64 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f64 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn dlamc2 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f64 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f64 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn dlamc2_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f64 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f64 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn DLAMC3 ( a : * const f64 , b : * const f64 ) -> f64 ; } extern "C" { pub fn DLAMC3_ ( a : * const f64 , b : * const f64 ) -> f64 ; } extern "C" { pub fn dlamc3 ( a : * const f64 , b : * const f64 ) -> f64 ; } extern "C" { pub fn dlamc3_ ( a : * const f64 , b : * const f64 ) -> f64 ; } extern "C" { pub fn DLAMC4 ( emin : * mut :: std :: os :: raw :: c_int , start : * const f64 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMC4_ ( emin : * mut :: std :: os :: raw :: c_int , start : * const f64 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamc4 ( emin : * mut :: std :: os :: raw :: c_int , start : * const f64 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamc4_ ( emin : * mut :: std :: os :: raw :: c_int , start : * const f64 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMC5 ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn DLAMC5_ ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn dlamc5 ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn dlamc5_ ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f64 ) ; } extern "C" { pub fn DLAMRG ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f64 , dtrd1 : * const :: std :: os :: raw :: c_int , dtrd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAMRG_ ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f64 , dtrd1 : * const :: std :: os :: raw :: c_int , dtrd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamrg ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f64 , dtrd1 : * const :: std :: os :: raw :: c_int , dtrd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlamrg_ ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f64 , dtrd1 : * const :: std :: os :: raw :: c_int , dtrd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLANEG ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , sigma : * const f64 , pivmin : * const f64 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn DLANEG_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , sigma : * const f64 , pivmin : * const f64 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn dlaneg ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , sigma : * const f64 , pivmin : * const f64 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn dlaneg_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , sigma : * const f64 , pivmin : * const f64 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn DLANGB ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANGB_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlangb ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlangb_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANGE ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANGE_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlange ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlange_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANGT ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 ) -> f64 ; } extern "C" { pub fn DLANGT_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 ) -> f64 ; } extern "C" { pub fn dlangt ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 ) -> f64 ; } extern "C" { pub fn dlangt_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 ) -> f64 ; } extern "C" { pub fn DLANHS ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANHS_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlanhs ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlanhs_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSF ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSF_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansf ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansf_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANST ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 ) -> f64 ; } extern "C" { pub fn DLANST_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 ) -> f64 ; } extern "C" { pub fn dlanst ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 ) -> f64 ; } extern "C" { pub fn dlanst_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 ) -> f64 ; } extern "C" { pub fn DLANSY ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANSY_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansy ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlansy_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANTB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANTB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlantb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlantb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANTP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANTP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlantp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlantp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANTR ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANTR_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlantr ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dlantr_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLANV2 ( a : * mut f64 , b : * mut f64 , c : * mut f64 , d : * mut f64 , rt1r : * mut f64 , rt1i : * mut f64 , rt2r : * mut f64 , rt2i : * mut f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn DLANV2_ ( a : * mut f64 , b : * mut f64 , c : * mut f64 , d : * mut f64 , rt1r : * mut f64 , rt1i : * mut f64 , rt2r : * mut f64 , rt2i : * mut f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn dlanv2 ( a : * mut f64 , b : * mut f64 , c : * mut f64 , d : * mut f64 , rt1r : * mut f64 , rt1i : * mut f64 , rt2r : * mut f64 , rt2i : * mut f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn dlanv2_ ( a : * mut f64 , b : * mut f64 , c : * mut f64 , d : * mut f64 , rt1r : * mut f64 , rt1i : * mut f64 , rt2r : * mut f64 , rt2i : * mut f64 , cs : * mut f64 , sn : * mut f64 ) ; } extern "C" { pub fn DLAPLL ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn DLAPLL_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn dlapll ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn dlapll_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn DLAPMT ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAPMT_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlapmt ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlapmt_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAPY2 ( x : * const f64 , y : * const f64 ) -> f64 ; } extern "C" { pub fn DLAPY2_ ( x : * const f64 , y : * const f64 ) -> f64 ; } extern "C" { pub fn dlapy2 ( x : * const f64 , y : * const f64 ) -> f64 ; } extern "C" { pub fn dlapy2_ ( x : * const f64 , y : * const f64 ) -> f64 ; } extern "C" { pub fn DLAPY3 ( x : * const f64 , y : * const f64 , z : * const f64 ) -> f64 ; } extern "C" { pub fn DLAPY3_ ( x : * const f64 , y : * const f64 , z : * const f64 ) -> f64 ; } extern "C" { pub fn dlapy3 ( x : * const f64 , y : * const f64 , z : * const f64 ) -> f64 ; } extern "C" { pub fn dlapy3_ ( x : * const f64 , y : * const f64 , z : * const f64 ) -> f64 ; } extern "C" { pub fn DLAQGB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQGB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqgb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqgb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQP2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLAQP2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlaqp2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlaqp2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLAQPS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut f64 , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQPS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut f64 , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqps ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut f64 , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqps_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f64 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut f64 , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR1 ( n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f64 , si1 : * mut f64 , sr2 : * mut f64 , si2 : * mut f64 , v : * mut f64 ) ; } extern "C" { pub fn DLAQR1_ ( n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f64 , si1 : * mut f64 , sr2 : * mut f64 , si2 : * mut f64 , v : * mut f64 ) ; } extern "C" { pub fn dlaqr1 ( n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f64 , si1 : * mut f64 , sr2 : * mut f64 , si2 : * mut f64 , v : * mut f64 ) ; } extern "C" { pub fn dlaqr1_ ( n : * const :: std :: os :: raw :: c_int , h : * const f64 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f64 , si1 : * mut f64 , sr2 : * mut f64 , si2 : * mut f64 , v : * mut f64 ) ; } extern "C" { pub fn DLAQR2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f64 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQR5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f64 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f64 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqr5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f64 , si : * mut f64 , h : * mut f64 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f64 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f64 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQSB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQSB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqsb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqsb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQSP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQSP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqsp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqsp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQSY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQSY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqsy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn dlaqsy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn DLAQTR ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , b : * const f64 , w : * const f64 , scale : * mut f64 , x : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAQTR_ ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , b : * const f64 , w : * const f64 , scale : * mut f64 , x : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqtr ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , b : * const f64 , w : * const f64 , scale : * mut f64 , x : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaqtr_ ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , b : * const f64 , w : * const f64 , scale : * mut f64 , x : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAR1V ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut f64 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLAR1V_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut f64 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlar1v ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut f64 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlar1v_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut f64 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLAR2V ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , z : * mut f64 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAR2V_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , z : * mut f64 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlar2v ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , z : * mut f64 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlar2v_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , z : * mut f64 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARF ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARF_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarf ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarf_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARFG ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn DLARFG_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn dlarfg ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn dlarfg_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn DLARFGP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn DLARFGP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn dlarfgp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn dlarfgp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn DLARFP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn DLARFP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn dlarfp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn dlarfp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f64 ) ; } extern "C" { pub fn DLARFT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARFT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarft ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarft_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARFX ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARFX_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarfx ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarfx_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARGV ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARGV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlargv ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlargv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARNV ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn DLARNV_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn dlarnv ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn dlarnv_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn DLARRA ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , e2 : * mut f64 , spltol : * const f64 , tnrm : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRA_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , e2 : * mut f64 , spltol : * const f64 , tnrm : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarra ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , e2 : * mut f64 , spltol : * const f64 , tnrm : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarra_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , e2 : * mut f64 , spltol : * const f64 , tnrm : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRB ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f64 , rtol2 : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , wgap : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRB_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f64 , rtol2 : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , wgap : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrb ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f64 , rtol2 : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , wgap : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrb_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , lld : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f64 , rtol2 : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , wgap : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRC ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * const f64 , e : * const f64 , pivmin : * const f64 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRC_ ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * const f64 , e : * const f64 , pivmin : * const f64 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrc ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * const f64 , e : * const f64 , pivmin : * const f64 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrc_ ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * const f64 , e : * const f64 , pivmin : * const f64 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRD ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f64 , reltol : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , pivmin : * const f64 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wl : * mut f64 , wu : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRD_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f64 , reltol : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , pivmin : * const f64 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wl : * mut f64 , wu : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrd ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f64 , reltol : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , pivmin : * const f64 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wl : * mut f64 , wu : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrd_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f64 , reltol : * const f64 , d : * const f64 , e : * const f64 , e2 : * const f64 , pivmin : * const f64 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wl : * mut f64 , wu : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRE ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f64 , vu : * mut f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , e2 : * mut f64 , rtol1 : * const f64 , rtol2 : * const f64 , spltol : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f64 , pivmin : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRE_ ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f64 , vu : * mut f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , e2 : * mut f64 , rtol1 : * const f64 , rtol2 : * const f64 , spltol : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f64 , pivmin : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarre ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f64 , vu : * mut f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , e2 : * mut f64 , rtol1 : * const f64 , rtol2 : * const f64 , spltol : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f64 , pivmin : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarre_ ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f64 , vu : * mut f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , e2 : * mut f64 , rtol1 : * const f64 , rtol2 : * const f64 , spltol : * const f64 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f64 , pivmin : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRF ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , l : * const f64 , ld : * const f64 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f64 , wgap : * mut f64 , werr : * const f64 , spdiam : * const f64 , clgapl : * const f64 , clgapr : * mut f64 , pivmin : * const f64 , sigma : * mut f64 , dplus : * mut f64 , lplus : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRF_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , l : * const f64 , ld : * const f64 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f64 , wgap : * mut f64 , werr : * const f64 , spdiam : * const f64 , clgapl : * const f64 , clgapr : * mut f64 , pivmin : * const f64 , sigma : * mut f64 , dplus : * mut f64 , lplus : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrf ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , l : * const f64 , ld : * const f64 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f64 , wgap : * mut f64 , werr : * const f64 , spdiam : * const f64 , clgapl : * const f64 , clgapr : * mut f64 , pivmin : * const f64 , sigma : * mut f64 , dplus : * mut f64 , lplus : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrf_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , l : * const f64 , ld : * const f64 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f64 , wgap : * mut f64 , werr : * const f64 , spdiam : * const f64 , clgapl : * const f64 , clgapr : * mut f64 , pivmin : * const f64 , sigma : * mut f64 , dplus : * mut f64 , lplus : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRJ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e2 : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRJ_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e2 : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrj ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e2 : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrj_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e2 : * const f64 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f64 , offset : * const :: std :: os :: raw :: c_int , w : * mut f64 , werr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f64 , spdiam : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRK ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f64 , gu : * const f64 , d : * const f64 , e2 : * const f64 , pivmin : * const f64 , reltol : * const f64 , w : * mut f64 , werr : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRK_ ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f64 , gu : * const f64 , d : * const f64 , e2 : * const f64 , pivmin : * const f64 , reltol : * const f64 , w : * mut f64 , werr : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrk ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f64 , gu : * const f64 , d : * const f64 , e2 : * const f64 , pivmin : * const f64 , reltol : * const f64 , w : * mut f64 , werr : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrk_ ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f64 , gu : * const f64 , d : * const f64 , e2 : * const f64 , pivmin : * const f64 , reltol : * const f64 , w : * mut f64 , werr : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRR ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRR_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrr ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrr_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRV ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARRV_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrv ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarrv_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARSCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARSCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarscl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarscl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARTG ( f : * const f64 , g : * const f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn DLARTG_ ( f : * const f64 , g : * const f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn dlartg ( f : * const f64 , g : * const f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn dlartg_ ( f : * const f64 , g : * const f64 , cs : * mut f64 , sn : * mut f64 , r : * mut f64 ) ; } extern "C" { pub fn DLARTV ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARTV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlartv ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlartv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , incx : * const :: std :: os :: raw :: c_int , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARUV ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn DLARUV_ ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn dlaruv ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn dlaruv_ ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f64 ) ; } extern "C" { pub fn DLARZB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARZB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarzb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarzb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARZ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARZ_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarz ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlarz_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLARZT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARZT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarzt ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarzt_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f64 , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAS2 ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 ) ; } extern "C" { pub fn DLAS2_ ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 ) ; } extern "C" { pub fn dlas2 ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 ) ; } extern "C" { pub fn dlas2_ ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 ) ; } extern "C" { pub fn DLASCL ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASCL_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlascl ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlascl_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlascl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlascl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD0 ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD0_ ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd0 ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd0_ ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD1 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD1_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd1 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd1_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD2 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , alpha : * const f64 , beta : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD2_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , alpha : * const f64 , beta : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd2 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , alpha : * const f64 , beta : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd2_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , alpha : * const f64 , beta : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD3 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD3_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd3 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd3_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , u2 : * mut f64 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f64 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , sigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , sigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , sigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , sigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD5 ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dsigma : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLASD5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dsigma : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlasd5 ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dsigma : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlasd5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f64 , z : * const f64 , delta : * mut f64 , rho : * const f64 , dsigma : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLASD6 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , vf : * mut f64 , vl : * mut f64 , alpha : * mut f64 , beta : * mut f64 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f64 , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , k : * mut :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD6_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , vf : * mut f64 , vl : * mut f64 , alpha : * mut f64 , beta : * mut f64 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f64 , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , k : * mut :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd6 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , vf : * mut f64 , vl : * mut f64 , alpha : * mut f64 , beta : * mut f64 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f64 , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , k : * mut :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd6_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , vf : * mut f64 , vl : * mut f64 , alpha : * mut f64 , beta : * mut f64 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f64 , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , k : * mut :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD7 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , zw : * mut f64 , vf : * mut f64 , vfw : * mut f64 , vl : * mut f64 , vlw : * mut f64 , alpha : * const f64 , beta : * const f64 , dsigma : * mut f64 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD7_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , zw : * mut f64 , vf : * mut f64 , vfw : * mut f64 , vl : * mut f64 , vlw : * mut f64 , alpha : * const f64 , beta : * const f64 , dsigma : * mut f64 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd7 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , zw : * mut f64 , vf : * mut f64 , vfw : * mut f64 , vl : * mut f64 , vlw : * mut f64 , alpha : * const f64 , beta : * const f64 , dsigma : * mut f64 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd7_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , zw : * mut f64 , vf : * mut f64 , vfw : * mut f64 , vl : * mut f64 , vlw : * mut f64 , alpha : * const f64 , beta : * const f64 , dsigma : * mut f64 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f64 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f64 , s : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD8 ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , vf : * mut f64 , vl : * mut f64 , difl : * mut f64 , difr : * mut f64 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASD8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , vf : * mut f64 , vl : * mut f64 , difl : * mut f64 , difr : * mut f64 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd8 ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , vf : * mut f64 , vl : * mut f64 , difl : * mut f64 , difr : * mut f64 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasd8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f64 , z : * mut f64 , vf : * mut f64 , vl : * mut f64 , difl : * mut f64 , difr : * mut f64 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASDA ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , poles : * mut f64 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASDA_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , poles : * mut f64 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasda ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , poles : * mut f64 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasda_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * const f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f64 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f64 , difr : * mut f64 , z : * mut f64 , poles : * mut f64 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , c : * mut f64 , s : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASDQ ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASDQ_ ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasdq ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasdq_ ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut f64 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASDT ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASDT_ ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasdt ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasdt_ ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASET ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASET_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaset ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaset_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASQ1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASQ1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasq1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasq1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASQ2 ( n : * const :: std :: os :: raw :: c_int , z : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASQ2_ ( n : * const :: std :: os :: raw :: c_int , z : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasq2 ( n : * const :: std :: os :: raw :: c_int , z : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasq2_ ( n : * const :: std :: os :: raw :: c_int , z : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASQ3 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f64 , sigma : * mut f64 , desig : * mut f64 , qmax : * const f64 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dn1 : * mut f64 , dn2 : * mut f64 , g : * mut f64 , tau : * mut f64 ) ; } extern "C" { pub fn DLASQ3_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f64 , sigma : * mut f64 , desig : * mut f64 , qmax : * const f64 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dn1 : * mut f64 , dn2 : * mut f64 , g : * mut f64 , tau : * mut f64 ) ; } extern "C" { pub fn dlasq3 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f64 , sigma : * mut f64 , desig : * mut f64 , qmax : * const f64 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dn1 : * mut f64 , dn2 : * mut f64 , g : * mut f64 , tau : * mut f64 ) ; } extern "C" { pub fn dlasq3_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f64 , sigma : * mut f64 , desig : * mut f64 , qmax : * const f64 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dn1 : * mut f64 , dn2 : * mut f64 , g : * mut f64 , tau : * mut f64 ) ; } extern "C" { pub fn DLASQ4 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f64 , dmin1 : * const f64 , dmin2 : * const f64 , dn : * const f64 , dn1 : * const f64 , dn2 : * const f64 , tau : * mut f64 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f64 ) ; } extern "C" { pub fn DLASQ4_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f64 , dmin1 : * const f64 , dmin2 : * const f64 , dn : * const f64 , dn1 : * const f64 , dn2 : * const f64 , tau : * mut f64 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f64 ) ; } extern "C" { pub fn dlasq4 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f64 , dmin1 : * const f64 , dmin2 : * const f64 , dn : * const f64 , dn1 : * const f64 , dn2 : * const f64 , tau : * mut f64 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f64 ) ; } extern "C" { pub fn dlasq4_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f64 , dmin1 : * const f64 , dmin2 : * const f64 , dn : * const f64 , dn1 : * const f64 , dn2 : * const f64 , tau : * mut f64 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f64 ) ; } extern "C" { pub fn DLASQ5 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , tau : * const f64 , sigma : * const f64 , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f64 ) ; } extern "C" { pub fn DLASQ5_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , tau : * const f64 , sigma : * const f64 , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f64 ) ; } extern "C" { pub fn dlasq5 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , tau : * const f64 , sigma : * const f64 , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f64 ) ; } extern "C" { pub fn dlasq5_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , tau : * const f64 , sigma : * const f64 , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f64 ) ; } extern "C" { pub fn DLASQ6 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 ) ; } extern "C" { pub fn DLASQ6_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 ) ; } extern "C" { pub fn dlasq6 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 ) ; } extern "C" { pub fn dlasq6_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f64 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f64 , dmin1 : * mut f64 , dmin2 : * mut f64 , dn : * mut f64 , dnm1 : * mut f64 , dnm2 : * mut f64 ) ; } extern "C" { pub fn DLASR ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASR_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasr ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasr_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASRT ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASRT_ ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasrt ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasrt_ ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASSQ ( n : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn DLASSQ_ ( n : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn dlassq ( n : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn dlassq_ ( n : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn DLASV2 ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 , snr : * mut f64 , csr : * mut f64 , snl : * mut f64 , csl : * mut f64 ) ; } extern "C" { pub fn DLASV2_ ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 , snr : * mut f64 , csr : * mut f64 , snl : * mut f64 , csl : * mut f64 ) ; } extern "C" { pub fn dlasv2 ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 , snr : * mut f64 , csr : * mut f64 , snl : * mut f64 , csl : * mut f64 ) ; } extern "C" { pub fn dlasv2_ ( f : * const f64 , g : * const f64 , h : * const f64 , ssmin : * mut f64 , ssmax : * mut f64 , snr : * mut f64 , csr : * mut f64 , snl : * mut f64 , csl : * mut f64 ) ; } extern "C" { pub fn DLASWP ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASWP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaswp ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaswp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASY2 ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f64 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f64 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASY2_ ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f64 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f64 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasy2 ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f64 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f64 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasy2_ ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f64 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f64 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLASYF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlasyf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAT2S ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAT2S_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlat2s ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlat2s_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , sa : * mut f32 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATBS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATBS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatbs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatbs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATDF ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f64 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATDF_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f64 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatdf ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f64 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatdf_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f64 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATPS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATPS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatps ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatps_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut f64 , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut f64 , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut f64 , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut f64 , w : * mut f64 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * mut f64 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATRZ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLATRZ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlatrz ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn dlatrz_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn DLATZM ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c1 : * mut f64 , c2 : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLATZM_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c1 : * mut f64 , c2 : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlatzm ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c1 : * mut f64 , c2 : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn dlatzm_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f64 , incv : * const :: std :: os :: raw :: c_int , tau : * const f64 , c1 : * mut f64 , c2 : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 ) ; } extern "C" { pub fn DLAUU2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAUU2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlauu2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlauu2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAUUM ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAUUM_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlauum ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlauum_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DOPGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DOPGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dopgtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dopgtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DOPMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DOPMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dopmtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dopmtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORG2L ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORG2L_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorg2l ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorg2l_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORG2R ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORG2R_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorg2r ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorg2r_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGBR ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGBR_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgbr ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgbr_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGHR ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGHR_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorghr ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorghr_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorglq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorglq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGQL ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGQL_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgql ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgql_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGRQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGRQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgrq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgrq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorgtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORM2L ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORM2L_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorm2l ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorm2l_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORM2R ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORM2R_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorm2r ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorm2r_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMBR ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMBR_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormbr ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormbr_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMHR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMHR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormhr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormhr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORML2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORML2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorml2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dorml2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMQL ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMQL_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormql ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormql_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMR2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMR2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormr2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormr2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMR3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMR3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormr3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormr3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMRQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMRQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormrq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormrq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMRZ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMRZ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormrz ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormrz_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DORMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dormtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , tau : * const f64 , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBSTF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBSTF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbstf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbstf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f64 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbtf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbtf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbtrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbtrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbtrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPFTRF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPFTRF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpftrf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpftrf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPFTRS ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPFTRS_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpftrs ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpftrs_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpocon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpocon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOEQUB ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOEQUB_ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpoequb ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpoequb_ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOEQU ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOEQU_ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpoequ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpoequ_ ( n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPORFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPORFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dporfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dporfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPORFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPORFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dporfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dporfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dposv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dposv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dposvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dposvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dposvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dposvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPOTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpotrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , afp : * mut f64 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , afp : * mut f64 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , afp : * mut f64 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dppsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , afp : * mut f64 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPSTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPSTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpstf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpstf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPSTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPSTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpstrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpstrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTCON ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTCON_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptcon ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptcon_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTRFS ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * const f64 , ef : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTRFS_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * const f64 , ef : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptrfs ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * const f64 , ef : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptrfs_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * const f64 , ef : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTSVX ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * mut f64 , ef : * mut f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTSVX_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * mut f64 , ef : * mut f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptsvx ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * mut f64 , ef : * mut f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptsvx_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , df : * mut f64 , ef : * mut f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTTRF ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTTRF_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpttrf ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpttrf_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTTRS ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTTRS_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpttrs ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dpttrs_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTTS2 ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DPTTS2_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptts2 ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dptts2_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DRSCL ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut f64 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DRSCL_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut f64 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn drscl ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut f64 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn drscl_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut f64 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGST ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f64 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGST_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f64 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgst ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f64 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgst_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f64 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgvd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgvd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgv ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgv_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBGVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgvx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbgvx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f64 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBTRD ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSBTRD_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbtrd ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsbtrd_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f64 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSECND ( ) -> f64 ; } extern "C" { pub fn DSECND_ ( ) -> f64 ; } extern "C" { pub fn dsecnd ( ) -> f64 ; } extern "C" { pub fn dsecnd_ ( ) -> f64 ; } extern "C" { pub fn DSFRK ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut f64 ) ; } extern "C" { pub fn DSFRK_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut f64 ) ; } extern "C" { pub fn dsfrk ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut f64 ) ; } extern "C" { pub fn dsfrk_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut f64 ) ; } extern "C" { pub fn DSGESV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSGESV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsgesv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsgesv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspgvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , bp : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPOSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPOSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsposv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsposv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f64 , swork : * mut f32 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dspsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , afp : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEBZ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , d : * const f64 , e : * const f64 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEBZ_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , d : * const f64 , e : * const f64 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstebz ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , d : * const f64 , e : * const f64 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstebz_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , d : * const f64 , e : * const f64 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f64 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEDC ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEDC_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstedc ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstedc_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEGR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEGR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstegr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstegr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEIN ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEIN_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstein ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstein_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEMR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEMR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstemr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstemr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTERF ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTERF_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsterf ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsterf_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEVD ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEVD_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstevd ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstevd_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEV ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEV_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstev ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstev_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEVR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEVR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstevr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstevr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSTEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dstevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsycon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsycon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEQUB ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEQUB_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyequb ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyequb_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGS2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGS2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygs2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygs2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsygvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYRFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYRFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyrfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyrfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsysvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , af : * mut f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTD2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTD2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytd2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytd2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsytrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTBCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTBCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtbcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtbcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTBRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtbrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTBTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtbtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFSM ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFSM_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtfsm ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtfsm_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFTTP ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFTTP_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtfttp ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtfttp_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFTTR ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTFTTR_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtfttr ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtfttr_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGEVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f64 , lds : * const :: std :: os :: raw :: c_int , p : * const f64 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGEVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f64 , lds : * const :: std :: os :: raw :: c_int , p : * const f64 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f64 , lds : * const :: std :: os :: raw :: c_int , p : * const f64 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f64 , lds : * const :: std :: os :: raw :: c_int , p : * const f64 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGEX2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGEX2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgex2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgex2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGEXC ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGEXC_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgexc ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgexc_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSEN ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSEN_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsen ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsen_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f64 , alphai : * mut f64 , beta : * mut f64 , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSJA ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSJA_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsja ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsja_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut f64 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f64 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f64 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSY2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSY2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsy2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsy2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSYL ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTGSYL_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsyl ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtgsyl_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * const f64 , ldd : * const :: std :: os :: raw :: c_int , e : * const f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtprfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtprfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtptri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtptri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtptrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtptrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPTTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpttr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtpttr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTREVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTREVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f64 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTREXC ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTREXC_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrexc ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrexc_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , x : * const f64 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRSEN ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRSEN_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrsen ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrsen_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f64 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f64 , wi : * mut f64 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f64 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f64 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRSYL ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRSYL_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrsyl ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrsyl_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTI2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTI2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrti2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrti2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrtri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrtri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTTP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTRTTP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrttp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtrttp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTZRQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTZRQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtzrqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtzrqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTZRZF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTZRZF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtzrzf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtzrzf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f64 , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DZSUM1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DZSUM1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dzsum1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dzsum1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn ICMAX1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ICMAX1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn icmax1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn icmax1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IEEECK ( ispec : * const :: std :: os :: raw :: c_int , zero : * const f32 , one : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IEEECK_ ( ispec : * const :: std :: os :: raw :: c_int , zero : * const f32 , one : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ieeeck ( ispec : * const :: std :: os :: raw :: c_int , zero : * const f32 , one : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ieeeck_ ( ispec : * const :: std :: os :: raw :: c_int , zero : * const f32 , one : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILACLC ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILACLC_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaclc ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaclc_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILACLR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILACLR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaclr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaclr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILADIAG ( diag : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILADIAG_ ( diag : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iladiag ( diag : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iladiag_ ( diag : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILADLC ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILADLC_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iladlc ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iladlc_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILADLR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILADLR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iladlr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iladlr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAENV ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , n3 : * const :: std :: os :: raw :: c_int , n4 : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAENV_ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , n3 : * const :: std :: os :: raw :: c_int , n4 : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaenv ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , n3 : * const :: std :: os :: raw :: c_int , n4 : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaenv_ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , n3 : * const :: std :: os :: raw :: c_int , n4 : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAPREC ( prec : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAPREC_ ( prec : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaprec ( prec : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaprec_ ( prec : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILASLC ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILASLC_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaslc ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaslc_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILASLR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILASLR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaslr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilaslr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILATRANS ( trans : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILATRANS_ ( trans : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilatrans ( trans : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilatrans_ ( trans : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAUPLO ( uplo : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAUPLO_ ( uplo : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilauplo ( uplo : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilauplo_ ( uplo : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAVER ( vers_major : * mut :: std :: os :: raw :: c_int , vers_minor : * mut :: std :: os :: raw :: c_int , vers_patch : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ILAVER_ ( vers_major : * mut :: std :: os :: raw :: c_int , vers_minor : * mut :: std :: os :: raw :: c_int , vers_patch : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ilaver ( vers_major : * mut :: std :: os :: raw :: c_int , vers_minor : * mut :: std :: os :: raw :: c_int , vers_patch : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ilaver_ ( vers_major : * mut :: std :: os :: raw :: c_int , vers_minor : * mut :: std :: os :: raw :: c_int , vers_patch : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ILAZLC ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAZLC_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilazlc ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilazlc_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAZLR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ILAZLR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilazlr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn ilazlr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IPARMQ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lwork : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IPARMQ_ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lwork : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iparmq ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lwork : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn iparmq_ ( ispec : * const :: std :: os :: raw :: c_int , name : * const :: std :: os :: raw :: c_char , opts : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lwork : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IZMAX1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn IZMAX1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn izmax1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn izmax1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn LSAMEN ( n : * const :: std :: os :: raw :: c_int , ca : * const :: std :: os :: raw :: c_char , cb : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn LSAMEN_ ( n : * const :: std :: os :: raw :: c_int , ca : * const :: std :: os :: raw :: c_char , cb : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn lsamen ( n : * const :: std :: os :: raw :: c_int , ca : * const :: std :: os :: raw :: c_char , cb : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn lsamen_ ( n : * const :: std :: os :: raw :: c_int , ca : * const :: std :: os :: raw :: c_char , cb : * const :: std :: os :: raw :: c_char ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SBDSDC ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f32 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBDSDC_ ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f32 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbdsdc ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f32 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbdsdc_ ( uplo : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , q : * mut f32 , iq : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBDSQR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SBDSQR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbdsqr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sbdsqr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SCSUM1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SCSUM1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn scsum1 ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn scsum1_ ( n : * const :: std :: os :: raw :: c_int , cx : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SDISNA ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , sep : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDISNA_ ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , sep : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdisna ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , sep : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdisna_ ( job : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , sep : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SECOND ( ) -> f32 ; } extern "C" { pub fn SECOND_ ( ) -> f32 ; } extern "C" { pub fn second ( ) -> f32 ; } extern "C" { pub fn second_ ( ) -> f32 ; } extern "C" { pub fn SGBBRD ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f32 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBBRD_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f32 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbbrd ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f32 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbbrd_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut f32 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBRFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBRFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbrfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbrfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBSV ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBSV_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbsv ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbsv_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBSVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBSVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbsvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbsvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBTF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBTF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbtf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbtf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBTRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBTRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbtrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbtrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGBTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbtrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgbtrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBD2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBD2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebd2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebd2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEBRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgebrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGECON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGECON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgecon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgecon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , r : * mut f32 , c : * mut f32 , rowcnd : * mut f32 , colcnd : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEES ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEES_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgees ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgees_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEESX ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEESX_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeesx ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeesx_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_S_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vs : * mut f32 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f32 , abnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEGS ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEGS_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgegs ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgegs_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEGV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEGV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgegv ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgegv_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEHD2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEHD2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgehd2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgehd2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEHRD ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEHRD_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgehrd ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgehrd_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEJSV ( joba : * const :: std :: os :: raw :: c_char , jobu : * mut :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEJSV_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgejsv ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgejsv_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobr : * const :: std :: os :: raw :: c_char , jobt : * const :: std :: os :: raw :: c_char , jobp : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelsd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelsd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgels ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgels_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelss ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelss_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f32 , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSX ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSX_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelsx ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelsx_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSY ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGELSY_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelsy ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgelsy_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeql2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeql2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQLF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQLF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqlf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqlf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQP3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQP3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqp3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqp3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQPF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQPF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqpf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqpf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQR2P ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQR2P_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqr2p ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqr2p_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRFP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRFP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrfp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrfp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGERQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgerqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESC2 ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn SGESC2_ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn sgesc2 ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn sgesc2_ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f32 ) ; } extern "C" { pub fn SGESDD ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESDD_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesdd ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesdd_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVD ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvd ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVJ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVJ_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvj ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvj_ ( joba : * const :: std :: os :: raw :: c_char , jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGESVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgesvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f32 , c : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETC2 ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETC2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetc2 ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetc2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_SGETRFNPI ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_SGETRFNPI_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_sgetrfnpi ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_sgetrfnpi_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRI ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRI_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetri ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetri_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGETRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgetrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggbak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggbak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f32 , rscale : * const f32 , m : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggbal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggbal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGES ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGES_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgges ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgges_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGESX ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGESX_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggesx ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggesx_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_S_SELECT_FUNCTION_3 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vsl : * mut f32 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut f32 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f32 , rscale : * mut f32 , abnrm : * mut f32 , bbnrm : * mut f32 , rconde : * mut f32 , rcondv : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGGLM ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f32 , x : * mut f32 , y : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGGLM_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f32 , x : * mut f32 , y : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggglm ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f32 , x : * mut f32 , y : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggglm_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , d : * mut f32 , x : * mut f32 , y : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGHRD ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGHRD_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgghrd ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgghrd_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGLSE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , d : * mut f32 , x : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGLSE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , d : * mut f32 , x : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgglse ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , d : * mut f32 , x : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgglse_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , d : * mut f32 , x : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGQRF ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGQRF_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggqrf ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggqrf_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGRQF ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGRQF_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggrqf ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggrqf_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , taua : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVD ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvd ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVP ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGGSVP_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvp ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sggsvp_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGSVJ0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGSVJ0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgsvj0 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgsvj0_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGSVJ1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGSVJ1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgsvj1 ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgsvj1_ ( jobv : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , sva : * mut f32 , mv : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , eps : * const f32 , sfmin : * const f32 , tol : * const f32 , nsweep : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * const f32 , df : * const f32 , duf : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * const f32 , df : * const f32 , duf : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * const f32 , df : * const f32 , duf : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * const f32 , df : * const f32 , duf : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * mut f32 , df : * mut f32 , duf : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * mut f32 , df : * mut f32 , duf : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * mut f32 , df : * mut f32 , duf : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , dlf : * mut f32 , df : * mut f32 , duf : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTTRF ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTTRF_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgttrf ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgttrf_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * mut f32 , du2 : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgttrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgttrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTTS2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGTTS2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtts2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgtts2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , du2 : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SHGEQZ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SHGEQZ_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn shgeqz ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn shgeqz_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SHSEIN ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * const f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SHSEIN_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * const f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn shsein ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * const f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn shsein_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * const f32 , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SHSEQR ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SHSEQR_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn shseqr ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn shseqr_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SISNAN ( sin : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SISNAN_ ( sin : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn sisnan ( sin : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn sisnan_ ( sin : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SLABAD ( smallx : * mut f32 , large : * mut f32 ) ; } extern "C" { pub fn SLABAD_ ( smallx : * mut f32 , large : * mut f32 ) ; } extern "C" { pub fn slabad ( smallx : * mut f32 , large : * mut f32 ) ; } extern "C" { pub fn slabad_ ( smallx : * mut f32 , large : * mut f32 ) ; } extern "C" { pub fn SLABRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLABRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slabrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slabrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tauq : * mut f32 , taup : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLACN2 ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLACN2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slacn2 ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slacn2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLACON ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLACON_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slacon ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slacon_ ( n : * const :: std :: os :: raw :: c_int , v : * mut f32 , x : * mut f32 , isgn : * mut :: std :: os :: raw :: c_int , est : * mut f32 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLACPY ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLACPY_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slacpy ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slacpy_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLADIV ( a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , p : * mut f32 , q : * mut f32 ) ; } extern "C" { pub fn SLADIV_ ( a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , p : * mut f32 , q : * mut f32 ) ; } extern "C" { pub fn sladiv ( a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , p : * mut f32 , q : * mut f32 ) ; } extern "C" { pub fn sladiv_ ( a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , p : * mut f32 , q : * mut f32 ) ; } extern "C" { pub fn SLAE2 ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 ) ; } extern "C" { pub fn SLAE2_ ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 ) ; } extern "C" { pub fn slae2 ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 ) ; } extern "C" { pub fn slae2_ ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 ) ; } extern "C" { pub fn SLAEBZ ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f32 , reltol : * const f32 , pivmin : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f32 , c : * mut f32 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEBZ_ ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f32 , reltol : * const f32 , pivmin : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f32 , c : * mut f32 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaebz ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f32 , reltol : * const f32 , pivmin : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f32 , c : * mut f32 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaebz_ ( ijob : * const :: std :: os :: raw :: c_int , nitmax : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , mmax : * const :: std :: os :: raw :: c_int , minp : * const :: std :: os :: raw :: c_int , nbmin : * const :: std :: os :: raw :: c_int , abstol : * const f32 , reltol : * const f32 , pivmin : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , nval : * mut :: std :: os :: raw :: c_int , ab : * mut f32 , c : * mut f32 , mout : * mut :: std :: os :: raw :: c_int , nab : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED0 ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED0_ ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed0 ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed0_ ( icompq : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , ldqs : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED2 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f32 , z : * const f32 , dlamda : * mut f32 , w : * mut f32 , q2 : * mut f32 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED2_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f32 , z : * const f32 , dlamda : * mut f32 , w : * mut f32 , q2 : * mut f32 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed2 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f32 , z : * const f32 , dlamda : * mut f32 , w : * mut f32 , q2 : * mut f32 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed2_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * mut f32 , z : * const f32 , dlamda : * mut f32 , w : * mut f32 , q2 : * mut f32 , indx : * mut :: std :: os :: raw :: c_int , indxc : * mut :: std :: os :: raw :: c_int , indxp : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED3 ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * mut f32 , q2 : * const f32 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED3_ ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * mut f32 , q2 : * const f32 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed3 ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * mut f32 , q2 : * const f32 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed3_ ( k : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * mut f32 , q2 : * const f32 , indx : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , w : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED5 ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 ) ; } extern "C" { pub fn SLAED5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 ) ; } extern "C" { pub fn slaed5 ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 ) ; } extern "C" { pub fn slaed5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dlam : * mut f32 ) ; } extern "C" { pub fn SLAED6 ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f32 , d : * const f32 , z : * const f32 , finit : * const f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED6_ ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f32 , d : * const f32 , z : * const f32 , finit : * const f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed6 ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f32 , d : * const f32 , z : * const f32 , finit : * const f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed6_ ( kniter : * const :: std :: os :: raw :: c_int , orgati : * const :: std :: os :: raw :: c_int , rho : * const f32 , d : * const f32 , z : * const f32 , finit : * const f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED7 ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED7_ ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed7 ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed7_ ( icompq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * mut :: std :: os :: raw :: c_int , rho : * const f32 , cutpnt : * const :: std :: os :: raw :: c_int , qstore : * mut f32 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED8 ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed8 ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , rho : * mut f32 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f32 , dlamda : * mut f32 , q2 : * mut f32 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f32 , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED9 ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * const f32 , w : * const f32 , s : * mut f32 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAED9_ ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * const f32 , w : * const f32 , s : * mut f32 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed9 ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * const f32 , w : * const f32 , s : * mut f32 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaed9_ ( k : * const :: std :: os :: raw :: c_int , kstart : * const :: std :: os :: raw :: c_int , kstop : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f32 , dlamda : * const f32 , w : * const f32 , s : * mut f32 , lds : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEDA ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , q : * const f32 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f32 , ztemp : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEDA_ ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , q : * const f32 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f32 , ztemp : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaeda ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , q : * const f32 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f32 , ztemp : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaeda_ ( n : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , q : * const f32 , qptr : * const :: std :: os :: raw :: c_int , z : * mut f32 , ztemp : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEIN ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , vr : * mut f32 , vi : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , bignum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEIN_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , vr : * mut f32 , vi : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , bignum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaein ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , vr : * mut f32 , vi : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , bignum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaein_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , vr : * mut f32 , vi : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , eps3 : * const f32 , smlnum : * const f32 , bignum : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEV2 ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut f32 ) ; } extern "C" { pub fn SLAEV2_ ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut f32 ) ; } extern "C" { pub fn slaev2 ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut f32 ) ; } extern "C" { pub fn slaev2_ ( a : * const f32 , b : * const f32 , c : * const f32 , rt1 : * mut f32 , rt2 : * mut f32 , cs1 : * mut f32 , sn1 : * mut f32 ) ; } extern "C" { pub fn SLAEXC ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAEXC_ ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaexc ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaexc_ ( wantq : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAG2D ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const f32 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAG2D_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const f32 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slag2d ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const f32 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slag2d_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sa : * const f32 , ldsa : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAG2 ( a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f32 , scale1 : * mut f32 , scale2 : * mut f32 , wr1 : * mut f32 , wr2 : * mut f32 , wi : * mut f32 ) ; } extern "C" { pub fn SLAG2_ ( a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f32 , scale1 : * mut f32 , scale2 : * mut f32 , wr1 : * mut f32 , wr2 : * mut f32 , wi : * mut f32 ) ; } extern "C" { pub fn slag2 ( a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f32 , scale1 : * mut f32 , scale2 : * mut f32 , wr1 : * mut f32 , wr2 : * mut f32 , wi : * mut f32 ) ; } extern "C" { pub fn slag2_ ( a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , safmin : * const f32 , scale1 : * mut f32 , scale2 : * mut f32 , wr1 : * mut f32 , wr2 : * mut f32 , wi : * mut f32 ) ; } extern "C" { pub fn SLAGS2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const f32 , a3 : * const f32 , b1 : * const f32 , b2 : * const f32 , b3 : * const f32 , csu : * mut f32 , snu : * mut f32 , csv : * mut f32 , snv : * mut f32 , csq : * mut f32 , snq : * mut f32 ) ; } extern "C" { pub fn SLAGS2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const f32 , a3 : * const f32 , b1 : * const f32 , b2 : * const f32 , b3 : * const f32 , csu : * mut f32 , snu : * mut f32 , csv : * mut f32 , snv : * mut f32 , csq : * mut f32 , snq : * mut f32 ) ; } extern "C" { pub fn slags2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const f32 , a3 : * const f32 , b1 : * const f32 , b2 : * const f32 , b3 : * const f32 , csu : * mut f32 , snu : * mut f32 , csv : * mut f32 , snv : * mut f32 , csq : * mut f32 , snq : * mut f32 ) ; } extern "C" { pub fn slags2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f32 , a2 : * const f32 , a3 : * const f32 , b1 : * const f32 , b2 : * const f32 , b3 : * const f32 , csu : * mut f32 , snu : * mut f32 , csv : * mut f32 , snv : * mut f32 , csq : * mut f32 , snq : * mut f32 ) ; } extern "C" { pub fn SLAGTF ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lambda : * const f32 , b : * mut f32 , c : * mut f32 , tol : * const f32 , d : * mut f32 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGTF_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lambda : * const f32 , b : * mut f32 , c : * mut f32 , tol : * const f32 , d : * mut f32 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagtf ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lambda : * const f32 , b : * mut f32 , c : * mut f32 , tol : * const f32 , d : * mut f32 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagtf_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lambda : * const f32 , b : * mut f32 , c : * mut f32 , tol : * const f32 , d : * mut f32 , in_ : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGTM ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const f32 , d : * const f32 , du : * const f32 , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGTM_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const f32 , d : * const f32 , du : * const f32 , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagtm ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const f32 , d : * const f32 , du : * const f32 , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagtm_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f32 , dl : * const f32 , d : * const f32 , du : * const f32 , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGTS ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f32 , tol : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGTS_ ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f32 , tol : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagts ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f32 , tol : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagts_ ( job : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * const f32 , c : * const f32 , d : * const f32 , in_ : * const :: std :: os :: raw :: c_int , y : * mut f32 , tol : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGV2 ( a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , csl : * mut f32 , snl : * mut f32 , csr : * mut f32 , snr : * mut f32 ) ; } extern "C" { pub fn SLAGV2_ ( a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , csl : * mut f32 , snl : * mut f32 , csr : * mut f32 , snr : * mut f32 ) ; } extern "C" { pub fn slagv2 ( a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , csl : * mut f32 , snl : * mut f32 , csr : * mut f32 , snr : * mut f32 ) ; } extern "C" { pub fn slagv2_ ( a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , csl : * mut f32 , snl : * mut f32 , csr : * mut f32 , snr : * mut f32 ) ; } extern "C" { pub fn SLAHQR ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAHQR_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slahqr ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slahqr_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAHR2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAHR2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slahr2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slahr2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAHRD ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAHRD_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slahrd ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slahrd_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAIC1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f32 , sest : * const f32 , w : * const f32 , gamma : * const f32 , sestpr : * mut f32 , s : * mut f32 , c : * mut f32 ) ; } extern "C" { pub fn SLAIC1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f32 , sest : * const f32 , w : * const f32 , gamma : * const f32 , sestpr : * mut f32 , s : * mut f32 , c : * mut f32 ) ; } extern "C" { pub fn slaic1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f32 , sest : * const f32 , w : * const f32 , gamma : * const f32 , sestpr : * mut f32 , s : * mut f32 , c : * mut f32 ) ; } extern "C" { pub fn slaic1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const f32 , sest : * const f32 , w : * const f32 , gamma : * const f32 , sestpr : * mut f32 , s : * mut f32 , c : * mut f32 ) ; } extern "C" { pub fn SLAISNAN ( sin1 : * const f32 , sin2 : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SLAISNAN_ ( sin1 : * const f32 , sin2 : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn slaisnan ( sin1 : * const f32 , sin2 : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn slaisnan_ ( sin1 : * const f32 , sin2 : * const f32 ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SLALN2 ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f32 , ca : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f32 , d2 : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALN2_ ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f32 , ca : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f32 , d2 : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaln2 ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f32 , ca : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f32 , d2 : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaln2_ ( ltrans : * const :: std :: os :: raw :: c_int , na : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , smin : * const f32 , ca : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , d1 : * const f32 , d2 : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , wr : * const f32 , wi : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALS0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALS0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slals0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slals0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f32 , difl : * const f32 , difr : * const f32 , z : * const f32 , k : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALSA ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALSA_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slalsa ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slalsa_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut f32 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f32 , k : * const :: std :: os :: raw :: c_int , difl : * const f32 , difr : * const f32 , z : * const f32 , poles : * const f32 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f32 , c : * const f32 , s : * const f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALSD ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLALSD_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slalsd ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slalsd_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f32 , rank : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMCH ( cmach : * const :: std :: os :: raw :: c_char ) -> f32 ; } extern "C" { pub fn SLAMCH_ ( cmach : * const :: std :: os :: raw :: c_char ) -> f32 ; } extern "C" { pub fn slamch ( cmach : * const :: std :: os :: raw :: c_char ) -> f32 ; } extern "C" { pub fn slamch_ ( cmach : * const :: std :: os :: raw :: c_char ) -> f32 ; } extern "C" { pub fn SLAMC1 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMC1_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamc1 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamc1_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , ieee1 : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMC2 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f32 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f32 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn SLAMC2_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f32 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f32 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn slamc2 ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f32 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f32 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn slamc2_ ( beta : * mut :: std :: os :: raw :: c_int , t : * mut :: std :: os :: raw :: c_int , rnd : * mut :: std :: os :: raw :: c_int , eps : * mut f32 , emin : * mut :: std :: os :: raw :: c_int , rmin : * mut f32 , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn SLAMC3 ( a : * const f32 , b : * const f32 ) -> f32 ; } extern "C" { pub fn SLAMC3_ ( a : * const f32 , b : * const f32 ) -> f32 ; } extern "C" { pub fn slamc3 ( a : * const f32 , b : * const f32 ) -> f32 ; } extern "C" { pub fn slamc3_ ( a : * const f32 , b : * const f32 ) -> f32 ; } extern "C" { pub fn SLAMC4 ( emin : * mut :: std :: os :: raw :: c_int , start : * const f32 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMC4_ ( emin : * mut :: std :: os :: raw :: c_int , start : * const f32 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamc4 ( emin : * mut :: std :: os :: raw :: c_int , start : * const f32 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamc4_ ( emin : * mut :: std :: os :: raw :: c_int , start : * const f32 , base : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMC5 ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn SLAMC5_ ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn slamc5 ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn slamc5_ ( beta : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , emin : * const :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , emax : * mut :: std :: os :: raw :: c_int , rmax : * mut f32 ) ; } extern "C" { pub fn SLAMRG ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f32 , strd1 : * const :: std :: os :: raw :: c_int , strd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAMRG_ ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f32 , strd1 : * const :: std :: os :: raw :: c_int , strd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamrg ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f32 , strd1 : * const :: std :: os :: raw :: c_int , strd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slamrg_ ( n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , a : * const f32 , strd1 : * const :: std :: os :: raw :: c_int , strd2 : * const :: std :: os :: raw :: c_int , index : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLANEG ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , sigma : * const f32 , pivmin : * const f32 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SLANEG_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , sigma : * const f32 , pivmin : * const f32 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn slaneg ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , sigma : * const f32 , pivmin : * const f32 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn slaneg_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , sigma : * const f32 , pivmin : * const f32 , r : * const :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn SLANGB ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANGB_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slangb ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slangb_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANGE ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANGE_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slange ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slange_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANGT ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 ) -> f32 ; } extern "C" { pub fn SLANGT_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 ) -> f32 ; } extern "C" { pub fn slangt ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 ) -> f32 ; } extern "C" { pub fn slangt_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 ) -> f32 ; } extern "C" { pub fn SLANHS ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANHS_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slanhs ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slanhs_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSF ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSF_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansf ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansf_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANST ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 ) -> f32 ; } extern "C" { pub fn SLANST_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 ) -> f32 ; } extern "C" { pub fn slanst ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 ) -> f32 ; } extern "C" { pub fn slanst_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 ) -> f32 ; } extern "C" { pub fn SLANSY ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANSY_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansy ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slansy_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANTB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANTB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slantb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slantb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANTP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANTP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slantp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slantp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANTR ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANTR_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slantr ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn slantr_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLANV2 ( a : * mut f32 , b : * mut f32 , c : * mut f32 , d : * mut f32 , rt1r : * mut f32 , rt1i : * mut f32 , rt2r : * mut f32 , rt2i : * mut f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn SLANV2_ ( a : * mut f32 , b : * mut f32 , c : * mut f32 , d : * mut f32 , rt1r : * mut f32 , rt1i : * mut f32 , rt2r : * mut f32 , rt2i : * mut f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn slanv2 ( a : * mut f32 , b : * mut f32 , c : * mut f32 , d : * mut f32 , rt1r : * mut f32 , rt1i : * mut f32 , rt2r : * mut f32 , rt2i : * mut f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn slanv2_ ( a : * mut f32 , b : * mut f32 , c : * mut f32 , d : * mut f32 , rt1r : * mut f32 , rt1i : * mut f32 , rt2r : * mut f32 , rt2i : * mut f32 , cs : * mut f32 , sn : * mut f32 ) ; } extern "C" { pub fn SLAPLL ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn SLAPLL_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn slapll ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn slapll_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f32 ) ; } extern "C" { pub fn SLAPMT ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAPMT_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slapmt ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slapmt_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAPY2 ( x : * const f32 , y : * const f32 ) -> f32 ; } extern "C" { pub fn SLAPY2_ ( x : * const f32 , y : * const f32 ) -> f32 ; } extern "C" { pub fn slapy2 ( x : * const f32 , y : * const f32 ) -> f32 ; } extern "C" { pub fn slapy2_ ( x : * const f32 , y : * const f32 ) -> f32 ; } extern "C" { pub fn SLAPY3 ( x : * const f32 , y : * const f32 , z : * const f32 ) -> f32 ; } extern "C" { pub fn SLAPY3_ ( x : * const f32 , y : * const f32 , z : * const f32 ) -> f32 ; } extern "C" { pub fn slapy3 ( x : * const f32 , y : * const f32 , z : * const f32 ) -> f32 ; } extern "C" { pub fn slapy3_ ( x : * const f32 , y : * const f32 , z : * const f32 ) -> f32 ; } extern "C" { pub fn SLAQGB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQGB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqgb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqgb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , r : * const f32 , c : * const f32 , rowcnd : * const f32 , colcnd : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQP2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLAQP2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slaqp2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slaqp2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLAQPS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut f32 , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQPS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut f32 , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqps ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut f32 , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqps_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut f32 , vn1 : * mut f32 , vn2 : * mut f32 , auxv : * mut f32 , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR1 ( n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f32 , si1 : * mut f32 , sr2 : * mut f32 , si2 : * mut f32 , v : * mut f32 ) ; } extern "C" { pub fn SLAQR1_ ( n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f32 , si1 : * mut f32 , sr2 : * mut f32 , si2 : * mut f32 , v : * mut f32 ) ; } extern "C" { pub fn slaqr1 ( n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f32 , si1 : * mut f32 , sr2 : * mut f32 , si2 : * mut f32 , v : * mut f32 ) ; } extern "C" { pub fn slaqr1_ ( n : * const :: std :: os :: raw :: c_int , h : * const f32 , ldh : * const :: std :: os :: raw :: c_int , sr1 : * const f32 , si1 : * mut f32 , sr2 : * mut f32 , si2 : * mut f32 , v : * mut f32 ) ; } extern "C" { pub fn SLAQR2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f32 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQR5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f32 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f32 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqr5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , sr : * mut f32 , si : * mut f32 , h : * mut f32 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut f32 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut f32 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQSB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQSB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqsb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqsb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQSP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQSP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqsp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqsp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQSY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQSY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqsy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn slaqsy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , s : * const f32 , scond : * const f32 , amax : * const f32 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn SLAQTR ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , b : * const f32 , w : * const f32 , scale : * mut f32 , x : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAQTR_ ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , b : * const f32 , w : * const f32 , scale : * mut f32 , x : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqtr ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , b : * const f32 , w : * const f32 , scale : * mut f32 , x : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaqtr_ ( ltran : * const :: std :: os :: raw :: c_int , lreal : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , b : * const f32 , w : * const f32 , scale : * mut f32 , x : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAR1V ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut f32 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLAR1V_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut f32 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slar1v ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut f32 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slar1v_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f32 , d : * const f32 , l : * const f32 , ld : * const f32 , lld : * const f32 , pivmin : * const f32 , gaptol : * const f32 , z : * mut f32 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f32 , mingma : * mut f32 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f32 , resid : * mut f32 , rqcorr : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLAR2V ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , z : * mut f32 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAR2V_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , z : * mut f32 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slar2v ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , z : * mut f32 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slar2v_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , z : * mut f32 , incx : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARF ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARF_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarf ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarf_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARFG ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn SLARFG_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn slarfg ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn slarfg_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn SLARFGP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn SLARFGP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn slarfgp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn slarfgp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn SLARFP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn SLARFP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn slarfp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn slarfp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut f32 , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , tau : * mut f32 ) ; } extern "C" { pub fn SLARFT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARFT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarft ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarft_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARFX ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARFX_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarfx ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarfx_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARGV ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARGV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slargv ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slargv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * mut f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARNV ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn SLARNV_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn slarnv ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn slarnv_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn SLARRA ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , e2 : * mut f32 , spltol : * const f32 , tnrm : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRA_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , e2 : * mut f32 , spltol : * const f32 , tnrm : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarra ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , e2 : * mut f32 , spltol : * const f32 , tnrm : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarra_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , e2 : * mut f32 , spltol : * const f32 , tnrm : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRB ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f32 , rtol2 : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , wgap : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRB_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f32 , rtol2 : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , wgap : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrb ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f32 , rtol2 : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , wgap : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrb_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , lld : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol1 : * const f32 , rtol2 : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , wgap : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , twist : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRC ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * const f32 , e : * const f32 , pivmin : * const f32 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRC_ ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * const f32 , e : * const f32 , pivmin : * const f32 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrc ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * const f32 , e : * const f32 , pivmin : * const f32 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrc_ ( jobt : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * const f32 , e : * const f32 , pivmin : * const f32 , eigcnt : * mut :: std :: os :: raw :: c_int , lcnt : * mut :: std :: os :: raw :: c_int , rcnt : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRD ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f32 , reltol : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , pivmin : * const f32 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wl : * mut f32 , wu : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRD_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f32 , reltol : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , pivmin : * const f32 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wl : * mut f32 , wu : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrd ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f32 , reltol : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , pivmin : * const f32 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wl : * mut f32 , wu : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrd_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , gers : * const f32 , reltol : * const f32 , d : * const f32 , e : * const f32 , e2 : * const f32 , pivmin : * const f32 , nsplit : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wl : * mut f32 , wu : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRE ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f32 , vu : * mut f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , e2 : * mut f32 , rtol1 : * const f32 , rtol2 : * const f32 , spltol : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f32 , pivmin : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRE_ ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f32 , vu : * mut f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , e2 : * mut f32 , rtol1 : * const f32 , rtol2 : * const f32 , spltol : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f32 , pivmin : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarre ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f32 , vu : * mut f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , e2 : * mut f32 , rtol1 : * const f32 , rtol2 : * const f32 , spltol : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f32 , pivmin : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarre_ ( range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * mut f32 , vu : * mut f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , e2 : * mut f32 , rtol1 : * const f32 , rtol2 : * const f32 , spltol : * const f32 , nsplit : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , indexw : * mut :: std :: os :: raw :: c_int , gers : * mut f32 , pivmin : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRF ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , l : * const f32 , ld : * const f32 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f32 , wgap : * mut f32 , werr : * const f32 , spdiam : * const f32 , clgapl : * const f32 , clgapr : * mut f32 , pivmin : * const f32 , sigma : * mut f32 , dplus : * mut f32 , lplus : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRF_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , l : * const f32 , ld : * const f32 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f32 , wgap : * mut f32 , werr : * const f32 , spdiam : * const f32 , clgapl : * const f32 , clgapr : * mut f32 , pivmin : * const f32 , sigma : * mut f32 , dplus : * mut f32 , lplus : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrf ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , l : * const f32 , ld : * const f32 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f32 , wgap : * mut f32 , werr : * const f32 , spdiam : * const f32 , clgapl : * const f32 , clgapr : * mut f32 , pivmin : * const f32 , sigma : * mut f32 , dplus : * mut f32 , lplus : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrf_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , l : * const f32 , ld : * const f32 , clstrt : * const :: std :: os :: raw :: c_int , clend : * const :: std :: os :: raw :: c_int , w : * const f32 , wgap : * mut f32 , werr : * const f32 , spdiam : * const f32 , clgapl : * const f32 , clgapr : * mut f32 , pivmin : * const f32 , sigma : * mut f32 , dplus : * mut f32 , lplus : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRJ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e2 : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRJ_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e2 : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrj ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e2 : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrj_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e2 : * const f32 , ifirst : * const :: std :: os :: raw :: c_int , ilast : * const :: std :: os :: raw :: c_int , rtol : * const f32 , offset : * const :: std :: os :: raw :: c_int , w : * mut f32 , werr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pivmin : * const f32 , spdiam : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRK ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f32 , gu : * const f32 , d : * const f32 , e2 : * const f32 , pivmin : * const f32 , reltol : * const f32 , w : * mut f32 , werr : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRK_ ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f32 , gu : * const f32 , d : * const f32 , e2 : * const f32 , pivmin : * const f32 , reltol : * const f32 , w : * mut f32 , werr : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrk ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f32 , gu : * const f32 , d : * const f32 , e2 : * const f32 , pivmin : * const f32 , reltol : * const f32 , w : * mut f32 , werr : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrk_ ( n : * const :: std :: os :: raw :: c_int , iw : * const :: std :: os :: raw :: c_int , gl : * const f32 , gu : * const f32 , d : * const f32 , e2 : * const f32 , pivmin : * const f32 , reltol : * const f32 , w : * mut f32 , werr : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRR ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRR_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrr ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrr_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRV ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARRV_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrv ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarrv_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , d : * mut f32 , l : * mut f32 , pivmin : * mut f32 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f32 , rtol1 : * const f32 , rtol2 : * const f32 , w : * mut f32 , werr : * mut f32 , wgap : * mut f32 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARSCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARSCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarscl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarscl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARTG ( f : * const f32 , g : * const f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn SLARTG_ ( f : * const f32 , g : * const f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn slartg ( f : * const f32 , g : * const f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn slartg_ ( f : * const f32 , g : * const f32 , cs : * mut f32 , sn : * mut f32 , r : * mut f32 ) ; } extern "C" { pub fn SLARTV ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARTV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slartv ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slartv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , incx : * const :: std :: os :: raw :: c_int , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARUV ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn SLARUV_ ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn slaruv ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn slaruv_ ( iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut f32 ) ; } extern "C" { pub fn SLARZB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARZB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarzb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarzb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARZ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARZ_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarz ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slarz_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLARZT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARZT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarzt ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarzt_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , tau : * const f32 , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAS2 ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 ) ; } extern "C" { pub fn SLAS2_ ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 ) ; } extern "C" { pub fn slas2 ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 ) ; } extern "C" { pub fn slas2_ ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 ) ; } extern "C" { pub fn SLASCL ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASCL_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slascl ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slascl_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f32 , cto : * const f32 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slascl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slascl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD0 ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD0_ ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd0 ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd0_ ( n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD1 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD1_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd1 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd1_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD2 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , alpha : * const f32 , beta : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD2_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , alpha : * const f32 , beta : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd2 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , alpha : * const f32 , beta : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd2_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , alpha : * const f32 , beta : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u2 : * mut f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idx : * mut :: std :: os :: raw :: c_int , idxc : * mut :: std :: os :: raw :: c_int , idxq : * mut :: std :: os :: raw :: c_int , coltyp : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD3 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , u2 : * const f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD3_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , u2 : * const f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd3 ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , u2 : * const f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd3_ ( nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , u2 : * const f32 , ldu2 : * const :: std :: os :: raw :: c_int , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , vt2 : * mut f32 , ldvt2 : * const :: std :: os :: raw :: c_int , idxc : * const :: std :: os :: raw :: c_int , ctot : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , sigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , sigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd4 ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , sigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd4_ ( n : * const :: std :: os :: raw :: c_int , i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , sigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD5 ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dsigma : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLASD5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dsigma : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slasd5 ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dsigma : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slasd5_ ( i : * const :: std :: os :: raw :: c_int , d : * const f32 , z : * const f32 , delta : * mut f32 , rho : * const f32 , dsigma : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLASD6 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , vf : * mut f32 , vl : * mut f32 , alpha : * mut f32 , beta : * mut f32 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f32 , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , k : * mut :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD6_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , vf : * mut f32 , vl : * mut f32 , alpha : * mut f32 , beta : * mut f32 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f32 , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , k : * mut :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd6 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , vf : * mut f32 , vl : * mut f32 , alpha : * mut f32 , beta : * mut f32 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f32 , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , k : * mut :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd6_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , vf : * mut f32 , vl : * mut f32 , alpha : * mut f32 , beta : * mut f32 , idxq : * mut :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * mut f32 , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , k : * mut :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD7 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , zw : * mut f32 , vf : * mut f32 , vfw : * mut f32 , vl : * mut f32 , vlw : * mut f32 , alpha : * const f32 , beta : * const f32 , dsigma : * mut f32 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD7_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , zw : * mut f32 , vf : * mut f32 , vfw : * mut f32 , vl : * mut f32 , vlw : * mut f32 , alpha : * const f32 , beta : * const f32 , dsigma : * mut f32 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd7 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , zw : * mut f32 , vf : * mut f32 , vfw : * mut f32 , vl : * mut f32 , vlw : * mut f32 , alpha : * const f32 , beta : * const f32 , dsigma : * mut f32 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd7_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , zw : * mut f32 , vf : * mut f32 , vfw : * mut f32 , vl : * mut f32 , vlw : * mut f32 , alpha : * const f32 , beta : * const f32 , dsigma : * mut f32 , idx : * mut :: std :: os :: raw :: c_int , idxp : * mut :: std :: os :: raw :: c_int , idxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * mut f32 , ldgnum : * const :: std :: os :: raw :: c_int , c : * mut f32 , s : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD8 ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , vf : * mut f32 , vl : * mut f32 , difl : * mut f32 , difr : * mut f32 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASD8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , vf : * mut f32 , vl : * mut f32 , difl : * mut f32 , difr : * mut f32 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd8 ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , vf : * mut f32 , vl : * mut f32 , difl : * mut f32 , difr : * mut f32 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasd8_ ( icompq : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * mut f32 , z : * mut f32 , vf : * mut f32 , vl : * mut f32 , difl : * mut f32 , difr : * mut f32 , lddifr : * const :: std :: os :: raw :: c_int , dsigma : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASDA ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , poles : * mut f32 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASDA_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , poles : * mut f32 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasda ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , poles : * mut f32 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasda_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * const f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut f32 , k : * mut :: std :: os :: raw :: c_int , difl : * mut f32 , difr : * mut f32 , z : * mut f32 , poles : * mut f32 , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givnum : * mut f32 , c : * mut f32 , s : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASDQ ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASDQ_ ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasdq ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasdq_ ( uplo : * const :: std :: os :: raw :: c_char , sqre : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vt : * mut f32 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASDT ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASDT_ ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasdt ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasdt_ ( n : * const :: std :: os :: raw :: c_int , lvl : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , inode : * mut :: std :: os :: raw :: c_int , ndiml : * mut :: std :: os :: raw :: c_int , ndimr : * mut :: std :: os :: raw :: c_int , msub : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASET ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASET_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaset ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaset_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASQ1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASQ1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasq1 ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasq1_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASQ2 ( n : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASQ2_ ( n : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasq2 ( n : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasq2_ ( n : * const :: std :: os :: raw :: c_int , z : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASQ3 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f32 , sigma : * mut f32 , desig : * mut f32 , qmax : * const f32 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dn1 : * mut f32 , dn2 : * mut f32 , g : * mut f32 , tau : * mut f32 ) ; } extern "C" { pub fn SLASQ3_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f32 , sigma : * mut f32 , desig : * mut f32 , qmax : * const f32 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dn1 : * mut f32 , dn2 : * mut f32 , g : * mut f32 , tau : * mut f32 ) ; } extern "C" { pub fn slasq3 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f32 , sigma : * mut f32 , desig : * mut f32 , qmax : * const f32 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dn1 : * mut f32 , dn2 : * mut f32 , g : * mut f32 , tau : * mut f32 ) ; } extern "C" { pub fn slasq3_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * mut :: std :: os :: raw :: c_int , dmin : * mut f32 , sigma : * mut f32 , desig : * mut f32 , qmax : * const f32 , nfail : * mut :: std :: os :: raw :: c_int , iter : * mut :: std :: os :: raw :: c_int , ndiv : * mut :: std :: os :: raw :: c_int , ieee : * const :: std :: os :: raw :: c_int , ttype : * mut :: std :: os :: raw :: c_int , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dn1 : * mut f32 , dn2 : * mut f32 , g : * mut f32 , tau : * mut f32 ) ; } extern "C" { pub fn SLASQ4 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f32 , dmin1 : * const f32 , dmin2 : * const f32 , dn : * const f32 , dn1 : * const f32 , dn2 : * const f32 , tau : * mut f32 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f32 ) ; } extern "C" { pub fn SLASQ4_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f32 , dmin1 : * const f32 , dmin2 : * const f32 , dn : * const f32 , dn1 : * const f32 , dn2 : * const f32 , tau : * mut f32 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f32 ) ; } extern "C" { pub fn slasq4 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f32 , dmin1 : * const f32 , dmin2 : * const f32 , dn : * const f32 , dn1 : * const f32 , dn2 : * const f32 , tau : * mut f32 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f32 ) ; } extern "C" { pub fn slasq4_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , n0in : * mut :: std :: os :: raw :: c_int , dmin : * const f32 , dmin1 : * const f32 , dmin2 : * const f32 , dn : * const f32 , dn1 : * const f32 , dn2 : * const f32 , tau : * mut f32 , ttype : * mut :: std :: os :: raw :: c_int , g : * mut f32 ) ; } extern "C" { pub fn SLASQ5 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , tau : * const f32 , sigma : * const f32 , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f32 ) ; } extern "C" { pub fn SLASQ5_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , tau : * const f32 , sigma : * const f32 , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f32 ) ; } extern "C" { pub fn slasq5 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , tau : * const f32 , sigma : * const f32 , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f32 ) ; } extern "C" { pub fn slasq5_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , tau : * const f32 , sigma : * const f32 , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 , ieee : * const :: std :: os :: raw :: c_int , eps : * const f32 ) ; } extern "C" { pub fn SLASQ6 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 ) ; } extern "C" { pub fn SLASQ6_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 ) ; } extern "C" { pub fn slasq6 ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 ) ; } extern "C" { pub fn slasq6_ ( i0 : * const :: std :: os :: raw :: c_int , n0 : * const :: std :: os :: raw :: c_int , z : * const f32 , pp : * const :: std :: os :: raw :: c_int , dmin : * mut f32 , dmin1 : * mut f32 , dmin2 : * mut f32 , dn : * mut f32 , dnm1 : * mut f32 , dnm2 : * mut f32 ) ; } extern "C" { pub fn SLASR ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASR_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasr ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasr_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASRT ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASRT_ ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasrt ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasrt_ ( id : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASSQ ( n : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn SLASSQ_ ( n : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn slassq ( n : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn slassq_ ( n : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f32 , sumsq : * mut f32 ) ; } extern "C" { pub fn SLASV2 ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 , snr : * mut f32 , csr : * mut f32 , snl : * mut f32 , csl : * mut f32 ) ; } extern "C" { pub fn SLASV2_ ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 , snr : * mut f32 , csr : * mut f32 , snl : * mut f32 , csl : * mut f32 ) ; } extern "C" { pub fn slasv2 ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 , snr : * mut f32 , csr : * mut f32 , snl : * mut f32 , csl : * mut f32 ) ; } extern "C" { pub fn slasv2_ ( f : * const f32 , g : * const f32 , h : * const f32 , ssmin : * mut f32 , ssmax : * mut f32 , snr : * mut f32 , csr : * mut f32 , snl : * mut f32 , csl : * mut f32 ) ; } extern "C" { pub fn SLASWP ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASWP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaswp ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaswp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASY2 ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f32 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f32 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASY2_ ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f32 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f32 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasy2 ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f32 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f32 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasy2_ ( ltranl : * const :: std :: os :: raw :: c_int , ltranr : * const :: std :: os :: raw :: c_int , isgn : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , tl : * const f32 , ldtl : * const :: std :: os :: raw :: c_int , tr : * const f32 , ldtr : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , scale : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , xnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLASYF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slasyf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATBS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATBS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatbs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatbs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATDF ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f32 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATDF_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f32 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatdf ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f32 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatdf_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const f32 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATPS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATPS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatps ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatps_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut f32 , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut f32 , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut f32 , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , e : * mut f32 , tau : * mut f32 , w : * mut f32 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * mut f32 , scale : * mut f32 , cnorm : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATRZ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLATRZ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slatrz ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn slatrz_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 ) ; } extern "C" { pub fn SLATZM ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c1 : * mut f32 , c2 : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLATZM_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c1 : * mut f32 , c2 : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slatzm ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c1 : * mut f32 , c2 : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn slatzm_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const f32 , incv : * const :: std :: os :: raw :: c_int , tau : * const f32 , c1 : * mut f32 , c2 : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 ) ; } extern "C" { pub fn SLAUU2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAUU2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slauu2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slauu2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAUUM ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAUUM_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slauum ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slauum_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SOPGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SOPGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sopgtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sopgtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SOPMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SOPMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sopmtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sopmtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORG2L ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORG2L_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorg2l ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorg2l_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORG2R ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORG2R_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorg2r ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorg2r_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGBR ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGBR_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgbr ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgbr_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGHR ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGHR_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorghr ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorghr_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorglq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorglq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGQL ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGQL_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgql ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgql_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGRQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGRQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgrq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgrq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorgtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORM2L ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORM2L_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorm2l ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorm2l_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORM2R ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORM2R_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorm2r ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorm2r_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMBR ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMBR_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormbr ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormbr_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMHR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMHR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormhr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormhr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORML2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORML2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorml2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sorml2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMQL ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMQL_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormql ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormql_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMR2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMR2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormr2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormr2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMR3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMR3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormr3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormr3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMRQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMRQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormrq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormrq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMRZ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMRZ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormrz ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormrz_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SORMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sormtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , tau : * const f32 , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBSTF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBSTF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbstf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbstf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut f32 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbtf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbtf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbtrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbtrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbtrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPFTRF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPFTRF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spftrf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spftrf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPFTRS ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPFTRS_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spftrs ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spftrs_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spocon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spocon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOEQUB ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOEQUB_ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spoequb ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spoequb_ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOEQU ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOEQU_ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spoequ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spoequ_ ( n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPORFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPORFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sporfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sporfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPORFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPORFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sporfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sporfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sposv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sposv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sposvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sposvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sposvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sposvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPOTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spotrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , afp : * mut f32 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , afp : * mut f32 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , afp : * mut f32 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sppsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , afp : * mut f32 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPSTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPSTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spstf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spstf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPSTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPSTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spstrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spstrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTCON ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTCON_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptcon ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptcon_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTRFS ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * const f32 , ef : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTRFS_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * const f32 , ef : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptrfs ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * const f32 , ef : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptrfs_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * const f32 , ef : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTSVX ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * mut f32 , ef : * mut f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTSVX_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * mut f32 , ef : * mut f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptsvx ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * mut f32 , ef : * mut f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptsvx_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , df : * mut f32 , ef : * mut f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTTRF ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTTRF_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spttrf ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spttrf_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTTRS ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTTRS_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spttrs ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn spttrs_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTTS2 ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SPTTS2_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptts2 ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sptts2_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SRSCL ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut f32 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SRSCL_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut f32 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn srscl ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut f32 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn srscl_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f32 , sx : * mut f32 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGST ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f32 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGST_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f32 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgst ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f32 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgst_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * const f32 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgvd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgvd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgv ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgv_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBGVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgvx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbgvx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut f32 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBTRD ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSBTRD_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbtrd ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssbtrd_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut f32 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSFRK ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut f32 ) ; } extern "C" { pub fn SSFRK_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut f32 ) ; } extern "C" { pub fn ssfrk ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut f32 ) ; } extern "C" { pub fn ssfrk_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , beta : * const f32 , c : * mut f32 ) ; } extern "C" { pub fn SSPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspgvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , bp : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sspsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , afp : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEBZ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , d : * const f32 , e : * const f32 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEBZ_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , d : * const f32 , e : * const f32 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstebz ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , d : * const f32 , e : * const f32 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstebz_ ( range : * const :: std :: os :: raw :: c_char , order : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , d : * const f32 , e : * const f32 , m : * mut :: std :: os :: raw :: c_int , nsplit : * mut :: std :: os :: raw :: c_int , w : * mut f32 , iblock : * mut :: std :: os :: raw :: c_int , isplit : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEDC ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEDC_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstedc ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstedc_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEGR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEGR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstegr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstegr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEIN ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEIN_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstein ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstein_ ( n : * const :: std :: os :: raw :: c_int , d : * const f32 , e : * const f32 , m : * const :: std :: os :: raw :: c_int , w : * const f32 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEMR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEMR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstemr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstemr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTERF ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTERF_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssterf ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssterf_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEVD ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEVD_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstevd ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstevd_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEV ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEV_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstev ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstev_ ( jobz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEVR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEVR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstevr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstevr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSTEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sstevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssycon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssycon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEQUB ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEQUB_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyequb ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyequb_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , s : * mut f32 , scond : * mut f32 , amax : * mut f32 , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGS2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGS2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygs2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygs2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssygvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , vu : * const f32 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f32 , m : * mut :: std :: os :: raw :: c_int , w : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYRFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYRFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyrfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyrfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssysvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , af : * mut f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , rpvgrw : * mut f32 , berr : * mut f32 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTD2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTD2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytd2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytd2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssytrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STBCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STBCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stbcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stbcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STBRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stbrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STBTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stbtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFSM ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFSM_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stfsm ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stfsm_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFTTP ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFTTP_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stfttp ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stfttp_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFTTR ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STFTTR_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stfttr ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stfttr_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGEVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f32 , lds : * const :: std :: os :: raw :: c_int , p : * const f32 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGEVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f32 , lds : * const :: std :: os :: raw :: c_int , p : * const f32 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f32 , lds : * const :: std :: os :: raw :: c_int , p : * const f32 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const f32 , lds : * const :: std :: os :: raw :: c_int , p : * const f32 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGEX2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGEX2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgex2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgex2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , n1 : * const :: std :: os :: raw :: c_int , n2 : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGEXC ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGEXC_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgexc ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgexc_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSEN ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSEN_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsen ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsen_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , alphar : * mut f32 , alphai : * mut f32 , beta : * mut f32 , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f32 , pr : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSJA ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSJA_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsja ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsja_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f32 , tolb : * const f32 , alpha : * mut f32 , beta : * mut f32 , u : * mut f32 , ldu : * const :: std :: os :: raw :: c_int , v : * mut f32 , ldv : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , work : * mut f32 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , dif : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSY2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSY2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsy2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsy2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , rdsum : * mut f32 , rdscal : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , pq : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSYL ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STGSYL_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsyl ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stgsyl_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * const f32 , ldd : * const :: std :: os :: raw :: c_int , e : * const f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f32 , dif : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stprfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stprfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stptri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stptri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stptrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stptrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPTTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpttr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stpttr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STREVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STREVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut f32 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STREXC ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STREXC_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strexc ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strexc_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , ifst : * mut :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , x : * const f32 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f32 , berr : * mut f32 , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRSEN ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRSEN_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strsen ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strsen_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , q : * mut f32 , ldq : * const :: std :: os :: raw :: c_int , wr : * mut f32 , wi : * mut f32 , m : * mut :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , vl : * const f32 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const f32 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f32 , sep : * mut f32 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRSYL ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRSYL_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strsyl ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strsyl_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTI2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTI2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strti2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strti2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strtri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strtri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , arf : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTTP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STRTTP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strttp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn strttp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , ap : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STZRQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STZRQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stzrqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stzrqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STZRZF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STZRZF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stzrzf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stzrzf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , tau : * mut f32 , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn XERBLA_ARRAY ( srname_array : * const :: std :: os :: raw :: c_char , srname_len : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn XERBLA_ARRAY_ ( srname_array : * const :: std :: os :: raw :: c_char , srname_len : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn xerbla_array ( srname_array : * const :: std :: os :: raw :: c_char , srname_len : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn xerbla_array_ ( srname_array : * const :: std :: os :: raw :: c_char , srname_len : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZBDSQR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZBDSQR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zbdsqr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zbdsqr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ncvt : * const :: std :: os :: raw :: c_int , nru : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZCGESV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZCGESV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zcgesv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zcgesv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZCPOSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZCPOSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zcposv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zcposv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , swork : * mut MKL_Complex8 , rwork : * mut f64 , iter : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDRSCL ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDRSCL_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdrscl ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdrscl_ ( n : * const :: std :: os :: raw :: c_int , sa : * const f64 , sx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBBRD ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex16 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBBRD_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex16 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbbrd ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex16 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbbrd_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ncc : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , pt : * mut MKL_Complex16 , ldpt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBRFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBRFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbrfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbrfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBSV ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBSV_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbsv ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbsv_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBSVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBSVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbsvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbsvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBTF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBTF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbtf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbtf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBTRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBTRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbtrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbtrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGBTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbtrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgbtrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , scale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBD2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBD2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebd2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebd2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEBRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgebrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGECON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGECON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgecon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgecon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEQUB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEQUB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeequb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeequb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEQU ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEQU_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeequ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeequ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * mut f64 , c : * mut f64 , rowcnd : * mut f64 , colcnd : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEES ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEES_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgees ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgees_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEESX ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEESX_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeesx ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeesx_ ( jobvs : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , select : MKL_Z_SELECT_FUNCTION_1 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vs : * mut MKL_Complex16 , ldvs : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , scale : * mut f64 , abnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEGS ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEGS_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgegs ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgegs_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEGV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEGV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgegv ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgegv_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEHD2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEHD2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgehd2 ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgehd2_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEHRD ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEHRD_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgehrd ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgehrd_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelsd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelsd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELS ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELS_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgels ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgels_ ( trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelss ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelss_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , s : * mut f64 , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSX ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSX_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelsx ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelsx_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSY ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGELSY_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelsy ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgelsy_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeql2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeql2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQLF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQLF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqlf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqlf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQP3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQP3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqp3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqp3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQPF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQPF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqpf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqpf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQR2P ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQR2P_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqr2p ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqr2p_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRFP ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRFP_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrfp ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrfp_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERFSX ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERFSX_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerfsx ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerfsx_ ( trans : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERQ2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERQ2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerq2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerq2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGERQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgerqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESC2 ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn ZGESC2_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn zgesc2 ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn zgesc2_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int , scale : * mut f64 ) ; } extern "C" { pub fn ZGESDD ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESDD_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesdd ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesdd_ ( jobz : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVD ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvd ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobvt : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , vt : * mut MKL_Complex16 , ldvt : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVXX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGESVXX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvxx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgesvxx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , r : * mut f64 , c : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETC2 ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETC2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetc2 ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetc2_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , jpiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetrf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetrf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZGETRFNPI ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZGETRFNPI_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_zgetrfnpi ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_zgetrfnpi_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nfact : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRI ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRI_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetri ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetri_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGETRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgetrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGBAK ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGBAK_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggbak ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggbak_ ( job : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , lscale : * const f64 , rscale : * const f64 , m : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGBAL ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGBAL_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggbal ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggbal_ ( job : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGES ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGES_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgges ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgges_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGESX ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGESX_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggesx ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggesx_ ( jobvsl : * const :: std :: os :: raw :: c_char , jobvsr : * const :: std :: os :: raw :: c_char , sort : * const :: std :: os :: raw :: c_char , selctg : MKL_Z_SELECT_FUNCTION_2 , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , sdim : * mut :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vsl : * mut MKL_Complex16 , ldvsl : * const :: std :: os :: raw :: c_int , vsr : * mut MKL_Complex16 , ldvsr : * const :: std :: os :: raw :: c_int , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGEV ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGEV_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggev ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggev_ ( jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGEVX ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGEVX_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggevx ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggevx_ ( balanc : * const :: std :: os :: raw :: c_char , jobvl : * const :: std :: os :: raw :: c_char , jobvr : * const :: std :: os :: raw :: c_char , sense : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , ilo : * mut :: std :: os :: raw :: c_int , ihi : * mut :: std :: os :: raw :: c_int , lscale : * mut f64 , rscale : * mut f64 , abnrm : * mut f64 , bbnrm : * mut f64 , rconde : * mut f64 , rcondv : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , bwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGGLM ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGGLM_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggglm ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggglm_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGHRD ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGHRD_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgghrd ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgghrd_ ( compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGLSE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGLSE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgglse ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgglse_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , d : * mut MKL_Complex16 , x : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGQRF ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGQRF_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggqrf ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggqrf_ ( n : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGRQF ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGRQF_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggrqf ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggrqf_ ( m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , taua : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , taub : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVD ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVD_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvd ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvd_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVP ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGGSVP_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvp ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zggsvp_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , k : * mut :: std :: os :: raw :: c_int , l : * mut :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , rwork : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTCON ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTCON_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtcon ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtcon_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTRFS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * const MKL_Complex16 , df : * const MKL_Complex16 , duf : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTRFS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * const MKL_Complex16 , df : * const MKL_Complex16 , duf : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtrfs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * const MKL_Complex16 , df : * const MKL_Complex16 , duf : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtrfs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * const MKL_Complex16 , df : * const MKL_Complex16 , duf : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTSVX ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * mut MKL_Complex16 , df : * mut MKL_Complex16 , duf : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTSVX_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * mut MKL_Complex16 , df : * mut MKL_Complex16 , duf : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtsvx ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * mut MKL_Complex16 , df : * mut MKL_Complex16 , duf : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtsvx_ ( fact : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , dlf : * mut MKL_Complex16 , df : * mut MKL_Complex16 , duf : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTTRF ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTTRF_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgttrf ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgttrf_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * mut MKL_Complex16 , du2 : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTTRS ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTTRS_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgttrs ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgttrs_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTTS2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGTTS2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtts2 ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgtts2_ ( itrans : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , du2 : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGST ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGST_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgst ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgst_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * const MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgvd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgvd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgv ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgv_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBGVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgvx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbgvx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ka : * const :: std :: os :: raw :: c_int , kb : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , bb : * mut MKL_Complex16 , ldbb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBTRD ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHBTRD_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbtrd ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhbtrd_ ( vect : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHECON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHECON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhecon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhecon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEQUB ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEQUB_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheequb ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheequb_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGS2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGS2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegs2 ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegs2_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , w : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHEGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhegvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHERFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHERFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zherfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zherfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHERFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHERFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zherfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zherfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhesvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETD2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETD2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetd2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetd2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHFRK ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZHFRK_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn zhfrk ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn zhfrk_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , beta : * const f64 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZHGEQZ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHGEQZ_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhgeqz ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhgeqz_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPEVD ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPEVD_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpevd ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpevd_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPEV ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPEV_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpev ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpev_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPEVX ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPEVX_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpevx ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpevx_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGST ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGST_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgst ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgst_ ( itype : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGVD ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGVD_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgvd ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgvd_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGV ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGV_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgv ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgv_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGVX ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPGVX_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgvx ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpgvx_ ( itype : * const :: std :: os :: raw :: c_int , jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , bp : * mut MKL_Complex16 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhpsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHSEIN ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHSEIN_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhsein ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhsein_ ( side : * const :: std :: os :: raw :: c_char , eigsrc : * const :: std :: os :: raw :: c_char , initv : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , ifaill : * mut :: std :: os :: raw :: c_int , ifailr : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHSEQR ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHSEQR_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhseqr ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhseqr_ ( job : * const :: std :: os :: raw :: c_char , compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLABRD ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLABRD_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlabrd ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlabrd_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tauq : * mut MKL_Complex16 , taup : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACGV ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACGV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacgv ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacgv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACN2 ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACN2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacn2 ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacn2_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int , isave : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACON ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACON_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacon ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacon_ ( n : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , x : * mut MKL_Complex16 , est : * mut f64 , kase : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACP2 ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACP2_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacp2 ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacp2_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACPY ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACPY_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacpy ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlacpy_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLACRM ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn ZLACRM_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn zlacrm ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn zlacrm_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn ZLACRT ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn ZLACRT_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn zlacrt ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn zlacrt_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn ZLADIV ( ret_value : * mut MKL_Complex16 , x : * const MKL_Complex16 , y : * const MKL_Complex16 ) ; } extern "C" { pub fn ZLADIV_ ( ret_value : * mut MKL_Complex16 , x : * const MKL_Complex16 , y : * const MKL_Complex16 ) ; } extern "C" { pub fn zladiv ( ret_value : * mut MKL_Complex16 , x : * const MKL_Complex16 , y : * const MKL_Complex16 ) ; } extern "C" { pub fn zladiv_ ( ret_value : * mut MKL_Complex16 , x : * const MKL_Complex16 , y : * const MKL_Complex16 ) ; } extern "C" { pub fn ZLAED0 ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex16 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAED0_ ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex16 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaed0 ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex16 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaed0_ ( qsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , qstore : * mut MKL_Complex16 , ldqs : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAED7 ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAED7_ ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaed7 ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaed7_ ( n : * const :: std :: os :: raw :: c_int , cutpnt : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , tlvls : * const :: std :: os :: raw :: c_int , curlvl : * const :: std :: os :: raw :: c_int , curpbm : * const :: std :: os :: raw :: c_int , d : * mut f64 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , rho : * const f64 , indxq : * mut :: std :: os :: raw :: c_int , qstore : * mut f64 , qptr : * mut :: std :: os :: raw :: c_int , prmptr : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAED8 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f64 , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAED8_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f64 , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaed8 ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f64 , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaed8_ ( k : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , qsiz : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , d : * mut f64 , rho : * mut f64 , cutpnt : * const :: std :: os :: raw :: c_int , z : * const f64 , dlamda : * mut f64 , q2 : * mut MKL_Complex16 , ldq2 : * const :: std :: os :: raw :: c_int , w : * mut f64 , indxp : * mut :: std :: os :: raw :: c_int , indx : * mut :: std :: os :: raw :: c_int , indxq : * const :: std :: os :: raw :: c_int , perm : * mut :: std :: os :: raw :: c_int , givptr : * mut :: std :: os :: raw :: c_int , givcol : * mut :: std :: os :: raw :: c_int , givnum : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAEIN ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex16 , v : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAEIN_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex16 , v : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaein ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex16 , v : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaein_ ( rightv : * const :: std :: os :: raw :: c_int , noinit : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * const MKL_Complex16 , v : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , eps3 : * const f64 , smlnum : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAESY ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut MKL_Complex16 , rt2 : * mut MKL_Complex16 , evscal : * mut MKL_Complex16 , cs1 : * mut MKL_Complex16 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAESY_ ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut MKL_Complex16 , rt2 : * mut MKL_Complex16 , evscal : * mut MKL_Complex16 , cs1 : * mut MKL_Complex16 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaesy ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut MKL_Complex16 , rt2 : * mut MKL_Complex16 , evscal : * mut MKL_Complex16 , cs1 : * mut MKL_Complex16 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaesy_ ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut MKL_Complex16 , rt2 : * mut MKL_Complex16 , evscal : * mut MKL_Complex16 , cs1 : * mut MKL_Complex16 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAEV2 ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAEV2_ ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaev2 ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaev2_ ( a : * const MKL_Complex16 , b : * const MKL_Complex16 , c : * const MKL_Complex16 , rt1 : * mut f64 , rt2 : * mut f64 , cs1 : * mut f64 , sn1 : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAG2C ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAG2C_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlag2c ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlag2c_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGS2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const MKL_Complex16 , a3 : * const f64 , b1 : * const f64 , b2 : * const MKL_Complex16 , b3 : * const f64 , csu : * mut f64 , snu : * mut MKL_Complex16 , csv : * mut f64 , snv : * mut MKL_Complex16 , csq : * mut f64 , snq : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAGS2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const MKL_Complex16 , a3 : * const f64 , b1 : * const f64 , b2 : * const MKL_Complex16 , b3 : * const f64 , csu : * mut f64 , snu : * mut MKL_Complex16 , csv : * mut f64 , snv : * mut MKL_Complex16 , csq : * mut f64 , snq : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlags2 ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const MKL_Complex16 , a3 : * const f64 , b1 : * const f64 , b2 : * const MKL_Complex16 , b3 : * const f64 , csu : * mut f64 , snu : * mut MKL_Complex16 , csv : * mut f64 , snv : * mut MKL_Complex16 , csq : * mut f64 , snq : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlags2_ ( upper : * const :: std :: os :: raw :: c_int , a1 : * const f64 , a2 : * const MKL_Complex16 , a3 : * const f64 , b1 : * const f64 , b2 : * const MKL_Complex16 , b3 : * const f64 , csu : * mut f64 , snu : * mut MKL_Complex16 , csv : * mut f64 , snv : * mut MKL_Complex16 , csq : * mut f64 , snq : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAGTM ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGTM_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlagtm ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlagtm_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , alpha : * const f64 , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , beta : * const f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHEF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahef_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHQR ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHQR_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahqr ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahqr_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHR2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHR2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahr2 ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahr2_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHRD ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAHRD_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahrd ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlahrd_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAIC1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , sest : * const f64 , w : * const MKL_Complex16 , gamma : * const MKL_Complex16 , sestpr : * mut f64 , s : * mut MKL_Complex16 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAIC1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , sest : * const f64 , w : * const MKL_Complex16 , gamma : * const MKL_Complex16 , sestpr : * mut f64 , s : * mut MKL_Complex16 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaic1 ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , sest : * const f64 , w : * const MKL_Complex16 , gamma : * const MKL_Complex16 , sestpr : * mut f64 , s : * mut MKL_Complex16 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaic1_ ( job : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , sest : * const f64 , w : * const MKL_Complex16 , gamma : * const MKL_Complex16 , sestpr : * mut f64 , s : * mut MKL_Complex16 , c : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLALS0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLALS0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlals0 ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlals0_ ( icompq : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , nr : * const :: std :: os :: raw :: c_int , sqre : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , givnum : * const f64 , ldgnum : * const :: std :: os :: raw :: c_int , poles : * const f64 , difl : * const f64 , difr : * const f64 , z : * const f64 , k : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLALSA ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLALSA_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlalsa ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlalsa_ ( icompq : * const :: std :: os :: raw :: c_int , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , bx : * mut MKL_Complex16 , ldbx : * const :: std :: os :: raw :: c_int , u : * const f64 , ldu : * const :: std :: os :: raw :: c_int , vt : * const f64 , k : * const :: std :: os :: raw :: c_int , difl : * const f64 , difr : * const f64 , z : * const f64 , poles : * const f64 , givptr : * const :: std :: os :: raw :: c_int , givcol : * const :: std :: os :: raw :: c_int , ldgcol : * const :: std :: os :: raw :: c_int , perm : * const :: std :: os :: raw :: c_int , givnum : * const f64 , c : * const f64 , s : * const f64 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLALSD ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLALSD_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlalsd ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlalsd_ ( uplo : * const :: std :: os :: raw :: c_char , smlsiz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , rcond : * const f64 , rank : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLANGB ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANGB_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlangb ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlangb_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANGE ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANGE_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlange ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlange_ ( norm : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANGT ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn ZLANGT_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn zlangt ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn zlangt_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn ZLANHB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHE ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHE_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhe ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhe_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHF ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHF_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhf ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhf_ ( norm : * const :: std :: os :: raw :: c_char , transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHS ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHS_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhs ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlanhs_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANHT ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn ZLANHT_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn zlanht ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn zlanht_ ( norm : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 ) -> f64 ; } extern "C" { pub fn ZLANSB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANSB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlansb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlansb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANSP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANSP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlansp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlansp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANSY ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANSY_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlansy ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlansy_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANTB ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANTB_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlantb ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlantb_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANTP ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANTP_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlantp ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlantp_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANTR ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLANTR_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlantr ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zlantr_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLAPLL ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn ZLAPLL_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn zlapll ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn zlapll_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , ssmin : * mut f64 ) ; } extern "C" { pub fn ZLAPMT ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAPMT_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlapmt ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlapmt_ ( forwrd : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , k : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQGB ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQGB_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqgb ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqgb_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , r : * const f64 , c : * const f64 , rowcnd : * const f64 , colcnd : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQHB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQHB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqhb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqhb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQHE ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQHE_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqhe ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqhe_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQHP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQHP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqhp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqhp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQP2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAQP2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaqp2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaqp2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAQPS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut MKL_Complex16 , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQPS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut MKL_Complex16 , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqps ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut MKL_Complex16 , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqps_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , offset : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , jpvt : * mut :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , vn1 : * mut f64 , vn2 : * mut f64 , auxv : * mut MKL_Complex16 , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr0 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr0_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR1 ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex16 , s2 : * mut MKL_Complex16 , v : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAQR1_ ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex16 , s2 : * mut MKL_Complex16 , v : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaqr1 ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex16 , s2 : * mut MKL_Complex16 , v : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlaqr1_ ( n : * const :: std :: os :: raw :: c_int , h : * const MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , s1 : * const MKL_Complex16 , s2 : * mut MKL_Complex16 , v : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAQR2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr2 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr2_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr3 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr3_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nw : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ns : * mut :: std :: os :: raw :: c_int , nd : * mut :: std :: os :: raw :: c_int , sh : * mut MKL_Complex16 , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr4 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr4_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , iloz : * mut :: std :: os :: raw :: c_int , ihiz : * mut :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex16 , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex16 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQR5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex16 , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex16 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr5 ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex16 , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex16 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaqr5_ ( wantt : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , kacc22 : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ktop : * const :: std :: os :: raw :: c_int , kbot : * const :: std :: os :: raw :: c_int , nshfts : * const :: std :: os :: raw :: c_int , s : * mut MKL_Complex16 , h : * mut MKL_Complex16 , ldh : * const :: std :: os :: raw :: c_int , iloz : * const :: std :: os :: raw :: c_int , ihiz : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , nv : * const :: std :: os :: raw :: c_int , wv : * mut MKL_Complex16 , ldwv : * const :: std :: os :: raw :: c_int , nh : * const :: std :: os :: raw :: c_int , wh : * mut MKL_Complex16 , ldwh : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAQSB ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQSB_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqsb ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqsb_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQSP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQSP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqsp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqsp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQSY ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAQSY_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqsy ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn zlaqsy_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * const f64 , scond : * const f64 , amax : * const f64 , equed : * mut :: std :: os :: raw :: c_char ) ; } extern "C" { pub fn ZLAR1V ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut MKL_Complex16 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn ZLAR1V_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut MKL_Complex16 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn zlar1v ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut MKL_Complex16 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn zlar1v_ ( n : * const :: std :: os :: raw :: c_int , b1 : * const :: std :: os :: raw :: c_int , bn : * const :: std :: os :: raw :: c_int , lambda : * const f64 , d : * const f64 , l : * const f64 , ld : * const f64 , lld : * const f64 , pivmin : * const f64 , gaptol : * const f64 , z : * mut MKL_Complex16 , wantnc : * const :: std :: os :: raw :: c_int , negcnt : * mut :: std :: os :: raw :: c_int , ztz : * mut f64 , mingma : * mut f64 , r : * mut :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , nrminv : * mut f64 , resid : * mut f64 , rqcorr : * mut f64 , work : * mut f64 ) ; } extern "C" { pub fn ZLAR2V ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , z : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAR2V_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , z : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlar2v ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , z : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlar2v_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , z : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARCM ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn ZLARCM_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn zlarcm ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn zlarcm_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , rwork : * mut f64 ) ; } extern "C" { pub fn ZLARFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARF ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARF_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarf ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarf_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFG ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFG_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfg ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfg_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFGP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFGP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfgp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfgp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFP ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFP_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfp ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfp_ ( n : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARFT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarft ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarft_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARFX ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARFX_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfx ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarfx_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARGV ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARGV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlargv ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlargv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * mut f64 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARNV ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARNV_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarnv ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarnv_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARRV ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARRV_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarrv ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarrv_ ( n : * const :: std :: os :: raw :: c_int , vl : * const f64 , vu : * const f64 , d : * mut f64 , l : * mut f64 , pivmin : * mut f64 , isplit : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , dol : * const :: std :: os :: raw :: c_int , dou : * const :: std :: os :: raw :: c_int , minrgp : * const f64 , rtol1 : * const f64 , rtol2 : * const f64 , w : * mut f64 , werr : * mut f64 , wgap : * mut f64 , iblock : * const :: std :: os :: raw :: c_int , indexw : * const :: std :: os :: raw :: c_int , gers : * const f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARSCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARSCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarscl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarscl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARTG ( f : * const MKL_Complex16 , g : * const MKL_Complex16 , cs : * mut f64 , sn : * mut MKL_Complex16 , r : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARTG_ ( f : * const MKL_Complex16 , g : * const MKL_Complex16 , cs : * mut f64 , sn : * mut MKL_Complex16 , r : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlartg ( f : * const MKL_Complex16 , g : * const MKL_Complex16 , cs : * mut f64 , sn : * mut MKL_Complex16 , r : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlartg_ ( f : * const MKL_Complex16 , g : * const MKL_Complex16 , cs : * mut f64 , sn : * mut MKL_Complex16 , r : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARTV ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARTV_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlartv ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlartv_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 , incc : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARZB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARZB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarzb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarzb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARZ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARZ_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarz ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarz_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLARZT ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARZT_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarzt ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarzt_ ( direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASCL ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASCL_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlascl ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlascl_ ( type_ : * const :: std :: os :: raw :: c_char , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , cfrom : * const f64 , cto : * const f64 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASCL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASCL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlascl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlascl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , d : * const f64 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASET ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASET_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaset ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaset_ ( uplo : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASR ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASR_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasr ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasr_ ( side : * const :: std :: os :: raw :: c_char , pivot : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASSQ ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn ZLASSQ_ ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn zlassq ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn zlassq_ ( n : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , scale : * mut f64 , sumsq : * mut f64 ) ; } extern "C" { pub fn ZLASWP ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASWP_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaswp ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaswp_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , k1 : * const :: std :: os :: raw :: c_int , k2 : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , incx : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLASYF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlasyf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , kb : * mut :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAT2C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAT2C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlat2c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlat2c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , sa : * mut MKL_Complex8 , ldsa : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATBS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATBS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatbs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatbs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATDF ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATDF_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatdf ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatdf_ ( ijob : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , z : * const MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , rhs : * mut MKL_Complex16 , rdsum : * mut f64 , rdscal : * mut f64 , ipiv : * const :: std :: os :: raw :: c_int , jpiv : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATPS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATPS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatps ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatps_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATRD ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut MKL_Complex16 , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATRD_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut MKL_Complex16 , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatrd ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut MKL_Complex16 , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatrd_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nb : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , e : * mut f64 , tau : * mut MKL_Complex16 , w : * mut MKL_Complex16 , ldw : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , normin : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , scale : * mut f64 , cnorm : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATRZ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLATRZ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlatrz ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlatrz_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLATZM ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c1 : * mut MKL_Complex16 , c2 : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLATZM_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c1 : * mut MKL_Complex16 , c2 : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlatzm ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c1 : * mut MKL_Complex16 , c2 : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlatzm_ ( side : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , incv : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c1 : * mut MKL_Complex16 , c2 : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAUU2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAUU2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlauu2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlauu2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAUUM ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAUUM_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlauum ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlauum_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBSTF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBSTF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbstf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbstf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * mut MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbtf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbtf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbtrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbtrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * mut MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbtrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPFTRF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPFTRF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpftrf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpftrf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPFTRS ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPFTRS_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpftrs ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpftrs_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpocon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpocon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOEQUB ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOEQUB_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpoequb ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpoequb_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOEQU ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOEQU_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpoequ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpoequ_ ( n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPORFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPORFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zporfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zporfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPORFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPORFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zporfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zporfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zposv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zposv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zposvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zposvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zposvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zposvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPOTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpotrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPEQU ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPEQU_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppequ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppequ_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , afp : * mut MKL_Complex16 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , afp : * mut MKL_Complex16 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , afp : * mut MKL_Complex16 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zppsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , afp : * mut MKL_Complex16 , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPSTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPSTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpstf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpstf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPSTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPSTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpstrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpstrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , piv : * mut :: std :: os :: raw :: c_int , rank : * mut :: std :: os :: raw :: c_int , tol : * const f64 , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTCON ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTCON_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptcon ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptcon_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , anorm : * const f64 , rcond : * mut f64 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * const f64 , ef : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * const f64 , ef : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * const f64 , ef : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * const f64 , ef : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTSV ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTSV_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptsv ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptsv_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTSVX ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * mut f64 , ef : * mut MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTSVX_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * mut f64 , ef : * mut MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptsvx ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * mut f64 , ef : * mut MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptsvx_ ( fact : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , df : * mut f64 , ef : * mut MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTTRF ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTTRF_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpttrf ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpttrf_ ( n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpttrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zpttrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTTS2 ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZPTTS2_ ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptts2 ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zptts2_ ( iuplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZROT ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn ZROT_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn zrot ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn zrot_ ( n : * const :: std :: os :: raw :: c_int , cx : * mut MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , cy : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const MKL_Complex16 ) ; } extern "C" { pub fn ZSPCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspcon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspcon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPMV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , ap : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPMV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , ap : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspmv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , ap : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspmv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , ap : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZSPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 ) ; } extern "C" { pub fn zspr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 ) ; } extern "C" { pub fn zspr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZSPRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsprfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsprfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspsv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspsv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspsvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zspsvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , afp : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsptrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsptrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsptri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsptri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsptrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsptrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEDC ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEDC_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstedc ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstedc_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , lrwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEGR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEGR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstegr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstegr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , abstol : * const f64 , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEIN ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEIN_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstein ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstein_ ( n : * const :: std :: os :: raw :: c_int , d : * const f64 , e : * const f64 , m : * const :: std :: os :: raw :: c_int , w : * const f64 , iblock : * const :: std :: os :: raw :: c_int , isplit : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int , ifail : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEMR ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEMR_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstemr ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zstemr_ ( jobz : * const :: std :: os :: raw :: c_char , range : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , vl : * const f64 , vu : * const f64 , il : * const :: std :: os :: raw :: c_int , iu : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , w : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , nzc : * const :: std :: os :: raw :: c_int , isuppz : * mut :: std :: os :: raw :: c_int , tryrac : * mut :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEQR ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSTEQR_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsteqr ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsteqr_ ( compz : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCON ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYCON_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsycon ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsycon_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , anorm : * const f64 , rcond : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYEQUB ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYEQUB_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyequb ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyequb_ ( uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , s : * mut f64 , scond : * mut f64 , amax : * mut f64 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYMV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYMV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsymv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsymv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const MKL_Complex16 , y : * mut MKL_Complex16 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYRFS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYRFS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyrfs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyrfs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYRFSX ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYRFSX_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyrfsx ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsyrfsx_ ( uplo : * const :: std :: os :: raw :: c_char , equed : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , s : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSV_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysv_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSVX ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSVX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysvx ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysvx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSVXX ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYSVXX_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysvxx ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsysvxx_ ( fact : * const :: std :: os :: raw :: c_char , uplo : * mut :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * mut MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , equed : * mut :: std :: os :: raw :: c_char , s : * mut f64 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , rpvgrw : * mut f64 , berr : * mut f64 , n_err_bnds : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , nparams : * const :: std :: os :: raw :: c_int , params : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTF2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTF2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytf2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytf2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRF_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrf_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRI_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytri_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZSYTRS_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zsytrs_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTBCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTBCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztbcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztbcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTBRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTBRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztbrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztbrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTBTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTBTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztbtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztbtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFSM ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFSM_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztfsm ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztfsm_ ( transr : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , a : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFTRI ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFTRI_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztftri ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztftri_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFTTP ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFTTP_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztfttp ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztfttp_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFTTR ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTFTTR_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztfttr ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztfttr_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , arf : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGEVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex16 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex16 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGEVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex16 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex16 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex16 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex16 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , s : * const MKL_Complex16 , lds : * const :: std :: os :: raw :: c_int , p : * const MKL_Complex16 , ldp : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGEX2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGEX2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgex2 ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgex2_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , j1 : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGEXC ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGEXC_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgexc ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgexc_ ( wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSEN ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSEN_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsen ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsen_ ( ijob : * const :: std :: os :: raw :: c_int , wantq : * const :: std :: os :: raw :: c_int , wantz : * const :: std :: os :: raw :: c_int , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , alpha : * mut MKL_Complex16 , beta : * mut MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , pl : * mut f64 , pr : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , liwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSJA ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSJA_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsja ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsja_ ( jobu : * const :: std :: os :: raw :: c_char , jobv : * const :: std :: os :: raw :: c_char , jobq : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , p : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , tola : * const f64 , tolb : * const f64 , alpha : * mut f64 , beta : * mut f64 , u : * mut MKL_Complex16 , ldu : * const :: std :: os :: raw :: c_int , v : * mut MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ncycle : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , dif : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSY2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSY2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsy2 ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsy2_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , rdsum : * mut f64 , rdscal : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSYL ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTGSYL_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsyl ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztgsyl_ ( trans : * const :: std :: os :: raw :: c_char , ijob : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * const MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , scale : * mut f64 , dif : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztprfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztprfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztptri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztptri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztptrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztptrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPTTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpttr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztpttr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRCON ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRCON_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrcon ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrcon_ ( norm : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , rcond : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTREVC ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTREVC_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrevc ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrevc_ ( side : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * mut MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * mut MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTREXC ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTREXC_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrexc ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrexc_ ( compq : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , ifst : * const :: std :: os :: raw :: c_int , ilst : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRRFS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRRFS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrrfs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrrfs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , ferr : * mut f64 , berr : * mut f64 , work : * mut MKL_Complex16 , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRSEN ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRSEN_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrsen ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrsen_ ( job : * const :: std :: os :: raw :: c_char , compq : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , w : * mut MKL_Complex16 , m : * mut :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRSNA ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRSNA_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrsna ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrsna_ ( job : * const :: std :: os :: raw :: c_char , howmny : * const :: std :: os :: raw :: c_char , select : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , vl : * const MKL_Complex16 , ldvl : * const :: std :: os :: raw :: c_int , vr : * const MKL_Complex16 , ldvr : * const :: std :: os :: raw :: c_int , s : * mut f64 , sep : * mut f64 , mm : * const :: std :: os :: raw :: c_int , m : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int , rwork : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRSYL ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRSYL_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrsyl ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrsyl_ ( trana : * const :: std :: os :: raw :: c_char , tranb : * const :: std :: os :: raw :: c_char , isgn : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , scale : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTI2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTI2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrti2 ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrti2_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTRI ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTRI_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrtri ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrtri_ ( uplo : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTRS ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTRS_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrtrs ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrtrs_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , diag : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTTF ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTTF_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrttf ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrttf_ ( transr : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , arf : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTTP ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTRTTP_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrttp ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztrttp_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTZRQF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTZRQF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztzrqf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztzrqf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTZRZF ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTZRZF_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztzrzf ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztzrzf_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * mut MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNG2L ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNG2L_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zung2l ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zung2l_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNG2R ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNG2R_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zung2r ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zung2r_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGBR ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGBR_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungbr ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungbr_ ( vect : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGHR ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGHR_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunghr ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunghr_ ( n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGL2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGL2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungl2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungl2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGLQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGLQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunglq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunglq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGQL ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGQL_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungql ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungql_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGQR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGQR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungqr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungqr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGR2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGR2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungr2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungr2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGRQ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGRQ_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungrq ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungrq_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zungtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNM2L ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNM2L_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunm2l ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunm2l_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNM2R ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNM2R_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunm2r ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunm2r_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMBR ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMBR_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmbr ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmbr_ ( vect : * const :: std :: os :: raw :: c_char , side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMHR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMHR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmhr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmhr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ilo : * const :: std :: os :: raw :: c_int , ihi : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNML2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNML2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunml2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunml2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMLQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMLQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmlq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmlq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMQL ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMQL_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmql ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmql_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMQR ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMQR_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmqr ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmqr_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMR2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMR2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmr2 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmr2_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMR3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMR3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmr3 ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmr3_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMRQ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMRQ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmrq ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmrq_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMRZ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMRZ_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmrz ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmrz_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUNMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zunmtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUPGTR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUPGTR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zupgtr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zupgtr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , q : * mut MKL_Complex16 , ldq : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUPMTR ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZUPMTR_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zupmtr ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zupmtr_ ( side : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , tau : * const MKL_Complex16 , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CGEQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cgeqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESWAPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHESWAPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheswapr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cheswapr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI2X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHETRI2X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri2x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn chetri2x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GBAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GBAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_gbamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_gbamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GBRCOND_C ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GBRCOND_C_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gbrcond_c ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gbrcond_c_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GBRCOND_X ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GBRCOND_X_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gbrcond_x ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gbrcond_x_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GBRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GBRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_gbrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_gbrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GBRPVGRW ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn CLA_GBRPVGRW_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn cla_gbrpvgrw ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn cla_gbrpvgrw_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex8 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex8 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn CLA_GEAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GEAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_geamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_geamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GERCOND_C ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GERCOND_C_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gercond_c ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gercond_c_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GERCOND_X ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GERCOND_X_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gercond_x ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_gercond_x_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_GERFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GERFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_gerfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_gerfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_GERPVGRW ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn CLA_GERPVGRW_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn cla_gerpvgrw ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn cla_gerpvgrw_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn CLA_HEAMV ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_HEAMV_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_heamv ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_heamv_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_HERCOND_C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_HERCOND_C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_hercond_c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_hercond_c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_HERCOND_X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_HERCOND_X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_hercond_x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_hercond_x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_HERFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_HERFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_herfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_herfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_HERPVGRW ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_HERPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_herpvgrw ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_herpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_LIN_BERR ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex8 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn CLA_LIN_BERR_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex8 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn cla_lin_berr ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex8 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn cla_lin_berr_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex8 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn CLA_PORCOND_C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_PORCOND_C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_porcond_c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_porcond_c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_PORCOND_X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_PORCOND_X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_porcond_x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_porcond_x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_PORFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_PORFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_porfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_porfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_PORPVGRW ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_PORPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_porpvgrw ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_porpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_SYAMV ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_SYAMV_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_syamv ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_syamv_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_SYRCOND_C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_SYRCOND_C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_syrcond_c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_syrcond_c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f32 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_SYRCOND_X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_SYRCOND_X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_syrcond_x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_syrcond_x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , rwork : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_SYRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_SYRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_syrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cla_syrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut MKL_Complex8 , ayb : * mut f32 , dy : * mut MKL_Complex8 , y_tail : * mut MKL_Complex8 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLA_SYRPVGRW ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_SYRPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_syrpvgrw ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn cla_syrpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex8 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn CLA_WWADDW ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , w : * const MKL_Complex8 ) ; } extern "C" { pub fn CLA_WWADDW_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , w : * const MKL_Complex8 ) ; } extern "C" { pub fn cla_wwaddw ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , w : * const MKL_Complex8 ) ; } extern "C" { pub fn cla_wwaddw_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , y : * mut MKL_Complex8 , w : * const MKL_Complex8 ) ; } extern "C" { pub fn CTPRFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CTPRFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctprfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ctprfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex8 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex8 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DGEQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dgeqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , t : * mut f64 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GBAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GBAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_gbamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_gbamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GBRCOND ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GBRCOND_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gbrcond ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gbrcond_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GBRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GBRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_gbrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_gbrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GBRPVGRW ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GBRPVGRW_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gbrpvgrw ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gbrpvgrw_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f64 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f64 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GEAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GEAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_geamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_geamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GERCOND ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GERCOND_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gercond ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gercond_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GERFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GERFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_gerfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_gerfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_GERPVGRW ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_GERPVGRW_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gerpvgrw ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_gerpvgrw_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_LIN_BERR ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f64 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn DLA_LIN_BERR_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f64 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn dla_lin_berr ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f64 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn dla_lin_berr_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f64 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn DLA_PORCOND ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_PORCOND_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_porcond ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_porcond_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_PORFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_PORFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_porfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_porfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_PORPVGRW ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLA_PORPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dla_porpvgrw ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dla_porpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLA_SYAMV ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_SYAMV_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_syamv ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_syamv_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , x : * const f64 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_SYRCOND ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_SYRCOND_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_syrcond ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dla_syrcond_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f64 , info : * mut :: std :: os :: raw :: c_int , work : * mut f64 , iwork : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLA_SYRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_SYRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_syrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dla_syrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const f64 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut f64 , ayb : * mut f64 , dy : * mut f64 , y_tail : * mut f64 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLA_SYRPVGRW ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLA_SYRPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dla_syrpvgrw ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn dla_syrpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , af : * const f64 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn DLA_WWADDW ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , w : * const f64 ) ; } extern "C" { pub fn DLA_WWADDW_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , w : * const f64 ) ; } extern "C" { pub fn dla_wwaddw ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , w : * const f64 ) ; } extern "C" { pub fn dla_wwaddw_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f64 , y : * mut f64 , w : * const f64 ) ; } extern "C" { pub fn DTPRFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DTPRFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtprfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dtprfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f64 , ldv : * const :: std :: os :: raw :: c_int , t : * const f64 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f64 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SGEQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sgeqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , t : * mut f32 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GBAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GBAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_gbamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_gbamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f32 , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GBRCOND ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GBRCOND_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gbrcond ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gbrcond_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GBRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GBRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_gbrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_gbrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GBRPVGRW ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GBRPVGRW_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gbrpvgrw ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gbrpvgrw_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const f32 , ldab : * const :: std :: os :: raw :: c_int , afb : * const f32 , ldafb : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GEAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GEAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_geamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_geamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GERCOND ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GERCOND_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gercond ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gercond_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GERFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GERFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_gerfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_gerfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f32 , errs_c : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_GERPVGRW ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_GERPVGRW_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gerpvgrw ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_gerpvgrw_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_LIN_BERR ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f32 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn SLA_LIN_BERR_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f32 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn sla_lin_berr ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f32 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn sla_lin_berr_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const f32 , ayb : * const f32 , berr : * mut f32 ) ; } extern "C" { pub fn SLA_PORCOND ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_PORCOND_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_porcond ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_porcond_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_PORFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_PORFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_porfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_porfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_PORPVGRW ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLA_PORPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn sla_porpvgrw ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn sla_porpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLA_SYAMV ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_SYAMV_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_syamv ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_syamv_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f32 , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , x : * const f32 , incx : * const :: std :: os :: raw :: c_int , beta : * const f32 , y : * mut f32 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_SYRCOND ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_SYRCOND_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_syrcond ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn sla_syrcond_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , cmode : * const :: std :: os :: raw :: c_int , c : * const f32 , info : * mut :: std :: os :: raw :: c_int , work : * mut f32 , iwork : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLA_SYRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_SYRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_syrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sla_syrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f32 , b : * const f32 , ldb : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f32 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f32 , err_bnds_comp : * mut f32 , res : * mut f32 , ayb : * mut f32 , dy : * mut f32 , y_tail : * mut f32 , rcond : * const f32 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f32 , dz_ub : * const f32 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLA_SYRPVGRW ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLA_SYRPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn sla_syrpvgrw ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn sla_syrpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , af : * const f32 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f32 ) -> f32 ; } extern "C" { pub fn SLA_WWADDW ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , w : * const f32 ) ; } extern "C" { pub fn SLA_WWADDW_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , w : * const f32 ) ; } extern "C" { pub fn sla_wwaddw ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , w : * const f32 ) ; } extern "C" { pub fn sla_wwaddw_ ( n : * const :: std :: os :: raw :: c_int , x : * mut f32 , y : * mut f32 , w : * const f32 ) ; } extern "C" { pub fn STPRFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn STPRFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stprfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn stprfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const f32 , ldv : * const :: std :: os :: raw :: c_int , t : * const f32 , ldt : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , work : * mut f32 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRT2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZGEQRT2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrt2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zgeqrt2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , t : * mut MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESWAPR ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHESWAPR_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheswapr ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zheswapr_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , i1 : * const :: std :: os :: raw :: c_int , i2 : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri2 ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri2_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI2X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHETRI2X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri2x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zhetri2x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , nb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GBAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GBAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_gbamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_gbamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , alpha : * const f64 , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GBRCOND_C ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GBRCOND_C_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gbrcond_c ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gbrcond_c_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GBRCOND_X ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GBRCOND_X_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gbrcond_x ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gbrcond_x_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GBRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GBRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_gbrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_gbrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GBRPVGRW ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn ZLA_GBRPVGRW_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn zla_gbrpvgrw ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn zla_gbrpvgrw_ ( n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , ab : * const MKL_Complex16 , ldab : * const :: std :: os :: raw :: c_int , afb : * const MKL_Complex16 , ldafb : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn ZLA_GEAMV ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GEAMV_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_geamv ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_geamv_ ( trans : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GERCOND_C ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GERCOND_C_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gercond_c ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gercond_c_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GERCOND_X ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GERCOND_X_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gercond_x ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_gercond_x_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_GERFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GERFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_gerfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_gerfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , trans_type : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , errs_n : * mut f64 , errs_c : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_GERPVGRW ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn ZLA_GERPVGRW_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn zla_gerpvgrw ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn zla_gerpvgrw_ ( n : * const :: std :: os :: raw :: c_int , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn ZLA_HEAMV ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_HEAMV_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_heamv ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_heamv_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_HERCOND_C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_HERCOND_C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_hercond_c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_hercond_c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_HERCOND_X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_HERCOND_X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_hercond_x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_hercond_x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_HERFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_HERFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_herfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_herfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_HERPVGRW ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_HERPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_herpvgrw ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_herpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_LIN_BERR ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex16 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn ZLA_LIN_BERR_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex16 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn zla_lin_berr ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex16 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn zla_lin_berr_ ( n : * const :: std :: os :: raw :: c_int , nz : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , res : * const MKL_Complex16 , ayb : * const f64 , berr : * mut f64 ) ; } extern "C" { pub fn ZLA_PORCOND_C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_PORCOND_C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_porcond_c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_porcond_c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_PORCOND_X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_PORCOND_X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_porcond_x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_porcond_x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_PORFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_PORFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_porfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_porfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_PORPVGRW ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_PORPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_porpvgrw ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_porpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , ncols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_SYAMV ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_SYAMV_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_syamv ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_syamv_ ( uplo : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , alpha : * const f64 , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , incx : * const :: std :: os :: raw :: c_int , beta : * const f64 , y : * mut f64 , incy : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_SYRCOND_C ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_SYRCOND_C_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_syrcond_c ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_syrcond_c_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , c : * const f64 , capply : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_SYRCOND_X ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_SYRCOND_X_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_syrcond_x ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_syrcond_x_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , x : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , rwork : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_SYRFSX_EXTENDED ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_SYRFSX_EXTENDED_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_syrfsx_extended ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zla_syrfsx_extended_ ( prec_type : * const :: std :: os :: raw :: c_int , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , colequ : * const :: std :: os :: raw :: c_int , c : * const f64 , b : * const MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , berr_out : * mut f64 , n_norms : * const :: std :: os :: raw :: c_int , err_bnds_norm : * mut f64 , err_bnds_comp : * mut f64 , res : * mut MKL_Complex16 , ayb : * mut f64 , dy : * mut MKL_Complex16 , y_tail : * mut MKL_Complex16 , rcond : * const f64 , ithresh : * const :: std :: os :: raw :: c_int , rthresh : * const f64 , dz_ub : * const f64 , ignore_cwise : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLA_SYRPVGRW ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_SYRPVGRW_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_syrpvgrw ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn zla_syrpvgrw_ ( uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , info : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , af : * const MKL_Complex16 , ldaf : * const :: std :: os :: raw :: c_int , ipiv : * const :: std :: os :: raw :: c_int , work : * mut f64 ) -> f64 ; } extern "C" { pub fn ZLA_WWADDW ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , w : * const MKL_Complex16 ) ; } extern "C" { pub fn ZLA_WWADDW_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , w : * const MKL_Complex16 ) ; } extern "C" { pub fn zla_wwaddw ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , w : * const MKL_Complex16 ) ; } extern "C" { pub fn zla_wwaddw_ ( n : * const :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , y : * mut MKL_Complex16 , w : * const MKL_Complex16 ) ; } extern "C" { pub fn ZTPRFB ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZTPRFB_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztprfb ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ztprfb_ ( side : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , direct : * const :: std :: os :: raw :: c_char , storev : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , l : * const :: std :: os :: raw :: c_int , v : * const MKL_Complex16 , ldv : * const :: std :: os :: raw :: c_int , t : * const MKL_Complex16 , ldt : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , ldwork : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHERDB ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CHERDB_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cherdb ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cherdb_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYRDB ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DSYRDB_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyrdb ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dsyrdb_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f64 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYRDB ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SSYRDB_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyrdb ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ssyrdb_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , d : * mut f32 , e : * mut f32 , tau : * mut f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int , work : * mut f32 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHERDB ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZHERDB_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zherdb ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zherdb_ ( jobz : * const :: std :: os :: raw :: c_char , uplo : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , kd : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , d : * mut f64 , e : * mut f64 , tau : * mut MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , lwork : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CDTSVB ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CDTSVB_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cdtsvb ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cdtsvb_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CDTTRFB ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CDTTRFB_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cdttrfb ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cdttrfb_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex8 , d : * mut MKL_Complex8 , du : * const MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CDTTRSB ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CDTTRSB_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cdttrsb ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn cdttrsb_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , d : * const MKL_Complex8 , du : * const MKL_Complex8 , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDTSVB ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDTSVB_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddtsvb ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddtsvb_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDTTRFB ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDTTRFB_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddttrfb ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddttrfb_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f64 , d : * mut f64 , du : * const f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDTTRSB ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DDTTRSB_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddttrsb ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ddttrsb_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f64 , d : * const f64 , du : * const f64 , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDTSVB ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDTSVB_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdtsvb ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdtsvb_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDTTRFB ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDTTRFB_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdttrfb ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdttrfb_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut f32 , d : * mut f32 , du : * const f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDTTRSB ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SDTTRSB_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdttrsb ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn sdttrsb_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const f32 , d : * const f32 , du : * const f32 , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDTSVB ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDTSVB_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdtsvb ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdtsvb_ ( n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDTTRFB ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDTTRFB_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdttrfb ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdttrfb_ ( n : * const :: std :: os :: raw :: c_int , dl : * mut MKL_Complex16 , d : * mut MKL_Complex16 , du : * const MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDTTRSB ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZDTTRSB_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdttrsb ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zdttrsb_ ( trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , nrhs : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , d : * const MKL_Complex16 , du : * const MKL_Complex16 , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CTPPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CTPPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ctppack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ctppack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DTPPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DTPPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dtppack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dtppack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_STPPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_STPPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_stppack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_stppack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZTPPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZTPPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ztppack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ztppack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * mut MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CTPUNPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CTPUNPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ctpunpack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ctpunpack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex8 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DTPUNPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_DTPUNPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dtpunpack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_dtpunpack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f64 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_STPUNPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_STPUNPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_stpunpack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_stpunpack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const f32 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZTPUNPACK ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_ZTPUNPACK_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ztpunpack ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn mkl_ztpunpack_ ( uplo : * const :: std :: os :: raw :: c_char , trans : * const :: std :: os :: raw :: c_char , n : * const :: std :: os :: raw :: c_int , ap : * const MKL_Complex16 , i : * const :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , rows : * const :: std :: os :: raw :: c_int , cols : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATM1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATM1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatm1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatm1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATM1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATM1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatm1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatm1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATM1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATM1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatm1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatm1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATM1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATM1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatm1 ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatm1_ ( mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , irsign : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATM2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn DLATM2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn dlatm2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn dlatm2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn SLATM2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn SLATM2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn slatm2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn slatm2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn CLATM2 ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn CLATM2_ ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn clatm2 ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn clatm2_ ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn ZLATM2 ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn ZLATM2_ ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn zlatm2 ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn zlatm2_ ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn DLATM3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn DLATM3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn dlatm3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn dlatm3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f64 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f64 , dr : * const f64 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) -> f64 ; } extern "C" { pub fn SLATM3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn SLATM3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn slatm3 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn slatm3_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const f32 , igrade : * const :: std :: os :: raw :: c_int , dl : * const f32 , dr : * const f32 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) -> f32 ; } extern "C" { pub fn CLATM3 ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn CLATM3_ ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn clatm3 ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn clatm3_ ( retval : * mut MKL_Complex8 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex8 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex8 , dr : * const MKL_Complex8 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f32 ) ; } extern "C" { pub fn ZLATM3 ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn ZLATM3_ ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn zlatm3 ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn zlatm3_ ( retval : * mut MKL_Complex16 , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , ii : * mut :: std :: os :: raw :: c_int , j : * const :: std :: os :: raw :: c_int , isub : * mut :: std :: os :: raw :: c_int , jsub : * mut :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , d : * const MKL_Complex16 , igrade : * const :: std :: os :: raw :: c_int , dl : * const MKL_Complex16 , dr : * const MKL_Complex16 , ipvtng : * const :: std :: os :: raw :: c_int , iwork : * const :: std :: os :: raw :: c_int , sparse : * const f64 ) ; } extern "C" { pub fn DLATM5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f64 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f64 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f64 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATM5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f64 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f64 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f64 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatm5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f64 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f64 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f64 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatm5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f64 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f64 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f64 , lde : * const :: std :: os :: raw :: c_int , f : * mut f64 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f64 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f64 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATM5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f32 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f32 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f32 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATM5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f32 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f32 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f32 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatm5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f32 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f32 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f32 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatm5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , ldb : * const :: std :: os :: raw :: c_int , c : * mut f32 , ldc : * const :: std :: os :: raw :: c_int , d : * mut f32 , ldd : * const :: std :: os :: raw :: c_int , e : * mut f32 , lde : * const :: std :: os :: raw :: c_int , f : * mut f32 , ldf : * const :: std :: os :: raw :: c_int , r : * mut f32 , ldr : * const :: std :: os :: raw :: c_int , l : * mut f32 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATM5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex8 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex8 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATM5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex8 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex8 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatm5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex8 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex8 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatm5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex8 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex8 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex8 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex8 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex8 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f32 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATM5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex16 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex16 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATM5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex16 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex16 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatm5 ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex16 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex16 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatm5_ ( prtype : * const :: std :: os :: raw :: c_int , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , ldb : * const :: std :: os :: raw :: c_int , c : * mut MKL_Complex16 , ldc : * const :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , ldd : * const :: std :: os :: raw :: c_int , e : * mut MKL_Complex16 , lde : * const :: std :: os :: raw :: c_int , f : * mut MKL_Complex16 , ldf : * const :: std :: os :: raw :: c_int , r : * mut MKL_Complex16 , ldr : * const :: std :: os :: raw :: c_int , l : * mut MKL_Complex16 , ldl : * const :: std :: os :: raw :: c_int , alpha : * const f64 , qblcka : * const :: std :: os :: raw :: c_int , qblckb : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATM6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , wx : * const f64 , wy : * const f64 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn DLATM6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , wx : * const f64 , wy : * const f64 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn dlatm6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , wx : * const f64 , wy : * const f64 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn dlatm6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , b : * mut f64 , x : * mut f64 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f64 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f64 , beta : * const f64 , wx : * const f64 , wy : * const f64 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn SLATM6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , wx : * const f32 , wy : * const f32 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn SLATM6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , wx : * const f32 , wy : * const f32 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn slatm6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , wx : * const f32 , wy : * const f32 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn slatm6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , b : * mut f32 , x : * mut f32 , ldx : * const :: std :: os :: raw :: c_int , y : * mut f32 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const f32 , beta : * const f32 , wx : * const f32 , wy : * const f32 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn CLATM6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , wx : * const MKL_Complex8 , wy : * const MKL_Complex8 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn CLATM6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , wx : * const MKL_Complex8 , wy : * const MKL_Complex8 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn clatm6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , wx : * const MKL_Complex8 , wy : * const MKL_Complex8 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn clatm6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex8 , x : * mut MKL_Complex8 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex8 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex8 , beta : * const MKL_Complex8 , wx : * const MKL_Complex8 , wy : * const MKL_Complex8 , s : * mut f32 , dif : * mut f32 ) ; } extern "C" { pub fn ZLATM6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , wx : * const MKL_Complex16 , wy : * const MKL_Complex16 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn ZLATM6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , wx : * const MKL_Complex16 , wy : * const MKL_Complex16 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn zlatm6 ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , wx : * const MKL_Complex16 , wy : * const MKL_Complex16 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn zlatm6_ ( type_ : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * mut MKL_Complex16 , x : * mut MKL_Complex16 , ldx : * const :: std :: os :: raw :: c_int , y : * mut MKL_Complex16 , ldy : * const :: std :: os :: raw :: c_int , alpha : * const MKL_Complex16 , beta : * const MKL_Complex16 , wx : * const MKL_Complex16 , wy : * const MKL_Complex16 , s : * mut f64 , dif : * mut f64 ) ; } extern "C" { pub fn DLATME ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATME_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatme ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatme_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATME ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATME_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatme ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatme_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , ei : * const :: std :: os :: raw :: c_char , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATME ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATME_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatme ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatme_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f32 , modes : * const :: std :: os :: raw :: c_int , conds : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATME ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATME_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatme ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatme_ ( n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , upper : * const :: std :: os :: raw :: c_char , sim : * const :: std :: os :: raw :: c_char , ds : * mut f64 , modes : * const :: std :: os :: raw :: c_int , conds : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , anorm : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATMR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f64 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut f64 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATMR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f64 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut f64 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatmr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f64 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut f64 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatmr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f64 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut f64 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATMR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * const f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f32 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut f32 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATMR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * const f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f32 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut f32 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatmr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * const f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f32 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut f32 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatmr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * const f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut f32 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut f32 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATMR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex8 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut MKL_Complex8 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATMR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex8 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut MKL_Complex8 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatmr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex8 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut MKL_Complex8 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatmr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex8 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const MKL_Complex8 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex8 , model : * const :: std :: os :: raw :: c_int , condl : * const f32 , dr : * mut MKL_Complex8 , moder : * const :: std :: os :: raw :: c_int , condr : * const f32 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f32 , anorm : * const f32 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATMR ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex16 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut MKL_Complex16 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATMR_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex16 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut MKL_Complex16 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatmr ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex16 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut MKL_Complex16 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatmr_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut MKL_Complex16 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const MKL_Complex16 , rsign : * const :: std :: os :: raw :: c_char , grade : * const :: std :: os :: raw :: c_char , dl : * mut MKL_Complex16 , model : * const :: std :: os :: raw :: c_int , condl : * const f64 , dr : * mut MKL_Complex16 , moder : * const :: std :: os :: raw :: c_int , condr : * const f64 , pivtng : * const :: std :: os :: raw :: c_char , ipivot : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , sparse : * const f64 , anorm : * const f64 , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iwork : * mut :: std :: os :: raw :: c_int , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATMS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLATMS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatms ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlatms_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATMS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLATMS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatms ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slatms_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATMS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLATMS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatms ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clatms_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f32 , mode : * const :: std :: os :: raw :: c_int , cond : * const f32 , dmax : * const f32 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATMS ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLATMS_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatms ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlatms_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , dist : * const :: std :: os :: raw :: c_char , iseed : * mut :: std :: os :: raw :: c_int , sym : * const :: std :: os :: raw :: c_char , d : * mut f64 , mode : * const :: std :: os :: raw :: c_int , cond : * const f64 , dmax : * const f64 , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , pack : * const :: std :: os :: raw :: c_char , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAKF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , d : * const f64 , e : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAKF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , d : * const f64 , e : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlakf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , d : * const f64 , e : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlakf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f64 , lda : * const :: std :: os :: raw :: c_int , b : * const f64 , d : * const f64 , e : * const f64 , z : * mut f64 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAKF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , d : * const f32 , e : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAKF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , d : * const f32 , e : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slakf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , d : * const f32 , e : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slakf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const f32 , lda : * const :: std :: os :: raw :: c_int , b : * const f32 , d : * const f32 , e : * const f32 , z : * mut f32 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAKF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , d : * const MKL_Complex8 , e : * const MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAKF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , d : * const MKL_Complex8 , e : * const MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clakf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , d : * const MKL_Complex8 , e : * const MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clakf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex8 , d : * const MKL_Complex8 , e : * const MKL_Complex8 , z : * mut MKL_Complex8 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAKF2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , d : * const MKL_Complex16 , e : * const MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAKF2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , d : * const MKL_Complex16 , e : * const MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlakf2 ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , d : * const MKL_Complex16 , e : * const MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlakf2_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * const MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , b : * const MKL_Complex16 , d : * const MKL_Complex16 , e : * const MKL_Complex16 , z : * mut MKL_Complex16 , ldz : * const :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARGE ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARGE_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarge ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlarge_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARGE ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLARGE_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarge ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slarge_ ( n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARGE ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARGE_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarge ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarge_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARGE ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARGE_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarge ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarge_ ( n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLARND ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLARND_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dlarnd ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dlarnd_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn SLARND ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLARND_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn slarnd ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn slarnd_ ( idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn CLARND ( retval : * mut MKL_Complex8 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLARND_ ( retval : * mut MKL_Complex8 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarnd ( retval : * mut MKL_Complex8 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clarnd_ ( retval : * mut MKL_Complex8 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARND ( retval : * mut MKL_Complex16 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLARND_ ( retval : * mut MKL_Complex16 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarnd ( retval : * mut MKL_Complex16 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlarnd_ ( retval : * mut MKL_Complex16 , idist : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAROR ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAROR_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaror ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlaror_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAROR ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAROR_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaror ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slaror_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAROR ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAROR_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claror ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claror_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAROR ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAROR_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaror ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaror_ ( side : * const :: std :: os :: raw :: c_char , init : * const :: std :: os :: raw :: c_char , m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , x : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAROT ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f64 , xright : * mut f64 ) ; } extern "C" { pub fn DLAROT_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f64 , xright : * mut f64 ) ; } extern "C" { pub fn dlarot ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f64 , xright : * mut f64 ) ; } extern "C" { pub fn dlarot_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f64 , s : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f64 , xright : * mut f64 ) ; } extern "C" { pub fn SLAROT ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f32 , xright : * mut f32 ) ; } extern "C" { pub fn SLAROT_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f32 , xright : * mut f32 ) ; } extern "C" { pub fn slarot ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f32 , xright : * mut f32 ) ; } extern "C" { pub fn slarot_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const f32 , s : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut f32 , xright : * mut f32 ) ; } extern "C" { pub fn CLAROT ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * mut :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex8 , xright : * mut MKL_Complex8 ) ; } extern "C" { pub fn CLAROT_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * mut :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex8 , xright : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarot ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * mut :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex8 , xright : * mut MKL_Complex8 ) ; } extern "C" { pub fn clarot_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * mut :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex8 , s : * const MKL_Complex8 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex8 , xright : * mut MKL_Complex8 ) ; } extern "C" { pub fn ZLAROT ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex16 , xright : * mut MKL_Complex16 ) ; } extern "C" { pub fn ZLAROT_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex16 , xright : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarot ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex16 , xright : * mut MKL_Complex16 ) ; } extern "C" { pub fn zlarot_ ( lrows : * const :: std :: os :: raw :: c_int , lleft : * const :: std :: os :: raw :: c_int , lright : * const :: std :: os :: raw :: c_int , nl : * const :: std :: os :: raw :: c_int , c : * const MKL_Complex16 , s : * const MKL_Complex16 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , xleft : * mut MKL_Complex16 , xright : * mut MKL_Complex16 ) ; } extern "C" { pub fn DLARAN ( iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn DLARAN_ ( iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dlaran ( iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn dlaran_ ( iseed : * mut :: std :: os :: raw :: c_int ) -> f64 ; } extern "C" { pub fn SLARAN ( iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn SLARAN_ ( iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn slaran ( iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn slaran_ ( iseed : * mut :: std :: os :: raw :: c_int ) -> f32 ; } extern "C" { pub fn DLAGGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clagge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clagge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGGE ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGGE_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlagge ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlagge_ ( m : * const :: std :: os :: raw :: c_int , n : * const :: std :: os :: raw :: c_int , kl : * const :: std :: os :: raw :: c_int , ku : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGSY ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGSY_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clagsy ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn clagsy_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGSY ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn DLAGSY_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagsy ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn dlagsy_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut f64 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f64 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGSY ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn SLAGSY_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagsy ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn slagsy_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut f32 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut f32 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGSY ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGSY_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlagsy ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlagsy_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGHE ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn CLAGHE_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claghe ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn claghe_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f32 , a : * mut MKL_Complex8 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGHE ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn ZLAGHE_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaghe ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn zlaghe_ ( n : * const :: std :: os :: raw :: c_int , k : * const :: std :: os :: raw :: c_int , d : * const f64 , a : * mut MKL_Complex16 , lda : * const :: std :: os :: raw :: c_int , iseed : * mut :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , info : * mut :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn MKL_CSPFFRT2 ( ap : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , work2 : * mut MKL_Complex8 ) ; } extern "C" { pub fn mkl_cspffrt2 ( ap : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , work2 : * mut MKL_Complex8 ) ; } extern "C" { pub fn mkl_cspffrt2_ ( ap : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , work2 : * mut MKL_Complex8 ) ; } extern "C" { pub fn MKL_CSPFFRTX ( ap : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , work2 : * mut MKL_Complex8 ) ; } extern "C" { pub fn mkl_cspffrtx ( ap : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , work2 : * mut MKL_Complex8 ) ; } extern "C" { pub fn mkl_cspffrtx_ ( ap : * mut MKL_Complex8 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex8 , work2 : * mut MKL_Complex8 ) ; } extern "C" { pub fn MKL_DSPFFRT2 ( ap : * mut f64 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f64 , work2 : * mut f64 ) ; } extern "C" { pub fn mkl_dspffrt2 ( ap : * mut f64 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f64 , work2 : * mut f64 ) ; } extern "C" { pub fn mkl_dspffrt2_ ( ap : * mut f64 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f64 , work2 : * mut f64 ) ; } extern "C" { pub fn MKL_DSPFFRTX ( ap : * mut f64 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f64 , work2 : * mut f64 ) ; } extern "C" { pub fn mkl_dspffrtx ( ap : * mut f64 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f64 , work2 : * mut f64 ) ; } extern "C" { pub fn mkl_dspffrtx_ ( ap : * mut f64 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f64 , work2 : * mut f64 ) ; } extern "C" { pub fn MKL_SSPFFRT2 ( ap : * mut f32 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f32 , work2 : * mut f32 ) ; } extern "C" { pub fn mkl_sspffrt2 ( ap : * mut f32 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f32 , work2 : * mut f32 ) ; } extern "C" { pub fn mkl_sspffrt2_ ( ap : * mut f32 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f32 , work2 : * mut f32 ) ; } extern "C" { pub fn MKL_SSPFFRTX ( ap : * mut f32 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f32 , work2 : * mut f32 ) ; } extern "C" { pub fn mkl_sspffrtx ( ap : * mut f32 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f32 , work2 : * mut f32 ) ; } extern "C" { pub fn mkl_sspffrtx_ ( ap : * mut f32 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut f32 , work2 : * mut f32 ) ; } extern "C" { pub fn MKL_ZSPFFRT2 ( ap : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , work2 : * mut MKL_Complex16 ) ; } extern "C" { pub fn mkl_zspffrt2 ( ap : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , work2 : * mut MKL_Complex16 ) ; } extern "C" { pub fn mkl_zspffrt2_ ( ap : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , work2 : * mut MKL_Complex16 ) ; } extern "C" { pub fn MKL_ZSPFFRTX ( ap : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , work2 : * mut MKL_Complex16 ) ; } extern "C" { pub fn mkl_zspffrtx ( ap : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , work2 : * mut MKL_Complex16 ) ; } extern "C" { pub fn mkl_zspffrtx_ ( ap : * mut MKL_Complex16 , n : * const :: std :: os :: raw :: c_int , ncolm : * const :: std :: os :: raw :: c_int , work : * mut MKL_Complex16 , work2 : * mut MKL_Complex16 ) ; } extern "C" { pub fn MKL_PROGRESS ( thread : * mut :: std :: os :: raw :: c_int , step : * mut :: std :: os :: raw :: c_int , stage : * mut :: std :: os :: raw :: c_char , lstage : :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn MKL_PROGRESS_ ( thread : * mut :: std :: os :: raw :: c_int , step : * mut :: std :: os :: raw :: c_int , stage : * mut :: std :: os :: raw :: c_char , lstage : :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn mkl_progress ( thread : * mut :: std :: os :: raw :: c_int , step : * mut :: std :: os :: raw :: c_int , stage : * mut :: std :: os :: raw :: c_char , lstage : :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn mkl_progress_ ( thread : * mut :: std :: os :: raw :: c_int , step : * mut :: std :: os :: raw :: c_int , stage : * mut :: std :: os :: raw :: c_char , lstage : :: std :: os :: raw :: c_int ) -> :: std :: os :: raw :: c_int ; }